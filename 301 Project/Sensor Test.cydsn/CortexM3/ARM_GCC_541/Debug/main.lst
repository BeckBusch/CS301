ARM GAS  C:\Users\smas270\AppData\Local\Temp\cclSMZfk.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.isr_eoc_1,"ax",%progbits
  20              		.align	2
  21              		.global	isr_eoc_1
  22              		.thumb
  23              		.thumb_func
  24              		.type	isr_eoc_1, %function
  25              	isr_eoc_1:
  26              	.LFB63:
  27              		.file 1 "main.c"
   1:main.c        **** #include "project.h"
   2:main.c        **** #include "motors.h"
   3:main.c        **** 
   4:main.c        **** #define ON 1
   5:main.c        **** #define OFF 0
   6:main.c        **** 
   7:main.c        **** // FL, FR, CL, CR, BC = front left, front right, center left, center right, back center respectivel
   8:main.c        **** #define FL 0
   9:main.c        **** #define FR 1
  10:main.c        **** #define CL 2
  11:main.c        **** #define CR 3
  12:main.c        **** #define BC 4
  13:main.c        **** 
  14:main.c        **** // State values.
  15:main.c        **** #define FORWARD 0
  16:main.c        **** #define TURNING_LEFT 1
  17:main.c        **** #define TURNING_RIGHT 2
  18:main.c        **** #define CORRECTION 3
  19:main.c        **** 
  20:main.c        **** // Prototype declarations.
  21:main.c        **** CY_ISR_PROTO(isr_eoc_1);
  22:main.c        **** 
  23:main.c        **** uint8 channel = 0;
  24:main.c        **** 
  25:main.c        **** uint16 ADCResult;
  26:main.c        **** uint16 milliVoltReading;
  27:main.c        **** uint16 count = 0;
  28:main.c        **** uint16 state = FORWARD;
  29:main.c        **** 
  30:main.c        **** uint8 sensor_state[5];
ARM GAS  C:\Users\smas270\AppData\Local\Temp\cclSMZfk.s 			page 2


  31:main.c        **** 
  32:main.c        **** CY_ISR(isr_eoc_1){
  28              		.loc 1 32 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33:main.c        ****     // Change the ADC channel each time an eoc interrupt is generated.
  34:main.c        ****     if (channel == 4) {
  33              		.loc 1 34 0
  34 0000 054B     		ldr	r3, .L4
  35 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  36 0004 042B     		cmp	r3, #4
  37 0006 03D1     		bne	.L2
  35:main.c        ****         channel = 0;
  38              		.loc 1 35 0
  39 0008 0022     		movs	r2, #0
  40 000a 034B     		ldr	r3, .L4
  41 000c 1A70     		strb	r2, [r3]
  42 000e 7047     		bx	lr
  43              	.L2:
  36:main.c        ****     } else {
  37:main.c        ****         channel++;
  44              		.loc 1 37 0
  45 0010 0133     		adds	r3, r3, #1
  46 0012 014A     		ldr	r2, .L4
  47 0014 1370     		strb	r3, [r2]
  48 0016 7047     		bx	lr
  49              	.L5:
  50              		.align	2
  51              	.L4:
  52 0018 00000000 		.word	.LANCHOR0
  53              		.cfi_endproc
  54              	.LFE63:
  55              		.size	isr_eoc_1, .-isr_eoc_1
  56              		.section	.text.main,"ax",%progbits
  57              		.align	2
  58              		.global	main
  59              		.thumb
  60              		.thumb_func
  61              		.type	main, %function
  62              	main:
  63              	.LFB64:
  38:main.c        ****     }
  39:main.c        **** }
  40:main.c        **** 
  41:main.c        **** int main(void){
  64              		.loc 1 41 0
  65              		.cfi_startproc
  66              		@ Volatile: function does not return.
  67              		@ args = 0, pretend = 0, frame = 0
  68              		@ frame_needed = 0, uses_anonymous_args = 0
  69 0000 08B5     		push	{r3, lr}
  70              		.cfi_def_cfa_offset 8
  71              		.cfi_offset 3, -8
  72              		.cfi_offset 14, -4
  42:main.c        ****     
ARM GAS  C:\Users\smas270\AppData\Local\Temp\cclSMZfk.s 			page 3


  43:main.c        ****     // Enable global interrupts as well as start and enable the isr.
  44:main.c        ****     CyGlobalIntEnable;
  73              		.loc 1 44 0
  74              		.syntax unified
  75              	@ 44 "main.c" 1
  76 0002 62B6     		CPSIE   i
  77              	@ 0 "" 2
  45:main.c        ****     isr_eoc_1_StartEx(isr_eoc_1);
  78              		.loc 1 45 0
  79              		.thumb
  80              		.syntax unified
  81 0004 2E48     		ldr	r0, .L20
  82 0006 FFF7FEFF 		bl	isr_eoc_1_StartEx
  83              	.LVL0:
  46:main.c        ****     //isr_eoc_1_Enable();
  47:main.c        ****     //isr_eoc_2_StartEx(isr_eoc_2);
  48:main.c        ****     //isr_eoc_2_Enable();
  49:main.c        ****     //isr_timer_StartEx(isr_timer);
  50:main.c        ****     //isr_timer_Enable();
  51:main.c        ****     
  52:main.c        ****     // Start the ADC and begin conversions (in free running mode so will continue to convert).
  53:main.c        ****     ADC_SAR_Seq_1_Start();
  84              		.loc 1 53 0
  85 000a FFF7FEFF 		bl	ADC_SAR_Seq_1_Start
  86              	.LVL1:
  54:main.c        ****     ADC_SAR_Seq_1_StartConvert();
  87              		.loc 1 54 0
  88 000e FFF7FEFF 		bl	ADC_SAR_Seq_1_StartConvert
  89              	.LVL2:
  90              	.L7:
  55:main.c        ****     
  56:main.c        ****     //PWM_1_WritePeriod(250);
  57:main.c        ****     //PWM_1_Start();
  58:main.c        ****     //PWM_1_WriteCompare(83);
  59:main.c        ****         
  60:main.c        ****     //PWM_2_WritePeriod(250);
  61:main.c        ****     //PWM_2_Start();
  62:main.c        ****     //PWM_2_WriteCompare(90);
  63:main.c        ****     
  64:main.c        ****     //Timer_1_Start();
  65:main.c        ****         
  66:main.c        ****     while(1) {
  67:main.c        ****         
  68:main.c        **** // If the conversion result is ready, put it into a variable and convert it into millivolts.
  69:main.c        ****         ADC_SAR_Seq_1_IsEndConversion(ADC_SAR_Seq_1_WAIT_FOR_RESULT);
  91              		.loc 1 69 0
  92 0012 0020     		movs	r0, #0
  93 0014 FFF7FEFF 		bl	ADC_SAR_Seq_1_IsEndConversion
  94              	.LVL3:
  70:main.c        ****         ADCResult = ADC_SAR_Seq_1_GetResult16(channel);
  95              		.loc 1 70 0
  96 0018 2A4B     		ldr	r3, .L20+4
  97 001a 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
  98 001c FFF7FEFF 		bl	ADC_SAR_Seq_1_GetResult16
  99              	.LVL4:
 100 0020 294B     		ldr	r3, .L20+8
 101 0022 1880     		strh	r0, [r3]	@ movhi
ARM GAS  C:\Users\smas270\AppData\Local\Temp\cclSMZfk.s 			page 4


  71:main.c        ****         milliVoltReading = ADC_SAR_Seq_1_CountsTo_mVolts(ADCResult);
 102              		.loc 1 71 0
 103 0024 FFF7FEFF 		bl	ADC_SAR_Seq_1_CountsTo_mVolts
 104              	.LVL5:
 105 0028 80B2     		uxth	r0, r0
 106 002a 284B     		ldr	r3, .L20+12
 107 002c 1880     		strh	r0, [r3]	@ movhi
  72:main.c        ****         
  73:main.c        ****         if (milliVoltReading >= 800) {
 108              		.loc 1 73 0
 109 002e B0F5487F 		cmp	r0, #800
 110 0032 01D3     		bcc	.L8
  74:main.c        ****             turn_left();
 111              		.loc 1 74 0
 112 0034 FFF7FEFF 		bl	turn_left
 113              	.LVL6:
 114              	.L8:
  75:main.c        ****         }
  76:main.c        ****             
  77:main.c        ****         // If the milliVolt reading is above the required threshold, perform the requested operatio
  78:main.c        ****         if (milliVoltReading >= 800) {
 115              		.loc 1 78 0
 116 0038 244B     		ldr	r3, .L20+12
 117 003a 1B88     		ldrh	r3, [r3]
 118 003c B3F5487F 		cmp	r3, #800
 119 0040 1ED3     		bcc	.L9
  79:main.c        ****             // Change the position in the sensor_state array depending on the channel being read.
  80:main.c        ****             if (channel == 0) {
 120              		.loc 1 80 0
 121 0042 204B     		ldr	r3, .L20+4
 122 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 123 0046 1BB9     		cbnz	r3, .L10
  81:main.c        ****                 sensor_state[FL] = ON;
 124              		.loc 1 81 0
 125 0048 0122     		movs	r2, #1
 126 004a 214B     		ldr	r3, .L20+16
 127 004c 1A70     		strb	r2, [r3]
 128 004e E0E7     		b	.L7
 129              	.L10:
  82:main.c        ****             } else if (channel == 1) {
 130              		.loc 1 82 0
 131 0050 012B     		cmp	r3, #1
 132 0052 03D1     		bne	.L12
  83:main.c        ****                 sensor_state[FR] = ON;
 133              		.loc 1 83 0
 134 0054 0122     		movs	r2, #1
 135 0056 1E4B     		ldr	r3, .L20+16
 136 0058 5A70     		strb	r2, [r3, #1]
 137 005a DAE7     		b	.L7
 138              	.L12:
  84:main.c        ****             } else if (channel == 2) {
 139              		.loc 1 84 0
 140 005c 022B     		cmp	r3, #2
 141 005e 03D1     		bne	.L13
  85:main.c        ****                 sensor_state[CL] = ON;
 142              		.loc 1 85 0
 143 0060 0122     		movs	r2, #1
ARM GAS  C:\Users\smas270\AppData\Local\Temp\cclSMZfk.s 			page 5


 144 0062 1B4B     		ldr	r3, .L20+16
 145 0064 9A70     		strb	r2, [r3, #2]
 146 0066 D4E7     		b	.L7
 147              	.L13:
  86:main.c        ****             } else if (channel == 3) {
 148              		.loc 1 86 0
 149 0068 032B     		cmp	r3, #3
 150 006a 03D1     		bne	.L14
  87:main.c        ****                 sensor_state[CR] = ON;
 151              		.loc 1 87 0
 152 006c 0122     		movs	r2, #1
 153 006e 184B     		ldr	r3, .L20+16
 154 0070 DA70     		strb	r2, [r3, #3]
 155 0072 CEE7     		b	.L7
 156              	.L14:
  88:main.c        ****             } else if (channel == 4) {
 157              		.loc 1 88 0
 158 0074 042B     		cmp	r3, #4
 159 0076 CCD1     		bne	.L7
  89:main.c        ****                 sensor_state[BC] = ON;
 160              		.loc 1 89 0
 161 0078 0122     		movs	r2, #1
 162 007a 154B     		ldr	r3, .L20+16
 163 007c 1A71     		strb	r2, [r3, #4]
 164 007e C8E7     		b	.L7
 165              	.L9:
  90:main.c        ****             }
  91:main.c        ****         } else {
  92:main.c        ****             if (channel == 0) {
 166              		.loc 1 92 0
 167 0080 104B     		ldr	r3, .L20+4
 168 0082 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 169 0084 1BB9     		cbnz	r3, .L15
  93:main.c        ****                 sensor_state[FL] = OFF;
 170              		.loc 1 93 0
 171 0086 0022     		movs	r2, #0
 172 0088 114B     		ldr	r3, .L20+16
 173 008a 1A70     		strb	r2, [r3]
 174 008c C1E7     		b	.L7
 175              	.L15:
  94:main.c        ****             } else if (channel == 1) {
 176              		.loc 1 94 0
 177 008e 012B     		cmp	r3, #1
 178 0090 03D1     		bne	.L16
  95:main.c        ****                 sensor_state[FR] = OFF;
 179              		.loc 1 95 0
 180 0092 0022     		movs	r2, #0
 181 0094 0E4B     		ldr	r3, .L20+16
 182 0096 5A70     		strb	r2, [r3, #1]
 183 0098 BBE7     		b	.L7
 184              	.L16:
  96:main.c        ****             } else if (channel == 2) {
 185              		.loc 1 96 0
 186 009a 022B     		cmp	r3, #2
 187 009c 03D1     		bne	.L17
  97:main.c        ****                 sensor_state[CL] = OFF;
 188              		.loc 1 97 0
ARM GAS  C:\Users\smas270\AppData\Local\Temp\cclSMZfk.s 			page 6


 189 009e 0022     		movs	r2, #0
 190 00a0 0B4B     		ldr	r3, .L20+16
 191 00a2 9A70     		strb	r2, [r3, #2]
 192 00a4 B5E7     		b	.L7
 193              	.L17:
  98:main.c        ****             } else if (channel == 3) {
 194              		.loc 1 98 0
 195 00a6 032B     		cmp	r3, #3
 196 00a8 03D1     		bne	.L18
  99:main.c        ****                 sensor_state[CR] = OFF;
 197              		.loc 1 99 0
 198 00aa 0022     		movs	r2, #0
 199 00ac 084B     		ldr	r3, .L20+16
 200 00ae DA70     		strb	r2, [r3, #3]
 201 00b0 AFE7     		b	.L7
 202              	.L18:
 100:main.c        ****             } else if (channel == 4) {
 203              		.loc 1 100 0
 204 00b2 042B     		cmp	r3, #4
 205 00b4 ADD1     		bne	.L7
 101:main.c        ****                 sensor_state[BC] = OFF;
 206              		.loc 1 101 0
 207 00b6 0022     		movs	r2, #0
 208 00b8 054B     		ldr	r3, .L20+16
 209 00ba 1A71     		strb	r2, [r3, #4]
 210 00bc A9E7     		b	.L7
 211              	.L21:
 212 00be 00BF     		.align	2
 213              	.L20:
 214 00c0 00000000 		.word	isr_eoc_1
 215 00c4 00000000 		.word	.LANCHOR0
 216 00c8 00000000 		.word	ADCResult
 217 00cc 00000000 		.word	milliVoltReading
 218 00d0 00000000 		.word	sensor_state
 219              		.cfi_endproc
 220              	.LFE64:
 221              		.size	main, .-main
 222              		.comm	sensor_state,5,4
 223              		.global	state
 224              		.global	count
 225              		.comm	milliVoltReading,2,2
 226              		.comm	ADCResult,2,2
 227              		.global	channel
 228              		.bss
 229              		.align	1
 230              		.set	.LANCHOR0,. + 0
 231              		.type	channel, %object
 232              		.size	channel, 1
 233              	channel:
 234 0000 00       		.space	1
 235 0001 00       		.space	1
 236              		.type	state, %object
 237              		.size	state, 2
 238              	state:
 239 0002 0000     		.space	2
 240              		.type	count, %object
 241              		.size	count, 2
ARM GAS  C:\Users\smas270\AppData\Local\Temp\cclSMZfk.s 			page 7


 242              	count:
 243 0004 0000     		.space	2
 244              		.text
 245              	.Letext0:
 246              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 247              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 248              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 249              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 250              		.file 6 "Generated_Source\\PSoC5/isr_eoc_1.h"
 251              		.file 7 "Generated_Source\\PSoC5/ADC_SAR_Seq_1.h"
 252              		.file 8 "motors.h"
 253              		.section	.debug_info,"",%progbits
 254              	.Ldebug_info0:
 255 0000 0F020000 		.4byte	0x20f
 256 0004 0400     		.2byte	0x4
 257 0006 00000000 		.4byte	.Ldebug_abbrev0
 258 000a 04       		.byte	0x4
 259 000b 01       		.uleb128 0x1
 260 000c BA000000 		.4byte	.LASF32
 261 0010 0C       		.byte	0xc
 262 0011 14020000 		.4byte	.LASF33
 263 0015 18000000 		.4byte	.LASF34
 264 0019 00000000 		.4byte	.Ldebug_ranges0+0
 265 001d 00000000 		.4byte	0
 266 0021 00000000 		.4byte	.Ldebug_line0
 267 0025 02       		.uleb128 0x2
 268 0026 01       		.byte	0x1
 269 0027 06       		.byte	0x6
 270 0028 91020000 		.4byte	.LASF0
 271 002c 02       		.uleb128 0x2
 272 002d 01       		.byte	0x1
 273 002e 08       		.byte	0x8
 274 002f AC000000 		.4byte	.LASF1
 275 0033 02       		.uleb128 0x2
 276 0034 02       		.byte	0x2
 277 0035 05       		.byte	0x5
 278 0036 44020000 		.4byte	.LASF2
 279 003a 02       		.uleb128 0x2
 280 003b 02       		.byte	0x2
 281 003c 07       		.byte	0x7
 282 003d 5A010000 		.4byte	.LASF3
 283 0041 03       		.uleb128 0x3
 284 0042 0E000000 		.4byte	.LASF9
 285 0046 02       		.byte	0x2
 286 0047 3F       		.byte	0x3f
 287 0048 4C000000 		.4byte	0x4c
 288 004c 02       		.uleb128 0x2
 289 004d 04       		.byte	0x4
 290 004e 05       		.byte	0x5
 291 004f 5E020000 		.4byte	.LASF4
 292 0053 02       		.uleb128 0x2
 293 0054 04       		.byte	0x4
 294 0055 07       		.byte	0x7
 295 0056 48010000 		.4byte	.LASF5
 296 005a 02       		.uleb128 0x2
 297 005b 08       		.byte	0x8
 298 005c 05       		.byte	0x5
ARM GAS  C:\Users\smas270\AppData\Local\Temp\cclSMZfk.s 			page 8


 299 005d 06020000 		.4byte	.LASF6
 300 0061 02       		.uleb128 0x2
 301 0062 08       		.byte	0x8
 302 0063 07       		.byte	0x7
 303 0064 D1010000 		.4byte	.LASF7
 304 0068 04       		.uleb128 0x4
 305 0069 04       		.byte	0x4
 306 006a 05       		.byte	0x5
 307 006b 696E7400 		.ascii	"int\000"
 308 006f 02       		.uleb128 0x2
 309 0070 04       		.byte	0x4
 310 0071 07       		.byte	0x7
 311 0072 A9010000 		.4byte	.LASF8
 312 0076 03       		.uleb128 0x3
 313 0077 F5010000 		.4byte	.LASF10
 314 007b 03       		.byte	0x3
 315 007c 2C       		.byte	0x2c
 316 007d 41000000 		.4byte	0x41
 317 0081 05       		.uleb128 0x5
 318 0082 4E020000 		.4byte	.LASF11
 319 0086 04       		.byte	0x4
 320 0087 E401     		.2byte	0x1e4
 321 0089 2C000000 		.4byte	0x2c
 322 008d 05       		.uleb128 0x5
 323 008e 90010000 		.4byte	.LASF12
 324 0092 04       		.byte	0x4
 325 0093 E501     		.2byte	0x1e5
 326 0095 3A000000 		.4byte	0x3a
 327 0099 02       		.uleb128 0x2
 328 009a 04       		.byte	0x4
 329 009b 04       		.byte	0x4
 330 009c A6000000 		.4byte	.LASF13
 331 00a0 02       		.uleb128 0x2
 332 00a1 08       		.byte	0x8
 333 00a2 04       		.byte	0x4
 334 00a3 7A010000 		.4byte	.LASF14
 335 00a7 02       		.uleb128 0x2
 336 00a8 01       		.byte	0x1
 337 00a9 08       		.byte	0x8
 338 00aa 1B020000 		.4byte	.LASF15
 339 00ae 02       		.uleb128 0x2
 340 00af 08       		.byte	0x8
 341 00b0 04       		.byte	0x4
 342 00b1 85020000 		.4byte	.LASF16
 343 00b5 02       		.uleb128 0x2
 344 00b6 04       		.byte	0x4
 345 00b7 07       		.byte	0x7
 346 00b8 FD010000 		.4byte	.LASF17
 347 00bc 06       		.uleb128 0x6
 348 00bd 54020000 		.4byte	.LASF35
 349 00c1 01       		.byte	0x1
 350 00c2 20       		.byte	0x20
 351 00c3 00000000 		.4byte	.LFB63
 352 00c7 1C000000 		.4byte	.LFE63-.LFB63
 353 00cb 01       		.uleb128 0x1
 354 00cc 9C       		.byte	0x9c
 355 00cd 07       		.uleb128 0x7
ARM GAS  C:\Users\smas270\AppData\Local\Temp\cclSMZfk.s 			page 9


 356 00ce 8B010000 		.4byte	.LASF36
 357 00d2 01       		.byte	0x1
 358 00d3 29       		.byte	0x29
 359 00d4 68000000 		.4byte	0x68
 360 00d8 00000000 		.4byte	.LFB64
 361 00dc D4000000 		.4byte	.LFE64-.LFB64
 362 00e0 01       		.uleb128 0x1
 363 00e1 9C       		.byte	0x9c
 364 00e2 3E010000 		.4byte	0x13e
 365 00e6 08       		.uleb128 0x8
 366 00e7 0A000000 		.4byte	.LVL0
 367 00eb C5010000 		.4byte	0x1c5
 368 00ef FD000000 		.4byte	0xfd
 369 00f3 09       		.uleb128 0x9
 370 00f4 01       		.uleb128 0x1
 371 00f5 50       		.byte	0x50
 372 00f6 05       		.uleb128 0x5
 373 00f7 03       		.byte	0x3
 374 00f8 00000000 		.4byte	isr_eoc_1
 375 00fc 00       		.byte	0
 376 00fd 0A       		.uleb128 0xa
 377 00fe 0E000000 		.4byte	.LVL1
 378 0102 D0010000 		.4byte	0x1d0
 379 0106 0A       		.uleb128 0xa
 380 0107 12000000 		.4byte	.LVL2
 381 010b DB010000 		.4byte	0x1db
 382 010f 08       		.uleb128 0x8
 383 0110 18000000 		.4byte	.LVL3
 384 0114 E6010000 		.4byte	0x1e6
 385 0118 22010000 		.4byte	0x122
 386 011c 09       		.uleb128 0x9
 387 011d 01       		.uleb128 0x1
 388 011e 50       		.byte	0x50
 389 011f 01       		.uleb128 0x1
 390 0120 30       		.byte	0x30
 391 0121 00       		.byte	0
 392 0122 0A       		.uleb128 0xa
 393 0123 20000000 		.4byte	.LVL4
 394 0127 F1010000 		.4byte	0x1f1
 395 012b 0A       		.uleb128 0xa
 396 012c 28000000 		.4byte	.LVL5
 397 0130 FC010000 		.4byte	0x1fc
 398 0134 0A       		.uleb128 0xa
 399 0135 38000000 		.4byte	.LVL6
 400 0139 07020000 		.4byte	0x207
 401 013d 00       		.byte	0
 402 013e 0B       		.uleb128 0xb
 403 013f 6D010000 		.4byte	.LASF18
 404 0143 05       		.byte	0x5
 405 0144 1207     		.2byte	0x712
 406 0146 4A010000 		.4byte	0x14a
 407 014a 0C       		.uleb128 0xc
 408 014b 76000000 		.4byte	0x76
 409 014f 0D       		.uleb128 0xd
 410 0150 00000000 		.4byte	.LASF19
 411 0154 01       		.byte	0x1
 412 0155 17       		.byte	0x17
ARM GAS  C:\Users\smas270\AppData\Local\Temp\cclSMZfk.s 			page 10


 413 0156 81000000 		.4byte	0x81
 414 015a 05       		.uleb128 0x5
 415 015b 03       		.byte	0x3
 416 015c 00000000 		.4byte	channel
 417 0160 0D       		.uleb128 0xd
 418 0161 81010000 		.4byte	.LASF20
 419 0165 01       		.byte	0x1
 420 0166 19       		.byte	0x19
 421 0167 8D000000 		.4byte	0x8d
 422 016b 05       		.uleb128 0x5
 423 016c 03       		.byte	0x3
 424 016d 00000000 		.4byte	ADCResult
 425 0171 0D       		.uleb128 0xd
 426 0172 9D020000 		.4byte	.LASF21
 427 0176 01       		.byte	0x1
 428 0177 1A       		.byte	0x1a
 429 0178 8D000000 		.4byte	0x8d
 430 017c 05       		.uleb128 0x5
 431 017d 03       		.byte	0x3
 432 017e 00000000 		.4byte	milliVoltReading
 433 0182 0D       		.uleb128 0xd
 434 0183 3E020000 		.4byte	.LASF22
 435 0187 01       		.byte	0x1
 436 0188 1B       		.byte	0x1b
 437 0189 8D000000 		.4byte	0x8d
 438 018d 05       		.uleb128 0x5
 439 018e 03       		.byte	0x3
 440 018f 00000000 		.4byte	count
 441 0193 0D       		.uleb128 0xd
 442 0194 08000000 		.4byte	.LASF23
 443 0198 01       		.byte	0x1
 444 0199 1C       		.byte	0x1c
 445 019a 8D000000 		.4byte	0x8d
 446 019e 05       		.uleb128 0x5
 447 019f 03       		.byte	0x3
 448 01a0 00000000 		.4byte	state
 449 01a4 0E       		.uleb128 0xe
 450 01a5 81000000 		.4byte	0x81
 451 01a9 B4010000 		.4byte	0x1b4
 452 01ad 0F       		.uleb128 0xf
 453 01ae B5000000 		.4byte	0xb5
 454 01b2 04       		.byte	0x4
 455 01b3 00       		.byte	0
 456 01b4 0D       		.uleb128 0xd
 457 01b5 E8010000 		.4byte	.LASF24
 458 01b9 01       		.byte	0x1
 459 01ba 1E       		.byte	0x1e
 460 01bb A4010000 		.4byte	0x1a4
 461 01bf 05       		.uleb128 0x5
 462 01c0 03       		.byte	0x3
 463 01c1 00000000 		.4byte	sensor_state
 464 01c5 10       		.uleb128 0x10
 465 01c6 97010000 		.4byte	.LASF25
 466 01ca 97010000 		.4byte	.LASF25
 467 01ce 06       		.byte	0x6
 468 01cf 18       		.byte	0x18
 469 01d0 10       		.uleb128 0x10
ARM GAS  C:\Users\smas270\AppData\Local\Temp\cclSMZfk.s 			page 11


 470 01d1 92000000 		.4byte	.LASF26
 471 01d5 92000000 		.4byte	.LASF26
 472 01d9 07       		.byte	0x7
 473 01da 31       		.byte	0x31
 474 01db 10       		.uleb128 0x10
 475 01dc B6010000 		.4byte	.LASF27
 476 01e0 B6010000 		.4byte	.LASF27
 477 01e4 07       		.byte	0x7
 478 01e5 A1       		.byte	0xa1
 479 01e6 10       		.uleb128 0x10
 480 01e7 67020000 		.4byte	.LASF28
 481 01eb 67020000 		.4byte	.LASF28
 482 01ef 07       		.byte	0x7
 483 01f0 34       		.byte	0x34
 484 01f1 10       		.uleb128 0x10
 485 01f2 AE020000 		.4byte	.LASF29
 486 01f6 AE020000 		.4byte	.LASF29
 487 01fa 07       		.byte	0x7
 488 01fb 35       		.byte	0x35
 489 01fc 10       		.uleb128 0x10
 490 01fd 20020000 		.4byte	.LASF30
 491 0201 20020000 		.4byte	.LASF30
 492 0205 07       		.byte	0x7
 493 0206 3A       		.byte	0x3a
 494 0207 10       		.uleb128 0x10
 495 0208 88000000 		.4byte	.LASF31
 496 020c 88000000 		.4byte	.LASF31
 497 0210 08       		.byte	0x8
 498 0211 11       		.byte	0x11
 499 0212 00       		.byte	0
 500              		.section	.debug_abbrev,"",%progbits
 501              	.Ldebug_abbrev0:
 502 0000 01       		.uleb128 0x1
 503 0001 11       		.uleb128 0x11
 504 0002 01       		.byte	0x1
 505 0003 25       		.uleb128 0x25
 506 0004 0E       		.uleb128 0xe
 507 0005 13       		.uleb128 0x13
 508 0006 0B       		.uleb128 0xb
 509 0007 03       		.uleb128 0x3
 510 0008 0E       		.uleb128 0xe
 511 0009 1B       		.uleb128 0x1b
 512 000a 0E       		.uleb128 0xe
 513 000b 55       		.uleb128 0x55
 514 000c 17       		.uleb128 0x17
 515 000d 11       		.uleb128 0x11
 516 000e 01       		.uleb128 0x1
 517 000f 10       		.uleb128 0x10
 518 0010 17       		.uleb128 0x17
 519 0011 00       		.byte	0
 520 0012 00       		.byte	0
 521 0013 02       		.uleb128 0x2
 522 0014 24       		.uleb128 0x24
 523 0015 00       		.byte	0
 524 0016 0B       		.uleb128 0xb
 525 0017 0B       		.uleb128 0xb
 526 0018 3E       		.uleb128 0x3e
ARM GAS  C:\Users\smas270\AppData\Local\Temp\cclSMZfk.s 			page 12


 527 0019 0B       		.uleb128 0xb
 528 001a 03       		.uleb128 0x3
 529 001b 0E       		.uleb128 0xe
 530 001c 00       		.byte	0
 531 001d 00       		.byte	0
 532 001e 03       		.uleb128 0x3
 533 001f 16       		.uleb128 0x16
 534 0020 00       		.byte	0
 535 0021 03       		.uleb128 0x3
 536 0022 0E       		.uleb128 0xe
 537 0023 3A       		.uleb128 0x3a
 538 0024 0B       		.uleb128 0xb
 539 0025 3B       		.uleb128 0x3b
 540 0026 0B       		.uleb128 0xb
 541 0027 49       		.uleb128 0x49
 542 0028 13       		.uleb128 0x13
 543 0029 00       		.byte	0
 544 002a 00       		.byte	0
 545 002b 04       		.uleb128 0x4
 546 002c 24       		.uleb128 0x24
 547 002d 00       		.byte	0
 548 002e 0B       		.uleb128 0xb
 549 002f 0B       		.uleb128 0xb
 550 0030 3E       		.uleb128 0x3e
 551 0031 0B       		.uleb128 0xb
 552 0032 03       		.uleb128 0x3
 553 0033 08       		.uleb128 0x8
 554 0034 00       		.byte	0
 555 0035 00       		.byte	0
 556 0036 05       		.uleb128 0x5
 557 0037 16       		.uleb128 0x16
 558 0038 00       		.byte	0
 559 0039 03       		.uleb128 0x3
 560 003a 0E       		.uleb128 0xe
 561 003b 3A       		.uleb128 0x3a
 562 003c 0B       		.uleb128 0xb
 563 003d 3B       		.uleb128 0x3b
 564 003e 05       		.uleb128 0x5
 565 003f 49       		.uleb128 0x49
 566 0040 13       		.uleb128 0x13
 567 0041 00       		.byte	0
 568 0042 00       		.byte	0
 569 0043 06       		.uleb128 0x6
 570 0044 2E       		.uleb128 0x2e
 571 0045 00       		.byte	0
 572 0046 3F       		.uleb128 0x3f
 573 0047 19       		.uleb128 0x19
 574 0048 03       		.uleb128 0x3
 575 0049 0E       		.uleb128 0xe
 576 004a 3A       		.uleb128 0x3a
 577 004b 0B       		.uleb128 0xb
 578 004c 3B       		.uleb128 0x3b
 579 004d 0B       		.uleb128 0xb
 580 004e 27       		.uleb128 0x27
 581 004f 19       		.uleb128 0x19
 582 0050 11       		.uleb128 0x11
 583 0051 01       		.uleb128 0x1
ARM GAS  C:\Users\smas270\AppData\Local\Temp\cclSMZfk.s 			page 13


 584 0052 12       		.uleb128 0x12
 585 0053 06       		.uleb128 0x6
 586 0054 40       		.uleb128 0x40
 587 0055 18       		.uleb128 0x18
 588 0056 9742     		.uleb128 0x2117
 589 0058 19       		.uleb128 0x19
 590 0059 00       		.byte	0
 591 005a 00       		.byte	0
 592 005b 07       		.uleb128 0x7
 593 005c 2E       		.uleb128 0x2e
 594 005d 01       		.byte	0x1
 595 005e 3F       		.uleb128 0x3f
 596 005f 19       		.uleb128 0x19
 597 0060 03       		.uleb128 0x3
 598 0061 0E       		.uleb128 0xe
 599 0062 3A       		.uleb128 0x3a
 600 0063 0B       		.uleb128 0xb
 601 0064 3B       		.uleb128 0x3b
 602 0065 0B       		.uleb128 0xb
 603 0066 27       		.uleb128 0x27
 604 0067 19       		.uleb128 0x19
 605 0068 49       		.uleb128 0x49
 606 0069 13       		.uleb128 0x13
 607 006a 8701     		.uleb128 0x87
 608 006c 19       		.uleb128 0x19
 609 006d 11       		.uleb128 0x11
 610 006e 01       		.uleb128 0x1
 611 006f 12       		.uleb128 0x12
 612 0070 06       		.uleb128 0x6
 613 0071 40       		.uleb128 0x40
 614 0072 18       		.uleb128 0x18
 615 0073 9742     		.uleb128 0x2117
 616 0075 19       		.uleb128 0x19
 617 0076 01       		.uleb128 0x1
 618 0077 13       		.uleb128 0x13
 619 0078 00       		.byte	0
 620 0079 00       		.byte	0
 621 007a 08       		.uleb128 0x8
 622 007b 898201   		.uleb128 0x4109
 623 007e 01       		.byte	0x1
 624 007f 11       		.uleb128 0x11
 625 0080 01       		.uleb128 0x1
 626 0081 31       		.uleb128 0x31
 627 0082 13       		.uleb128 0x13
 628 0083 01       		.uleb128 0x1
 629 0084 13       		.uleb128 0x13
 630 0085 00       		.byte	0
 631 0086 00       		.byte	0
 632 0087 09       		.uleb128 0x9
 633 0088 8A8201   		.uleb128 0x410a
 634 008b 00       		.byte	0
 635 008c 02       		.uleb128 0x2
 636 008d 18       		.uleb128 0x18
 637 008e 9142     		.uleb128 0x2111
 638 0090 18       		.uleb128 0x18
 639 0091 00       		.byte	0
 640 0092 00       		.byte	0
ARM GAS  C:\Users\smas270\AppData\Local\Temp\cclSMZfk.s 			page 14


 641 0093 0A       		.uleb128 0xa
 642 0094 898201   		.uleb128 0x4109
 643 0097 00       		.byte	0
 644 0098 11       		.uleb128 0x11
 645 0099 01       		.uleb128 0x1
 646 009a 31       		.uleb128 0x31
 647 009b 13       		.uleb128 0x13
 648 009c 00       		.byte	0
 649 009d 00       		.byte	0
 650 009e 0B       		.uleb128 0xb
 651 009f 34       		.uleb128 0x34
 652 00a0 00       		.byte	0
 653 00a1 03       		.uleb128 0x3
 654 00a2 0E       		.uleb128 0xe
 655 00a3 3A       		.uleb128 0x3a
 656 00a4 0B       		.uleb128 0xb
 657 00a5 3B       		.uleb128 0x3b
 658 00a6 05       		.uleb128 0x5
 659 00a7 49       		.uleb128 0x49
 660 00a8 13       		.uleb128 0x13
 661 00a9 3F       		.uleb128 0x3f
 662 00aa 19       		.uleb128 0x19
 663 00ab 3C       		.uleb128 0x3c
 664 00ac 19       		.uleb128 0x19
 665 00ad 00       		.byte	0
 666 00ae 00       		.byte	0
 667 00af 0C       		.uleb128 0xc
 668 00b0 35       		.uleb128 0x35
 669 00b1 00       		.byte	0
 670 00b2 49       		.uleb128 0x49
 671 00b3 13       		.uleb128 0x13
 672 00b4 00       		.byte	0
 673 00b5 00       		.byte	0
 674 00b6 0D       		.uleb128 0xd
 675 00b7 34       		.uleb128 0x34
 676 00b8 00       		.byte	0
 677 00b9 03       		.uleb128 0x3
 678 00ba 0E       		.uleb128 0xe
 679 00bb 3A       		.uleb128 0x3a
 680 00bc 0B       		.uleb128 0xb
 681 00bd 3B       		.uleb128 0x3b
 682 00be 0B       		.uleb128 0xb
 683 00bf 49       		.uleb128 0x49
 684 00c0 13       		.uleb128 0x13
 685 00c1 3F       		.uleb128 0x3f
 686 00c2 19       		.uleb128 0x19
 687 00c3 02       		.uleb128 0x2
 688 00c4 18       		.uleb128 0x18
 689 00c5 00       		.byte	0
 690 00c6 00       		.byte	0
 691 00c7 0E       		.uleb128 0xe
 692 00c8 01       		.uleb128 0x1
 693 00c9 01       		.byte	0x1
 694 00ca 49       		.uleb128 0x49
 695 00cb 13       		.uleb128 0x13
 696 00cc 01       		.uleb128 0x1
 697 00cd 13       		.uleb128 0x13
ARM GAS  C:\Users\smas270\AppData\Local\Temp\cclSMZfk.s 			page 15


 698 00ce 00       		.byte	0
 699 00cf 00       		.byte	0
 700 00d0 0F       		.uleb128 0xf
 701 00d1 21       		.uleb128 0x21
 702 00d2 00       		.byte	0
 703 00d3 49       		.uleb128 0x49
 704 00d4 13       		.uleb128 0x13
 705 00d5 2F       		.uleb128 0x2f
 706 00d6 0B       		.uleb128 0xb
 707 00d7 00       		.byte	0
 708 00d8 00       		.byte	0
 709 00d9 10       		.uleb128 0x10
 710 00da 2E       		.uleb128 0x2e
 711 00db 00       		.byte	0
 712 00dc 3F       		.uleb128 0x3f
 713 00dd 19       		.uleb128 0x19
 714 00de 3C       		.uleb128 0x3c
 715 00df 19       		.uleb128 0x19
 716 00e0 6E       		.uleb128 0x6e
 717 00e1 0E       		.uleb128 0xe
 718 00e2 03       		.uleb128 0x3
 719 00e3 0E       		.uleb128 0xe
 720 00e4 3A       		.uleb128 0x3a
 721 00e5 0B       		.uleb128 0xb
 722 00e6 3B       		.uleb128 0x3b
 723 00e7 0B       		.uleb128 0xb
 724 00e8 00       		.byte	0
 725 00e9 00       		.byte	0
 726 00ea 00       		.byte	0
 727              		.section	.debug_aranges,"",%progbits
 728 0000 24000000 		.4byte	0x24
 729 0004 0200     		.2byte	0x2
 730 0006 00000000 		.4byte	.Ldebug_info0
 731 000a 04       		.byte	0x4
 732 000b 00       		.byte	0
 733 000c 0000     		.2byte	0
 734 000e 0000     		.2byte	0
 735 0010 00000000 		.4byte	.LFB63
 736 0014 1C000000 		.4byte	.LFE63-.LFB63
 737 0018 00000000 		.4byte	.LFB64
 738 001c D4000000 		.4byte	.LFE64-.LFB64
 739 0020 00000000 		.4byte	0
 740 0024 00000000 		.4byte	0
 741              		.section	.debug_ranges,"",%progbits
 742              	.Ldebug_ranges0:
 743 0000 00000000 		.4byte	.LFB63
 744 0004 1C000000 		.4byte	.LFE63
 745 0008 00000000 		.4byte	.LFB64
 746 000c D4000000 		.4byte	.LFE64
 747 0010 00000000 		.4byte	0
 748 0014 00000000 		.4byte	0
 749              		.section	.debug_line,"",%progbits
 750              	.Ldebug_line0:
 751 0000 C1010000 		.section	.debug_str,"MS",%progbits,1
 751      02007A01 
 751      00000201 
 751      FB0E0D00 
ARM GAS  C:\Users\smas270\AppData\Local\Temp\cclSMZfk.s 			page 16


 751      01010101 
 752              	.LASF19:
 753 0000 6368616E 		.ascii	"channel\000"
 753      6E656C00 
 754              	.LASF23:
 755 0008 73746174 		.ascii	"state\000"
 755      6500
 756              	.LASF9:
 757 000e 5F5F696E 		.ascii	"__int32_t\000"
 757      7433325F 
 757      7400
 758              	.LASF34:
 759 0018 5C5C6669 		.ascii	"\\\\files.auckland.ac.nz\\myhome\\Downloads\\ENGGEN"
 759      6C65732E 
 759      6175636B 
 759      6C616E64 
 759      2E61632E 
 760 0046 20323039 		.ascii	" 209 Github\\project-project-group-7\\301 Project\\"
 760      20476974 
 760      6875625C 
 760      70726F6A 
 760      6563742D 
 761 0076 53656E73 		.ascii	"Sensor Test.cydsn\000"
 761      6F722054 
 761      6573742E 
 761      63796473 
 761      6E00
 762              	.LASF31:
 763 0088 7475726E 		.ascii	"turn_left\000"
 763      5F6C6566 
 763      7400
 764              	.LASF26:
 765 0092 4144435F 		.ascii	"ADC_SAR_Seq_1_Start\000"
 765      5341525F 
 765      5365715F 
 765      315F5374 
 765      61727400 
 766              	.LASF13:
 767 00a6 666C6F61 		.ascii	"float\000"
 767      7400
 768              	.LASF1:
 769 00ac 756E7369 		.ascii	"unsigned char\000"
 769      676E6564 
 769      20636861 
 769      7200
 770              	.LASF32:
 771 00ba 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 771      43313120 
 771      352E342E 
 771      31203230 
 771      31363036 
 772 00ed 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 772      20726576 
 772      6973696F 
 772      6E203233 
 772      37373135 
 773 0120 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
ARM GAS  C:\Users\smas270\AppData\Local\Temp\cclSMZfk.s 			page 17


 773      66756E63 
 773      74696F6E 
 773      2D736563 
 773      74696F6E 
 774              	.LASF5:
 775 0148 6C6F6E67 		.ascii	"long unsigned int\000"
 775      20756E73 
 775      69676E65 
 775      6420696E 
 775      7400
 776              	.LASF3:
 777 015a 73686F72 		.ascii	"short unsigned int\000"
 777      7420756E 
 777      7369676E 
 777      65642069 
 777      6E7400
 778              	.LASF18:
 779 016d 49544D5F 		.ascii	"ITM_RxBuffer\000"
 779      52784275 
 779      66666572 
 779      00
 780              	.LASF14:
 781 017a 646F7562 		.ascii	"double\000"
 781      6C6500
 782              	.LASF20:
 783 0181 41444352 		.ascii	"ADCResult\000"
 783      6573756C 
 783      7400
 784              	.LASF36:
 785 018b 6D61696E 		.ascii	"main\000"
 785      00
 786              	.LASF12:
 787 0190 75696E74 		.ascii	"uint16\000"
 787      313600
 788              	.LASF25:
 789 0197 6973725F 		.ascii	"isr_eoc_1_StartEx\000"
 789      656F635F 
 789      315F5374 
 789      61727445 
 789      7800
 790              	.LASF8:
 791 01a9 756E7369 		.ascii	"unsigned int\000"
 791      676E6564 
 791      20696E74 
 791      00
 792              	.LASF27:
 793 01b6 4144435F 		.ascii	"ADC_SAR_Seq_1_StartConvert\000"
 793      5341525F 
 793      5365715F 
 793      315F5374 
 793      61727443 
 794              	.LASF7:
 795 01d1 6C6F6E67 		.ascii	"long long unsigned int\000"
 795      206C6F6E 
 795      6720756E 
 795      7369676E 
 795      65642069 
ARM GAS  C:\Users\smas270\AppData\Local\Temp\cclSMZfk.s 			page 18


 796              	.LASF24:
 797 01e8 73656E73 		.ascii	"sensor_state\000"
 797      6F725F73 
 797      74617465 
 797      00
 798              	.LASF10:
 799 01f5 696E7433 		.ascii	"int32_t\000"
 799      325F7400 
 800              	.LASF17:
 801 01fd 73697A65 		.ascii	"sizetype\000"
 801      74797065 
 801      00
 802              	.LASF6:
 803 0206 6C6F6E67 		.ascii	"long long int\000"
 803      206C6F6E 
 803      6720696E 
 803      7400
 804              	.LASF33:
 805 0214 6D61696E 		.ascii	"main.c\000"
 805      2E6300
 806              	.LASF15:
 807 021b 63686172 		.ascii	"char\000"
 807      00
 808              	.LASF30:
 809 0220 4144435F 		.ascii	"ADC_SAR_Seq_1_CountsTo_mVolts\000"
 809      5341525F 
 809      5365715F 
 809      315F436F 
 809      756E7473 
 810              	.LASF22:
 811 023e 636F756E 		.ascii	"count\000"
 811      7400
 812              	.LASF2:
 813 0244 73686F72 		.ascii	"short int\000"
 813      7420696E 
 813      7400
 814              	.LASF11:
 815 024e 75696E74 		.ascii	"uint8\000"
 815      3800
 816              	.LASF35:
 817 0254 6973725F 		.ascii	"isr_eoc_1\000"
 817      656F635F 
 817      3100
 818              	.LASF4:
 819 025e 6C6F6E67 		.ascii	"long int\000"
 819      20696E74 
 819      00
 820              	.LASF28:
 821 0267 4144435F 		.ascii	"ADC_SAR_Seq_1_IsEndConversion\000"
 821      5341525F 
 821      5365715F 
 821      315F4973 
 821      456E6443 
 822              	.LASF16:
 823 0285 6C6F6E67 		.ascii	"long double\000"
 823      20646F75 
 823      626C6500 
ARM GAS  C:\Users\smas270\AppData\Local\Temp\cclSMZfk.s 			page 19


 824              	.LASF0:
 825 0291 7369676E 		.ascii	"signed char\000"
 825      65642063 
 825      68617200 
 826              	.LASF21:
 827 029d 6D696C6C 		.ascii	"milliVoltReading\000"
 827      69566F6C 
 827      74526561 
 827      64696E67 
 827      00
 828              	.LASF29:
 829 02ae 4144435F 		.ascii	"ADC_SAR_Seq_1_GetResult16\000"
 829      5341525F 
 829      5365715F 
 829      315F4765 
 829      74526573 
 830              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
