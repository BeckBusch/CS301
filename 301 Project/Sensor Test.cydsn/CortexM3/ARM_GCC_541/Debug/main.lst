ARM GAS  C:\Users\bbus692\AppData\Local\Temp\ccB4HL3f.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.isr_eoc_1,"ax",%progbits
  20              		.align	2
  21              		.global	isr_eoc_1
  22              		.thumb
  23              		.thumb_func
  24              		.type	isr_eoc_1, %function
  25              	isr_eoc_1:
  26              	.LFB64:
  27              		.file 1 "main.c"
   1:main.c        **** #include "project.h"
   2:main.c        **** #include "motors.h"
   3:main.c        **** #include "USBUART.h"
   4:main.c        **** #include <stdio.h>
   5:main.c        **** 
   6:main.c        **** #define ON 1
   7:main.c        **** #define OFF 0
   8:main.c        **** 
   9:main.c        **** // FL, FR, CL, CR, BC = front left, front right, center left, center right, back center respectivel
  10:main.c        **** #define FL 0
  11:main.c        **** #define FR 1
  12:main.c        **** #define CL 2
  13:main.c        **** #define CR 3
  14:main.c        **** #define BC 4
  15:main.c        **** 
  16:main.c        **** // State values.
  17:main.c        **** #define FORWARD 0
  18:main.c        **** #define TURNING_LEFT 1
  19:main.c        **** #define TURNING_RIGHT 2
  20:main.c        **** #define EXIT_LEFT 3
  21:main.c        **** #define EXIT_RIGHT 4
  22:main.c        **** #define STOPPED 5
  23:main.c        **** 
  24:main.c        **** // Disable left and right turns at appropriate times.
  25:main.c        **** #define DISABLE_LEFT_TURN 0
  26:main.c        **** #define DISABLE_RIGHT_TURN 1
  27:main.c        **** 
  28:main.c        **** // Prototype declarations.
  29:main.c        **** CY_ISR_PROTO(isr_eoc_1);
  30:main.c        **** CY_ISR_PROTO(isr_timer_1);
ARM GAS  C:\Users\bbus692\AppData\Local\Temp\ccB4HL3f.s 			page 2


  31:main.c        **** 
  32:main.c        **** volatile uint8 channel = 0;
  33:main.c        **** 
  34:main.c        **** uint32 i = 0;
  35:main.c        **** uint16 turn_count = 0;
  36:main.c        **** 
  37:main.c        **** uint8 disable_toggle = 0;
  38:main.c        **** 
  39:main.c        **** uint16 ADCResult;
  40:main.c        **** uint16 milliVoltReading;
  41:main.c        **** uint8 state = FORWARD;
  42:main.c        **** volatile uint8 reset = 0;
  43:main.c        **** 
  44:main.c        **** uint16 maxValues[5] = {0};
  45:main.c        **** uint16 pastValues[5] = {0};
  46:main.c        **** volatile uint16 count = 0;
  47:main.c        **** uint8 sensor_state[5];
  48:main.c        **** 
  49:main.c        **** CY_ISR(isr_eoc_1) {
  28              		.loc 1 49 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  50:main.c        ****     // Change the ADC channel each time an eoc interrupt is generated.
  51:main.c        ****     if (channel == 4) {
  33              		.loc 1 51 0
  34 0000 074B     		ldr	r3, .L4
  35 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  36 0004 DBB2     		uxtb	r3, r3
  37 0006 042B     		cmp	r3, #4
  38 0008 03D1     		bne	.L2
  52:main.c        ****         channel = 0;
  39              		.loc 1 52 0
  40 000a 0022     		movs	r2, #0
  41 000c 044B     		ldr	r3, .L4
  42 000e 1A70     		strb	r2, [r3]
  43 0010 7047     		bx	lr
  44              	.L2:
  53:main.c        ****     } else {
  54:main.c        ****         channel++;
  45              		.loc 1 54 0
  46 0012 034A     		ldr	r2, .L4
  47 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  48 0016 0133     		adds	r3, r3, #1
  49 0018 DBB2     		uxtb	r3, r3
  50 001a 1370     		strb	r3, [r2]
  51 001c 7047     		bx	lr
  52              	.L5:
  53 001e 00BF     		.align	2
  54              	.L4:
  55 0020 00000000 		.word	.LANCHOR0
  56              		.cfi_endproc
  57              	.LFE64:
  58              		.size	isr_eoc_1, .-isr_eoc_1
  59              		.section	.text.isr_timer_1,"ax",%progbits
  60              		.align	2
ARM GAS  C:\Users\bbus692\AppData\Local\Temp\ccB4HL3f.s 			page 3


  61              		.global	isr_timer_1
  62              		.thumb
  63              		.thumb_func
  64              		.type	isr_timer_1, %function
  65              	isr_timer_1:
  66              	.LFB65:
  55:main.c        ****     }   
  56:main.c        **** }
  57:main.c        **** 
  58:main.c        **** CY_ISR(isr_timer_1) {
  67              		.loc 1 58 0
  68              		.cfi_startproc
  69              		@ args = 0, pretend = 0, frame = 0
  70              		@ frame_needed = 0, uses_anonymous_args = 0
  71              		@ link register save eliminated.
  59:main.c        ****     reset = 1;
  72              		.loc 1 59 0
  73 0000 0122     		movs	r2, #1
  74 0002 014B     		ldr	r3, .L7
  75 0004 5A70     		strb	r2, [r3, #1]
  76 0006 7047     		bx	lr
  77              	.L8:
  78              		.align	2
  79              	.L7:
  80 0008 00000000 		.word	.LANCHOR0
  81              		.cfi_endproc
  82              	.LFE65:
  83              		.size	isr_timer_1, .-isr_timer_1
  84              		.section	.text.main,"ax",%progbits
  85              		.align	2
  86              		.global	main
  87              		.thumb
  88              		.thumb_func
  89              		.type	main, %function
  90              	main:
  91              	.LFB66:
  60:main.c        **** }
  61:main.c        **** 
  62:main.c        **** int main(void){
  92              		.loc 1 62 0
  93              		.cfi_startproc
  94              		@ args = 0, pretend = 0, frame = 0
  95              		@ frame_needed = 0, uses_anonymous_args = 0
  96 0000 10B5     		push	{r4, lr}
  97              		.cfi_def_cfa_offset 8
  98              		.cfi_offset 4, -8
  99              		.cfi_offset 14, -4
  63:main.c        ****     
  64:main.c        ****     // Enable global interrupts as well as start and enable the isr.
  65:main.c        ****     CyGlobalIntEnable;
 100              		.loc 1 65 0
 101              		.syntax unified
 102              	@ 65 "main.c" 1
 103 0002 62B6     		CPSIE   i
 104              	@ 0 "" 2
  66:main.c        ****     isr_eoc_1_StartEx(isr_eoc_1);
 105              		.loc 1 66 0
ARM GAS  C:\Users\bbus692\AppData\Local\Temp\ccB4HL3f.s 			page 4


 106              		.thumb
 107              		.syntax unified
 108 0004 9348     		ldr	r0, .L42
 109 0006 FFF7FEFF 		bl	isr_eoc_1_StartEx
 110              	.LVL0:
  67:main.c        ****     isr_timer_1_StartEx(isr_timer_1);
 111              		.loc 1 67 0
 112 000a 9348     		ldr	r0, .L42+4
 113 000c FFF7FEFF 		bl	isr_timer_1_StartEx
 114              	.LVL1:
  68:main.c        ****     ADC_SAR_Seq_1_IRQ_Enable();
 115              		.loc 1 68 0
 116 0010 FFF7FEFF 		bl	ADC_SAR_Seq_1_IRQ_Enable
 117              	.LVL2:
  69:main.c        ****     //isr_eoc_1_Enable();
  70:main.c        ****     //isr_eoc_2_StartEx(isr_eoc_2);
  71:main.c        ****     //isr_eoc_2_Enable();
  72:main.c        ****     //isr_timer_StartEx(isr_timer);
  73:main.c        ****     //isr_timer_Enable();
  74:main.c        ****     
  75:main.c        ****     // Start the ADC and begin conversions (in free running mode so will continue to convert).
  76:main.c        ****     ADC_SAR_Seq_1_Start();
 118              		.loc 1 76 0
 119 0014 FFF7FEFF 		bl	ADC_SAR_Seq_1_Start
 120              	.LVL3:
  77:main.c        ****     ADC_SAR_Seq_1_StartConvert();
 121              		.loc 1 77 0
 122 0018 FFF7FEFF 		bl	ADC_SAR_Seq_1_StartConvert
 123              	.LVL4:
 124              	.LBB2:
  78:main.c        ****     
  79:main.c        ****     // Initialise sensor states.
  80:main.c        ****     for (int i = 0; i < 5; i++) {
 125              		.loc 1 80 0
 126 001c 0023     		movs	r3, #0
 127 001e 03E0     		b	.L10
 128              	.LVL5:
 129              	.L11:
  81:main.c        ****         sensor_state[i] = ON;
 130              		.loc 1 81 0 discriminator 3
 131 0020 0121     		movs	r1, #1
 132 0022 8E4A     		ldr	r2, .L42+8
 133 0024 D154     		strb	r1, [r2, r3]
  80:main.c        ****         sensor_state[i] = ON;
 134              		.loc 1 80 0 discriminator 3
 135 0026 0B44     		add	r3, r3, r1
 136              	.LVL6:
 137              	.L10:
  80:main.c        ****         sensor_state[i] = ON;
 138              		.loc 1 80 0 is_stmt 0 discriminator 1
 139 0028 042B     		cmp	r3, #4
 140 002a F9DD     		ble	.L11
 141              	.LBE2:
  82:main.c        ****     }
  83:main.c        ****     
  84:main.c        ****     //PWM_1_WritePeriod(250);
  85:main.c        ****     //PWM_1_Start();
ARM GAS  C:\Users\bbus692\AppData\Local\Temp\ccB4HL3f.s 			page 5


  86:main.c        ****     //PWM_1_WriteCompare(83);
  87:main.c        ****                  
  88:main.c        ****     //PWM_2_WritePeriod(250);
  89:main.c        ****     //PWM_2_Start();
  90:main.c        ****     //PWM_2_WriteCompare(90);
  91:main.c        ****     Timer_1_Start();
 142              		.loc 1 91 0 is_stmt 1
 143 002c FFF7FEFF 		bl	Timer_1_Start
 144              	.LVL7:
 145              	.L12:
  92:main.c        ****     //turn_left();
  93:main.c        ****     //stop();
  94:main.c        ****     //turn_right();
  95:main.c        ****         
  96:main.c        ****     while(1) {
  97:main.c        ****         
  98:main.c        **** // If the conversion result is ready, put it into a variable and convert it into millivolts.
  99:main.c        ****         ADC_SAR_Seq_1_IsEndConversion(ADC_SAR_Seq_1_WAIT_FOR_RESULT);
 146              		.loc 1 99 0
 147 0030 0020     		movs	r0, #0
 148 0032 FFF7FEFF 		bl	ADC_SAR_Seq_1_IsEndConversion
 149              	.LVL8:
 100:main.c        ****         ADCResult = ADC_SAR_Seq_1_GetResult16(channel);
 150              		.loc 1 100 0
 151 0036 8A4C     		ldr	r4, .L42+12
 152 0038 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 153 003a FFF7FEFF 		bl	ADC_SAR_Seq_1_GetResult16
 154              	.LVL9:
 155 003e 894B     		ldr	r3, .L42+16
 156 0040 1880     		strh	r0, [r3]	@ movhi
 101:main.c        ****         milliVoltReading = ADC_SAR_Seq_1_CountsTo_mVolts(ADCResult);
 157              		.loc 1 101 0
 158 0042 FFF7FEFF 		bl	ADC_SAR_Seq_1_CountsTo_mVolts
 159              	.LVL10:
 160 0046 80B2     		uxth	r0, r0
 161 0048 874B     		ldr	r3, .L42+20
 162 004a 1880     		strh	r0, [r3]	@ movhi
 102:main.c        ****         /* disabled uart code
 103:main.c        ****         char send[100];
 104:main.c        ****         sprintf(send,"%d\r\n",milliVoltReading);
 105:main.c        ****         USBUART_1_PutString(send);
 106:main.c        ****         
 107:main.c        ****         CyDelay(100);
 108:main.c        ****         */
 109:main.c        ****         
 110:main.c        ****         if (milliVoltReading > maxValues[channel]) {
 163              		.loc 1 110 0
 164 004c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 165 004e 04EB4304 		add	r4, r4, r3, lsl #1
 166 0052 A388     		ldrh	r3, [r4, #4]
 167 0054 9842     		cmp	r0, r3
 168 0056 04D9     		bls	.L13
 111:main.c        ****             maxValues[channel] = milliVoltReading;
 169              		.loc 1 111 0
 170 0058 814B     		ldr	r3, .L42+12
 171 005a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 172 005c 03EB4203 		add	r3, r3, r2, lsl #1
ARM GAS  C:\Users\bbus692\AppData\Local\Temp\ccB4HL3f.s 			page 6


 173 0060 9880     		strh	r0, [r3, #4]	@ movhi
 174              	.L13:
 112:main.c        ****         }
 113:main.c        ****         
 114:main.c        ****         if (reset == 1) {
 175              		.loc 1 114 0
 176 0062 7F4B     		ldr	r3, .L42+12
 177 0064 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 178 0066 DBB2     		uxtb	r3, r3
 179 0068 012B     		cmp	r3, #1
 180 006a 40F08F80 		bne	.L15
 181 006e 08E0     		b	.L40
 182              	.LVL11:
 183              	.L16:
 184              	.LBB3:
 115:main.c        ****             for (int i = 0; i < 5; i++) {
 116:main.c        ****                 pastValues[i] = maxValues[i];
 185              		.loc 1 116 0 discriminator 3
 186 0070 7B4B     		ldr	r3, .L42+12
 187 0072 03EB4203 		add	r3, r3, r2, lsl #1
 188 0076 9988     		ldrh	r1, [r3, #4]
 189 0078 1982     		strh	r1, [r3, #16]	@ movhi
 117:main.c        ****                 maxValues[i] = 0;
 190              		.loc 1 117 0 discriminator 3
 191 007a 0021     		movs	r1, #0
 192 007c 9980     		strh	r1, [r3, #4]	@ movhi
 115:main.c        ****             for (int i = 0; i < 5; i++) {
 193              		.loc 1 115 0 discriminator 3
 194 007e 0132     		adds	r2, r2, #1
 195              	.LVL12:
 196 0080 00E0     		b	.L14
 197              	.LVL13:
 198              	.L40:
 199              	.LBE3:
 200 0082 0022     		movs	r2, #0
 201              	.L14:
 202              	.LVL14:
 203              	.LBB4:
 115:main.c        ****             for (int i = 0; i < 5; i++) {
 204              		.loc 1 115 0 is_stmt 0 discriminator 1
 205 0084 042A     		cmp	r2, #4
 206 0086 F3DD     		ble	.L16
 207              	.LBE4:
 118:main.c        ****             }
 119:main.c        ****             
 120:main.c        ****             if (state == TURNING_LEFT) {
 208              		.loc 1 120 0 is_stmt 1
 209 0088 754B     		ldr	r3, .L42+12
 210 008a 9B7E     		ldrb	r3, [r3, #26]	@ zero_extendqisi2
 211 008c 012B     		cmp	r3, #1
 212 008e 08D1     		bne	.L17
 121:main.c        ****                 if (sensor_state[FL] == OFF) {
 213              		.loc 1 121 0
 214 0090 724B     		ldr	r3, .L42+8
 215 0092 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 216 0094 13B9     		cbnz	r3, .L18
 122:main.c        ****                     state = EXIT_LEFT;
ARM GAS  C:\Users\bbus692\AppData\Local\Temp\ccB4HL3f.s 			page 7


 217              		.loc 1 122 0
 218 0096 0322     		movs	r2, #3
 219              	.LVL15:
 220 0098 714B     		ldr	r3, .L42+12
 221 009a 9A76     		strb	r2, [r3, #26]
 222              	.L18:
 123:main.c        ****                 }
 124:main.c        ****                 turn_left_sharp();
 223              		.loc 1 124 0
 224 009c FFF7FEFF 		bl	turn_left_sharp
 225              	.LVL16:
 226 00a0 71E0     		b	.L19
 227              	.LVL17:
 228              	.L17:
 125:main.c        ****             } else if (state == EXIT_LEFT) {
 229              		.loc 1 125 0
 230 00a2 032B     		cmp	r3, #3
 231 00a4 0FD1     		bne	.L20
 126:main.c        ****                 if (turn_count < 5) {
 232              		.loc 1 126 0
 233 00a6 6E4B     		ldr	r3, .L42+12
 234 00a8 9B8B     		ldrh	r3, [r3, #28]
 235 00aa 042B     		cmp	r3, #4
 236 00ac 06D8     		bhi	.L21
 127:main.c        ****                     turn_left();
 237              		.loc 1 127 0
 238 00ae FFF7FEFF 		bl	turn_left
 239              	.LVL18:
 128:main.c        ****                     turn_count++;
 240              		.loc 1 128 0
 241 00b2 6B4A     		ldr	r2, .L42+12
 242 00b4 938B     		ldrh	r3, [r2, #28]
 243 00b6 0133     		adds	r3, r3, #1
 244 00b8 9383     		strh	r3, [r2, #28]	@ movhi
 245 00ba 64E0     		b	.L19
 246              	.LVL19:
 247              	.L21:
 129:main.c        ****                 } else {
 130:main.c        ****                     turn_count = 0;
 248              		.loc 1 130 0
 249 00bc 684B     		ldr	r3, .L42+12
 250 00be 0022     		movs	r2, #0
 251              	.LVL20:
 252 00c0 9A83     		strh	r2, [r3, #28]	@ movhi
 131:main.c        ****                     state = FORWARD;
 253              		.loc 1 131 0
 254 00c2 9A76     		strb	r2, [r3, #26]
 255 00c4 5FE0     		b	.L19
 256              	.LVL21:
 257              	.L20:
 132:main.c        ****                 }
 133:main.c        ****             } else if (state == TURNING_RIGHT) {
 258              		.loc 1 133 0
 259 00c6 022B     		cmp	r3, #2
 260 00c8 08D1     		bne	.L22
 134:main.c        ****                 if (sensor_state[FR] == OFF) {
 261              		.loc 1 134 0
ARM GAS  C:\Users\bbus692\AppData\Local\Temp\ccB4HL3f.s 			page 8


 262 00ca 644B     		ldr	r3, .L42+8
 263 00cc 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 264 00ce 13B9     		cbnz	r3, .L23
 135:main.c        ****                     state = EXIT_RIGHT;
 265              		.loc 1 135 0
 266 00d0 0422     		movs	r2, #4
 267              	.LVL22:
 268 00d2 634B     		ldr	r3, .L42+12
 269 00d4 9A76     		strb	r2, [r3, #26]
 270              	.L23:
 136:main.c        ****                 }
 137:main.c        ****                 turn_right_sharp();
 271              		.loc 1 137 0
 272 00d6 FFF7FEFF 		bl	turn_right_sharp
 273              	.LVL23:
 274 00da 54E0     		b	.L19
 275              	.LVL24:
 276              	.L22:
 138:main.c        ****             } else if (state == EXIT_RIGHT) {
 277              		.loc 1 138 0
 278 00dc 042B     		cmp	r3, #4
 279 00de 0FD1     		bne	.L24
 139:main.c        ****                 if (turn_count < 5) {
 280              		.loc 1 139 0
 281 00e0 5F4B     		ldr	r3, .L42+12
 282 00e2 9B8B     		ldrh	r3, [r3, #28]
 283 00e4 042B     		cmp	r3, #4
 284 00e6 06D8     		bhi	.L25
 140:main.c        ****                     turn_right();
 285              		.loc 1 140 0
 286 00e8 FFF7FEFF 		bl	turn_right
 287              	.LVL25:
 141:main.c        ****                     turn_count++;
 288              		.loc 1 141 0
 289 00ec 5C4A     		ldr	r2, .L42+12
 290 00ee 938B     		ldrh	r3, [r2, #28]
 291 00f0 0133     		adds	r3, r3, #1
 292 00f2 9383     		strh	r3, [r2, #28]	@ movhi
 293 00f4 47E0     		b	.L19
 294              	.LVL26:
 295              	.L25:
 142:main.c        ****                 } else {
 143:main.c        ****                     turn_count = 0;
 296              		.loc 1 143 0
 297 00f6 5A4B     		ldr	r3, .L42+12
 298 00f8 0022     		movs	r2, #0
 299              	.LVL27:
 300 00fa 9A83     		strh	r2, [r3, #28]	@ movhi
 144:main.c        ****                     state = FORWARD;
 301              		.loc 1 144 0
 302 00fc 9A76     		strb	r2, [r3, #26]
 303 00fe 42E0     		b	.L19
 304              	.LVL28:
 305              	.L24:
 145:main.c        ****                 }
 146:main.c        ****             } else if (state == FORWARD) {
 306              		.loc 1 146 0
ARM GAS  C:\Users\bbus692\AppData\Local\Temp\ccB4HL3f.s 			page 9


 307 0100 002B     		cmp	r3, #0
 308 0102 40D1     		bne	.L19
 147:main.c        ****                 if (sensor_state[FL] == OFF) {
 309              		.loc 1 147 0
 310 0104 554B     		ldr	r3, .L42+8
 311 0106 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 312 0108 2BB9     		cbnz	r3, .L26
 148:main.c        ****                     turn_left();
 313              		.loc 1 148 0
 314 010a FFF7FEFF 		bl	turn_left
 315              	.LVL29:
 149:main.c        ****                     disable_toggle = DISABLE_RIGHT_TURN;
 316              		.loc 1 149 0
 317 010e 0122     		movs	r2, #1
 318 0110 534B     		ldr	r3, .L42+12
 319 0112 9A77     		strb	r2, [r3, #30]
 320 0114 37E0     		b	.L19
 321              	.LVL30:
 322              	.L26:
 150:main.c        ****                 } else if (sensor_state[FR] == OFF) {
 323              		.loc 1 150 0
 324 0116 514A     		ldr	r2, .L42+8
 325              	.LVL31:
 326 0118 5278     		ldrb	r2, [r2, #1]	@ zero_extendqisi2
 327 011a 2AB9     		cbnz	r2, .L27
 151:main.c        ****                     turn_right();
 328              		.loc 1 151 0
 329 011c FFF7FEFF 		bl	turn_right
 330              	.LVL32:
 152:main.c        ****                     disable_toggle = DISABLE_LEFT_TURN;
 331              		.loc 1 152 0
 332 0120 0022     		movs	r2, #0
 333 0122 4F4B     		ldr	r3, .L42+12
 334 0124 9A77     		strb	r2, [r3, #30]
 335 0126 2EE0     		b	.L19
 336              	.L27:
 153:main.c        ****                     // WHEN THE RIGHT SENSOR IS FIXED, CHANGE sensor_state[CR] == OFF to sensor_sta
 154:main.c        ****                 } else if (sensor_state[FL] == ON && sensor_state[FR] == ON && sensor_state[CL] == 
 337              		.loc 1 154 0
 338 0128 012B     		cmp	r3, #1
 339 012a 13D1     		bne	.L28
 340              		.loc 1 154 0 is_stmt 0 discriminator 1
 341 012c 012A     		cmp	r2, #1
 342 012e 11D1     		bne	.L28
 343              		.loc 1 154 0 discriminator 2
 344 0130 4A49     		ldr	r1, .L42+8
 345 0132 8978     		ldrb	r1, [r1, #2]	@ zero_extendqisi2
 346 0134 71B9     		cbnz	r1, .L28
 347              		.loc 1 154 0 discriminator 3
 348 0136 4949     		ldr	r1, .L42+8
 349 0138 C978     		ldrb	r1, [r1, #3]	@ zero_extendqisi2
 350 013a 0129     		cmp	r1, #1
 351 013c 0AD1     		bne	.L28
 352              		.loc 1 154 0 discriminator 4
 353 013e 4849     		ldr	r1, .L42+12
 354 0140 897F     		ldrb	r1, [r1, #30]	@ zero_extendqisi2
 355 0142 39B1     		cbz	r1, .L28
ARM GAS  C:\Users\bbus692\AppData\Local\Temp\ccB4HL3f.s 			page 10


 155:main.c        ****                     stop();
 356              		.loc 1 155 0 is_stmt 1
 357 0144 FFF7FEFF 		bl	stop
 358              	.LVL33:
 156:main.c        ****                     state = TURNING_LEFT;
 359              		.loc 1 156 0
 360 0148 0122     		movs	r2, #1
 361 014a 454B     		ldr	r3, .L42+12
 362 014c 9A76     		strb	r2, [r3, #26]
 157:main.c        ****                     turn_left();
 363              		.loc 1 157 0
 364 014e FFF7FEFF 		bl	turn_left
 365              	.LVL34:
 366 0152 18E0     		b	.L19
 367              	.L28:
 158:main.c        ****                     // WHEN THE RIGHT SENSOR IS FIXED UNCOMMENT THE BELOW
 159:main.c        ****                 } else if (sensor_state[FL] == ON && sensor_state[FR] == ON && sensor_state[CL] == 
 368              		.loc 1 159 0
 369 0154 012B     		cmp	r3, #1
 370 0156 14D1     		bne	.L29
 371              		.loc 1 159 0 is_stmt 0 discriminator 1
 372 0158 012A     		cmp	r2, #1
 373 015a 12D1     		bne	.L29
 374              		.loc 1 159 0 discriminator 2
 375 015c 3F4B     		ldr	r3, .L42+8
 376 015e 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 377 0160 012B     		cmp	r3, #1
 378 0162 0ED1     		bne	.L29
 379              		.loc 1 159 0 discriminator 3
 380 0164 3D4B     		ldr	r3, .L42+8
 381 0166 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 382 0168 5BB9     		cbnz	r3, .L29
 383              		.loc 1 159 0 discriminator 4
 384 016a 3D4B     		ldr	r3, .L42+12
 385 016c 9B7F     		ldrb	r3, [r3, #30]	@ zero_extendqisi2
 386 016e 012B     		cmp	r3, #1
 387 0170 07D0     		beq	.L29
 160:main.c        ****                     stop();
 388              		.loc 1 160 0 is_stmt 1
 389 0172 FFF7FEFF 		bl	stop
 390              	.LVL35:
 161:main.c        ****                     state = TURNING_RIGHT;
 391              		.loc 1 161 0
 392 0176 0222     		movs	r2, #2
 393 0178 394B     		ldr	r3, .L42+12
 394 017a 9A76     		strb	r2, [r3, #26]
 162:main.c        ****                     turn_right();
 395              		.loc 1 162 0
 396 017c FFF7FEFF 		bl	turn_right
 397              	.LVL36:
 398 0180 01E0     		b	.L19
 399              	.L29:
 163:main.c        ****                 } else {
 164:main.c        ****                     move_forward();
 400              		.loc 1 164 0
 401 0182 FFF7FEFF 		bl	move_forward
 402              	.LVL37:
ARM GAS  C:\Users\bbus692\AppData\Local\Temp\ccB4HL3f.s 			page 11


 403              	.L19:
 165:main.c        ****                 }
 166:main.c        ****             }                     
 167:main.c        ****             reset = 0;
 404              		.loc 1 167 0
 405 0186 0022     		movs	r2, #0
 406 0188 354B     		ldr	r3, .L42+12
 407 018a 5A70     		strb	r2, [r3, #1]
 408              	.L15:
 168:main.c        ****             
 169:main.c        ****         }     
 170:main.c        ****         
 171:main.c        ****         // If the milliVolt reading is above the required threshold, perform the requested operatio
 172:main.c        ****         if (pastValues[channel] >= 800) {
 409              		.loc 1 172 0
 410 018c 344B     		ldr	r3, .L42+12
 411 018e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 412 0190 03EB4203 		add	r3, r3, r2, lsl #1
 413 0194 1B8A     		ldrh	r3, [r3, #16]
 414 0196 B3F5487F 		cmp	r3, #800
 415 019a 2DD3     		bcc	.L30
 173:main.c        ****             // Change the position in the sensor_state array depending on the channel being read.
 174:main.c        ****             if (channel == 0) {
 416              		.loc 1 174 0
 417 019c 304B     		ldr	r3, .L42+12
 418 019e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 419 01a0 13F0FF0F 		tst	r3, #255
 420 01a4 03D1     		bne	.L31
 175:main.c        ****                 sensor_state[FL] = ON;
 421              		.loc 1 175 0
 422 01a6 0122     		movs	r2, #1
 423 01a8 2C4B     		ldr	r3, .L42+8
 424 01aa 1A70     		strb	r2, [r3]
 425 01ac 40E7     		b	.L12
 426              	.L31:
 176:main.c        ****             } else if (channel == 1) {
 427              		.loc 1 176 0
 428 01ae 2C4B     		ldr	r3, .L42+12
 429 01b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 430 01b2 DBB2     		uxtb	r3, r3
 431 01b4 012B     		cmp	r3, #1
 432 01b6 03D1     		bne	.L33
 177:main.c        ****                 sensor_state[FR] = ON;
 433              		.loc 1 177 0
 434 01b8 0122     		movs	r2, #1
 435 01ba 284B     		ldr	r3, .L42+8
 436 01bc 5A70     		strb	r2, [r3, #1]
 437 01be 37E7     		b	.L12
 438              	.L33:
 178:main.c        ****             } else if (channel == 2) {
 439              		.loc 1 178 0
 440 01c0 274B     		ldr	r3, .L42+12
 441 01c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 442 01c4 DBB2     		uxtb	r3, r3
 443 01c6 022B     		cmp	r3, #2
 444 01c8 03D1     		bne	.L34
 179:main.c        ****                 sensor_state[CL] = ON;
ARM GAS  C:\Users\bbus692\AppData\Local\Temp\ccB4HL3f.s 			page 12


 445              		.loc 1 179 0
 446 01ca 0122     		movs	r2, #1
 447 01cc 234B     		ldr	r3, .L42+8
 448 01ce 9A70     		strb	r2, [r3, #2]
 449 01d0 2EE7     		b	.L12
 450              	.L34:
 180:main.c        ****             } else if (channel == 3) {
 451              		.loc 1 180 0
 452 01d2 234B     		ldr	r3, .L42+12
 453 01d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 454 01d6 DBB2     		uxtb	r3, r3
 455 01d8 032B     		cmp	r3, #3
 456 01da 03D1     		bne	.L35
 181:main.c        ****                 sensor_state[CR] = ON;
 457              		.loc 1 181 0
 458 01dc 0122     		movs	r2, #1
 459 01de 1F4B     		ldr	r3, .L42+8
 460 01e0 DA70     		strb	r2, [r3, #3]
 461 01e2 25E7     		b	.L12
 462              	.L35:
 182:main.c        ****             } else if (channel == 4) {
 463              		.loc 1 182 0
 464 01e4 1E4B     		ldr	r3, .L42+12
 465 01e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 466 01e8 DBB2     		uxtb	r3, r3
 467 01ea 042B     		cmp	r3, #4
 468 01ec 7FF420AF 		bne	.L12
 183:main.c        ****                 sensor_state[BC] = ON;
 469              		.loc 1 183 0
 470 01f0 0122     		movs	r2, #1
 471 01f2 1A4B     		ldr	r3, .L42+8
 472 01f4 1A71     		strb	r2, [r3, #4]
 473 01f6 1BE7     		b	.L12
 474              	.L30:
 184:main.c        ****             }
 185:main.c        ****         } else {
 186:main.c        ****             if (channel == 0) {
 475              		.loc 1 186 0
 476 01f8 194B     		ldr	r3, .L42+12
 477 01fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 478 01fc 13F0FF0F 		tst	r3, #255
 479 0200 03D1     		bne	.L36
 187:main.c        ****                 sensor_state[FL] = OFF;
 480              		.loc 1 187 0
 481 0202 0022     		movs	r2, #0
 482 0204 154B     		ldr	r3, .L42+8
 483 0206 1A70     		strb	r2, [r3]
 484 0208 12E7     		b	.L12
 485              	.L36:
 188:main.c        ****             } else if (channel == 1) {
 486              		.loc 1 188 0
 487 020a 154B     		ldr	r3, .L42+12
 488 020c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 489 020e DBB2     		uxtb	r3, r3
 490 0210 012B     		cmp	r3, #1
 491 0212 03D1     		bne	.L37
 189:main.c        ****                 sensor_state[FR] = OFF;
ARM GAS  C:\Users\bbus692\AppData\Local\Temp\ccB4HL3f.s 			page 13


 492              		.loc 1 189 0
 493 0214 0022     		movs	r2, #0
 494 0216 114B     		ldr	r3, .L42+8
 495 0218 5A70     		strb	r2, [r3, #1]
 496 021a 09E7     		b	.L12
 497              	.L37:
 190:main.c        ****             } else if (channel == 2) {
 498              		.loc 1 190 0
 499 021c 104B     		ldr	r3, .L42+12
 500 021e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 501 0220 DBB2     		uxtb	r3, r3
 502 0222 022B     		cmp	r3, #2
 503 0224 03D1     		bne	.L38
 191:main.c        ****                 sensor_state[CL] = OFF;
 504              		.loc 1 191 0
 505 0226 0022     		movs	r2, #0
 506 0228 0C4B     		ldr	r3, .L42+8
 507 022a 9A70     		strb	r2, [r3, #2]
 508 022c 00E7     		b	.L12
 509              	.L38:
 192:main.c        ****             } else if (channel == 3) {
 510              		.loc 1 192 0
 511 022e 0C4B     		ldr	r3, .L42+12
 512 0230 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 513 0232 DBB2     		uxtb	r3, r3
 514 0234 032B     		cmp	r3, #3
 515 0236 03D1     		bne	.L39
 193:main.c        ****                 sensor_state[CR] = OFF;
 516              		.loc 1 193 0
 517 0238 0022     		movs	r2, #0
 518 023a 084B     		ldr	r3, .L42+8
 519 023c DA70     		strb	r2, [r3, #3]
 520 023e F7E6     		b	.L12
 521              	.L39:
 194:main.c        ****             } else if (channel == 4) {
 522              		.loc 1 194 0
 523 0240 074B     		ldr	r3, .L42+12
 524 0242 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 525 0244 DBB2     		uxtb	r3, r3
 526 0246 042B     		cmp	r3, #4
 527 0248 7FF4F2AE 		bne	.L12
 195:main.c        ****                 sensor_state[BC] = OFF;
 528              		.loc 1 195 0
 529 024c 0022     		movs	r2, #0
 530 024e 034B     		ldr	r3, .L42+8
 531 0250 1A71     		strb	r2, [r3, #4]
 532 0252 EDE6     		b	.L12
 533              	.L43:
 534              		.align	2
 535              	.L42:
 536 0254 00000000 		.word	isr_eoc_1
 537 0258 00000000 		.word	isr_timer_1
 538 025c 00000000 		.word	sensor_state
 539 0260 00000000 		.word	.LANCHOR0
 540 0264 00000000 		.word	ADCResult
 541 0268 00000000 		.word	milliVoltReading
 542              		.cfi_endproc
ARM GAS  C:\Users\bbus692\AppData\Local\Temp\ccB4HL3f.s 			page 14


 543              	.LFE66:
 544              		.size	main, .-main
 545              		.comm	sensor_state,5,4
 546              		.global	count
 547              		.global	pastValues
 548              		.global	maxValues
 549              		.global	reset
 550              		.global	state
 551              		.comm	milliVoltReading,2,2
 552              		.comm	ADCResult,2,2
 553              		.global	disable_toggle
 554              		.global	turn_count
 555              		.global	i
 556              		.global	channel
 557              		.bss
 558              		.align	2
 559              		.set	.LANCHOR0,. + 0
 560              		.type	channel, %object
 561              		.size	channel, 1
 562              	channel:
 563 0000 00       		.space	1
 564              		.type	reset, %object
 565              		.size	reset, 1
 566              	reset:
 567 0001 00       		.space	1
 568 0002 0000     		.space	2
 569              		.type	maxValues, %object
 570              		.size	maxValues, 10
 571              	maxValues:
 572 0004 00000000 		.space	10
 572      00000000 
 572      0000
 573 000e 0000     		.space	2
 574              		.type	pastValues, %object
 575              		.size	pastValues, 10
 576              	pastValues:
 577 0010 00000000 		.space	10
 577      00000000 
 577      0000
 578              		.type	state, %object
 579              		.size	state, 1
 580              	state:
 581 001a 00       		.space	1
 582 001b 00       		.space	1
 583              		.type	turn_count, %object
 584              		.size	turn_count, 2
 585              	turn_count:
 586 001c 0000     		.space	2
 587              		.type	disable_toggle, %object
 588              		.size	disable_toggle, 1
 589              	disable_toggle:
 590 001e 00       		.space	1
 591 001f 00       		.space	1
 592              		.type	count, %object
 593              		.size	count, 2
 594              	count:
 595 0020 0000     		.space	2
ARM GAS  C:\Users\bbus692\AppData\Local\Temp\ccB4HL3f.s 			page 15


 596 0022 0000     		.space	2
 597              		.type	i, %object
 598              		.size	i, 4
 599              	i:
 600 0024 00000000 		.space	4
 601              		.text
 602              	.Letext0:
 603              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 604              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 605              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 606              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 607              		.file 6 "Generated_Source\\PSoC5/isr_eoc_1.h"
 608              		.file 7 "Generated_Source\\PSoC5/isr_timer_1.h"
 609              		.file 8 "Generated_Source\\PSoC5/ADC_SAR_Seq_1_IRQ.h"
 610              		.file 9 "Generated_Source\\PSoC5/ADC_SAR_Seq_1.h"
 611              		.file 10 "Generated_Source\\PSoC5/Timer_1.h"
 612              		.file 11 "motors.h"
 613              		.section	.debug_info,"",%progbits
 614              	.Ldebug_info0:
 615 0000 B7030000 		.4byte	0x3b7
 616 0004 0400     		.2byte	0x4
 617 0006 00000000 		.4byte	.Ldebug_abbrev0
 618 000a 04       		.byte	0x4
 619 000b 01       		.uleb128 0x1
 620 000c 95000000 		.4byte	.LASF48
 621 0010 0C       		.byte	0xc
 622 0011 A6020000 		.4byte	.LASF49
 623 0015 40010000 		.4byte	.LASF50
 624 0019 18000000 		.4byte	.Ldebug_ranges0+0x18
 625 001d 00000000 		.4byte	0
 626 0021 00000000 		.4byte	.Ldebug_line0
 627 0025 02       		.uleb128 0x2
 628 0026 01       		.byte	0x1
 629 0027 06       		.byte	0x6
 630 0028 47030000 		.4byte	.LASF0
 631 002c 02       		.uleb128 0x2
 632 002d 01       		.byte	0x1
 633 002e 08       		.byte	0x8
 634 002f 87000000 		.4byte	.LASF1
 635 0033 02       		.uleb128 0x2
 636 0034 02       		.byte	0x2
 637 0035 05       		.byte	0x5
 638 0036 E3020000 		.4byte	.LASF2
 639 003a 02       		.uleb128 0x2
 640 003b 02       		.byte	0x2
 641 003c 07       		.byte	0x7
 642 003d 3A000000 		.4byte	.LASF3
 643 0041 03       		.uleb128 0x3
 644 0042 14000000 		.4byte	.LASF9
 645 0046 02       		.byte	0x2
 646 0047 3F       		.byte	0x3f
 647 0048 4C000000 		.4byte	0x4c
 648 004c 02       		.uleb128 0x2
 649 004d 04       		.byte	0x4
 650 004e 05       		.byte	0x5
 651 004f 07030000 		.4byte	.LASF4
 652 0053 02       		.uleb128 0x2
ARM GAS  C:\Users\bbus692\AppData\Local\Temp\ccB4HL3f.s 			page 16


 653 0054 04       		.byte	0x4
 654 0055 07       		.byte	0x7
 655 0056 23010000 		.4byte	.LASF5
 656 005a 02       		.uleb128 0x2
 657 005b 08       		.byte	0x8
 658 005c 05       		.byte	0x5
 659 005d 98020000 		.4byte	.LASF6
 660 0061 02       		.uleb128 0x2
 661 0062 08       		.byte	0x8
 662 0063 07       		.byte	0x7
 663 0064 30020000 		.4byte	.LASF7
 664 0068 04       		.uleb128 0x4
 665 0069 04       		.byte	0x4
 666 006a 05       		.byte	0x5
 667 006b 696E7400 		.ascii	"int\000"
 668 006f 02       		.uleb128 0x2
 669 0070 04       		.byte	0x4
 670 0071 07       		.byte	0x7
 671 0072 FD010000 		.4byte	.LASF8
 672 0076 03       		.uleb128 0x3
 673 0077 57000000 		.4byte	.LASF10
 674 007b 03       		.byte	0x3
 675 007c 2C       		.byte	0x2c
 676 007d 41000000 		.4byte	0x41
 677 0081 05       		.uleb128 0x5
 678 0082 F7020000 		.4byte	.LASF11
 679 0086 04       		.byte	0x4
 680 0087 E401     		.2byte	0x1e4
 681 0089 2C000000 		.4byte	0x2c
 682 008d 05       		.uleb128 0x5
 683 008e DD010000 		.4byte	.LASF12
 684 0092 04       		.byte	0x4
 685 0093 E501     		.2byte	0x1e5
 686 0095 3A000000 		.4byte	0x3a
 687 0099 05       		.uleb128 0x5
 688 009a F6010000 		.4byte	.LASF13
 689 009e 04       		.byte	0x4
 690 009f E601     		.2byte	0x1e6
 691 00a1 53000000 		.4byte	0x53
 692 00a5 02       		.uleb128 0x2
 693 00a6 04       		.byte	0x4
 694 00a7 04       		.byte	0x4
 695 00a8 73000000 		.4byte	.LASF14
 696 00ac 02       		.uleb128 0x2
 697 00ad 08       		.byte	0x8
 698 00ae 04       		.byte	0x4
 699 00af C7010000 		.4byte	.LASF15
 700 00b3 02       		.uleb128 0x2
 701 00b4 01       		.byte	0x1
 702 00b5 08       		.byte	0x8
 703 00b6 AD020000 		.4byte	.LASF16
 704 00ba 06       		.uleb128 0x6
 705 00bb 81000000 		.4byte	0x81
 706 00bf 06       		.uleb128 0x6
 707 00c0 8D000000 		.4byte	0x8d
 708 00c4 02       		.uleb128 0x2
 709 00c5 08       		.byte	0x8
ARM GAS  C:\Users\bbus692\AppData\Local\Temp\ccB4HL3f.s 			page 17


 710 00c6 04       		.byte	0x4
 711 00c7 74020000 		.4byte	.LASF17
 712 00cb 02       		.uleb128 0x2
 713 00cc 04       		.byte	0x4
 714 00cd 07       		.byte	0x7
 715 00ce 80020000 		.4byte	.LASF18
 716 00d2 07       		.uleb128 0x7
 717 00d3 FD020000 		.4byte	.LASF19
 718 00d7 01       		.byte	0x1
 719 00d8 31       		.byte	0x31
 720 00d9 00000000 		.4byte	.LFB64
 721 00dd 24000000 		.4byte	.LFE64-.LFB64
 722 00e1 01       		.uleb128 0x1
 723 00e2 9C       		.byte	0x9c
 724 00e3 07       		.uleb128 0x7
 725 00e4 47020000 		.4byte	.LASF20
 726 00e8 01       		.byte	0x1
 727 00e9 3A       		.byte	0x3a
 728 00ea 00000000 		.4byte	.LFB65
 729 00ee 0C000000 		.4byte	.LFE65-.LFB65
 730 00f2 01       		.uleb128 0x1
 731 00f3 9C       		.byte	0x9c
 732 00f4 08       		.uleb128 0x8
 733 00f5 D8010000 		.4byte	.LASF51
 734 00f9 01       		.byte	0x1
 735 00fa 3E       		.byte	0x3e
 736 00fb 68000000 		.4byte	0x68
 737 00ff 00000000 		.4byte	.LFB66
 738 0103 6C020000 		.4byte	.LFE66-.LFB66
 739 0107 01       		.uleb128 0x1
 740 0108 9C       		.byte	0x9c
 741 0109 1A020000 		.4byte	0x21a
 742 010d 09       		.uleb128 0x9
 743 010e 1C000000 		.4byte	.LBB2
 744 0112 10000000 		.4byte	.LBE2-.LBB2
 745 0116 28010000 		.4byte	0x128
 746 011a 0A       		.uleb128 0xa
 747 011b 6900     		.ascii	"i\000"
 748 011d 01       		.byte	0x1
 749 011e 50       		.byte	0x50
 750 011f 68000000 		.4byte	0x68
 751 0123 00000000 		.4byte	.LLST0
 752 0127 00       		.byte	0
 753 0128 0B       		.uleb128 0xb
 754 0129 00000000 		.4byte	.Ldebug_ranges0+0
 755 012d 3F010000 		.4byte	0x13f
 756 0131 0A       		.uleb128 0xa
 757 0132 6900     		.ascii	"i\000"
 758 0134 01       		.byte	0x1
 759 0135 73       		.byte	0x73
 760 0136 68000000 		.4byte	0x68
 761 013a 1F000000 		.4byte	.LLST1
 762 013e 00       		.byte	0
 763 013f 0C       		.uleb128 0xc
 764 0140 0A000000 		.4byte	.LVL0
 765 0144 15030000 		.4byte	0x315
 766 0148 56010000 		.4byte	0x156
ARM GAS  C:\Users\bbus692\AppData\Local\Temp\ccB4HL3f.s 			page 18


 767 014c 0D       		.uleb128 0xd
 768 014d 01       		.uleb128 0x1
 769 014e 50       		.byte	0x50
 770 014f 05       		.uleb128 0x5
 771 0150 03       		.byte	0x3
 772 0151 00000000 		.4byte	isr_eoc_1
 773 0155 00       		.byte	0
 774 0156 0C       		.uleb128 0xc
 775 0157 10000000 		.4byte	.LVL1
 776 015b 20030000 		.4byte	0x320
 777 015f 6D010000 		.4byte	0x16d
 778 0163 0D       		.uleb128 0xd
 779 0164 01       		.uleb128 0x1
 780 0165 50       		.byte	0x50
 781 0166 05       		.uleb128 0x5
 782 0167 03       		.byte	0x3
 783 0168 00000000 		.4byte	isr_timer_1
 784 016c 00       		.byte	0
 785 016d 0E       		.uleb128 0xe
 786 016e 14000000 		.4byte	.LVL2
 787 0172 2B030000 		.4byte	0x32b
 788 0176 0E       		.uleb128 0xe
 789 0177 18000000 		.4byte	.LVL3
 790 017b 36030000 		.4byte	0x336
 791 017f 0E       		.uleb128 0xe
 792 0180 1C000000 		.4byte	.LVL4
 793 0184 41030000 		.4byte	0x341
 794 0188 0E       		.uleb128 0xe
 795 0189 30000000 		.4byte	.LVL7
 796 018d 4C030000 		.4byte	0x34c
 797 0191 0C       		.uleb128 0xc
 798 0192 36000000 		.4byte	.LVL8
 799 0196 57030000 		.4byte	0x357
 800 019a A4010000 		.4byte	0x1a4
 801 019e 0D       		.uleb128 0xd
 802 019f 01       		.uleb128 0x1
 803 01a0 50       		.byte	0x50
 804 01a1 01       		.uleb128 0x1
 805 01a2 30       		.byte	0x30
 806 01a3 00       		.byte	0
 807 01a4 0E       		.uleb128 0xe
 808 01a5 3E000000 		.4byte	.LVL9
 809 01a9 62030000 		.4byte	0x362
 810 01ad 0E       		.uleb128 0xe
 811 01ae 46000000 		.4byte	.LVL10
 812 01b2 6D030000 		.4byte	0x36d
 813 01b6 0E       		.uleb128 0xe
 814 01b7 A0000000 		.4byte	.LVL16
 815 01bb 78030000 		.4byte	0x378
 816 01bf 0E       		.uleb128 0xe
 817 01c0 B2000000 		.4byte	.LVL18
 818 01c4 83030000 		.4byte	0x383
 819 01c8 0E       		.uleb128 0xe
 820 01c9 DA000000 		.4byte	.LVL23
 821 01cd 8E030000 		.4byte	0x38e
 822 01d1 0E       		.uleb128 0xe
 823 01d2 EC000000 		.4byte	.LVL25
ARM GAS  C:\Users\bbus692\AppData\Local\Temp\ccB4HL3f.s 			page 19


 824 01d6 99030000 		.4byte	0x399
 825 01da 0E       		.uleb128 0xe
 826 01db 0E010000 		.4byte	.LVL29
 827 01df 83030000 		.4byte	0x383
 828 01e3 0E       		.uleb128 0xe
 829 01e4 20010000 		.4byte	.LVL32
 830 01e8 99030000 		.4byte	0x399
 831 01ec 0E       		.uleb128 0xe
 832 01ed 48010000 		.4byte	.LVL33
 833 01f1 A4030000 		.4byte	0x3a4
 834 01f5 0E       		.uleb128 0xe
 835 01f6 52010000 		.4byte	.LVL34
 836 01fa 83030000 		.4byte	0x383
 837 01fe 0E       		.uleb128 0xe
 838 01ff 76010000 		.4byte	.LVL35
 839 0203 A4030000 		.4byte	0x3a4
 840 0207 0E       		.uleb128 0xe
 841 0208 80010000 		.4byte	.LVL36
 842 020c 99030000 		.4byte	0x399
 843 0210 0E       		.uleb128 0xe
 844 0211 86010000 		.4byte	.LVL37
 845 0215 AF030000 		.4byte	0x3af
 846 0219 00       		.byte	0
 847 021a 0F       		.uleb128 0xf
 848 021b AA010000 		.4byte	.LASF21
 849 021f 05       		.byte	0x5
 850 0220 1207     		.2byte	0x712
 851 0222 26020000 		.4byte	0x226
 852 0226 06       		.uleb128 0x6
 853 0227 76000000 		.4byte	0x76
 854 022b 10       		.uleb128 0x10
 855 022c 00000000 		.4byte	.LASF22
 856 0230 01       		.byte	0x1
 857 0231 20       		.byte	0x20
 858 0232 BA000000 		.4byte	0xba
 859 0236 05       		.uleb128 0x5
 860 0237 03       		.byte	0x3
 861 0238 00000000 		.4byte	channel
 862 023c 11       		.uleb128 0x11
 863 023d 6900     		.ascii	"i\000"
 864 023f 01       		.byte	0x1
 865 0240 22       		.byte	0x22
 866 0241 99000000 		.4byte	0x99
 867 0245 05       		.uleb128 0x5
 868 0246 03       		.byte	0x3
 869 0247 00000000 		.4byte	i
 870 024b 10       		.uleb128 0x10
 871 024c 1E000000 		.4byte	.LASF23
 872 0250 01       		.byte	0x1
 873 0251 23       		.byte	0x23
 874 0252 8D000000 		.4byte	0x8d
 875 0256 05       		.uleb128 0x5
 876 0257 03       		.byte	0x3
 877 0258 00000000 		.4byte	turn_count
 878 025c 10       		.uleb128 0x10
 879 025d 89020000 		.4byte	.LASF24
 880 0261 01       		.byte	0x1
ARM GAS  C:\Users\bbus692\AppData\Local\Temp\ccB4HL3f.s 			page 20


 881 0262 25       		.byte	0x25
 882 0263 81000000 		.4byte	0x81
 883 0267 05       		.uleb128 0x5
 884 0268 03       		.byte	0x3
 885 0269 00000000 		.4byte	disable_toggle
 886 026d 10       		.uleb128 0x10
 887 026e CE010000 		.4byte	.LASF25
 888 0272 01       		.byte	0x1
 889 0273 27       		.byte	0x27
 890 0274 8D000000 		.4byte	0x8d
 891 0278 05       		.uleb128 0x5
 892 0279 03       		.byte	0x3
 893 027a 00000000 		.4byte	ADCResult
 894 027e 10       		.uleb128 0x10
 895 027f 53030000 		.4byte	.LASF26
 896 0283 01       		.byte	0x1
 897 0284 28       		.byte	0x28
 898 0285 8D000000 		.4byte	0x8d
 899 0289 05       		.uleb128 0x5
 900 028a 03       		.byte	0x3
 901 028b 00000000 		.4byte	milliVoltReading
 902 028f 10       		.uleb128 0x10
 903 0290 08000000 		.4byte	.LASF27
 904 0294 01       		.byte	0x1
 905 0295 29       		.byte	0x29
 906 0296 81000000 		.4byte	0x81
 907 029a 05       		.uleb128 0x5
 908 029b 03       		.byte	0x3
 909 029c 00000000 		.4byte	state
 910 02a0 10       		.uleb128 0x10
 911 02a1 0E000000 		.4byte	.LASF28
 912 02a5 01       		.byte	0x1
 913 02a6 2A       		.byte	0x2a
 914 02a7 BA000000 		.4byte	0xba
 915 02ab 05       		.uleb128 0x5
 916 02ac 03       		.byte	0x3
 917 02ad 00000000 		.4byte	reset
 918 02b1 12       		.uleb128 0x12
 919 02b2 8D000000 		.4byte	0x8d
 920 02b6 C1020000 		.4byte	0x2c1
 921 02ba 13       		.uleb128 0x13
 922 02bb CB000000 		.4byte	0xcb
 923 02bf 04       		.byte	0x4
 924 02c0 00       		.byte	0
 925 02c1 10       		.uleb128 0x10
 926 02c2 ED020000 		.4byte	.LASF29
 927 02c6 01       		.byte	0x1
 928 02c7 2C       		.byte	0x2c
 929 02c8 B1020000 		.4byte	0x2b1
 930 02cc 05       		.uleb128 0x5
 931 02cd 03       		.byte	0x3
 932 02ce 00000000 		.4byte	maxValues
 933 02d2 10       		.uleb128 0x10
 934 02d3 25020000 		.4byte	.LASF30
 935 02d7 01       		.byte	0x1
 936 02d8 2D       		.byte	0x2d
 937 02d9 B1020000 		.4byte	0x2b1
ARM GAS  C:\Users\bbus692\AppData\Local\Temp\ccB4HL3f.s 			page 21


 938 02dd 05       		.uleb128 0x5
 939 02de 03       		.byte	0x3
 940 02df 00000000 		.4byte	pastValues
 941 02e3 10       		.uleb128 0x10
 942 02e4 DD020000 		.4byte	.LASF31
 943 02e8 01       		.byte	0x1
 944 02e9 2E       		.byte	0x2e
 945 02ea BF000000 		.4byte	0xbf
 946 02ee 05       		.uleb128 0x5
 947 02ef 03       		.byte	0x3
 948 02f0 00000000 		.4byte	count
 949 02f4 12       		.uleb128 0x12
 950 02f5 81000000 		.4byte	0x81
 951 02f9 04030000 		.4byte	0x304
 952 02fd 13       		.uleb128 0x13
 953 02fe CB000000 		.4byte	0xcb
 954 0302 04       		.byte	0x4
 955 0303 00       		.byte	0
 956 0304 10       		.uleb128 0x10
 957 0305 67020000 		.4byte	.LASF32
 958 0309 01       		.byte	0x1
 959 030a 2F       		.byte	0x2f
 960 030b F4020000 		.4byte	0x2f4
 961 030f 05       		.uleb128 0x5
 962 0310 03       		.byte	0x3
 963 0311 00000000 		.4byte	sensor_state
 964 0315 14       		.uleb128 0x14
 965 0316 E4010000 		.4byte	.LASF33
 966 031a E4010000 		.4byte	.LASF33
 967 031e 06       		.byte	0x6
 968 031f 18       		.byte	0x18
 969 0320 14       		.uleb128 0x14
 970 0321 53020000 		.4byte	.LASF34
 971 0325 53020000 		.4byte	.LASF34
 972 0329 07       		.byte	0x7
 973 032a 18       		.byte	0x18
 974 032b 14       		.uleb128 0x14
 975 032c 2E030000 		.4byte	.LASF35
 976 0330 2E030000 		.4byte	.LASF35
 977 0334 08       		.byte	0x8
 978 0335 23       		.byte	0x23
 979 0336 14       		.uleb128 0x14
 980 0337 5F000000 		.4byte	.LASF36
 981 033b 5F000000 		.4byte	.LASF36
 982 033f 09       		.byte	0x9
 983 0340 31       		.byte	0x31
 984 0341 14       		.uleb128 0x14
 985 0342 0A020000 		.4byte	.LASF37
 986 0346 0A020000 		.4byte	.LASF37
 987 034a 09       		.byte	0x9
 988 034b A1       		.byte	0xa1
 989 034c 14       		.uleb128 0x14
 990 034d 79000000 		.4byte	.LASF38
 991 0351 79000000 		.4byte	.LASF38
 992 0355 0A       		.byte	0xa
 993 0356 5A       		.byte	0x5a
 994 0357 14       		.uleb128 0x14
ARM GAS  C:\Users\bbus692\AppData\Local\Temp\ccB4HL3f.s 			page 22


 995 0358 10030000 		.4byte	.LASF39
 996 035c 10030000 		.4byte	.LASF39
 997 0360 09       		.byte	0x9
 998 0361 34       		.byte	0x34
 999 0362 14       		.uleb128 0x14
 1000 0363 64030000 		.4byte	.LASF40
 1001 0367 64030000 		.4byte	.LASF40
 1002 036b 09       		.byte	0x9
 1003 036c 35       		.byte	0x35
 1004 036d 14       		.uleb128 0x14
 1005 036e BF020000 		.4byte	.LASF41
 1006 0372 BF020000 		.4byte	.LASF41
 1007 0376 09       		.byte	0x9
 1008 0377 3A       		.byte	0x3a
 1009 0378 14       		.uleb128 0x14
 1010 0379 B7010000 		.4byte	.LASF42
 1011 037d B7010000 		.4byte	.LASF42
 1012 0381 0B       		.byte	0xb
 1013 0382 13       		.byte	0x13
 1014 0383 14       		.uleb128 0x14
 1015 0384 4D000000 		.4byte	.LASF43
 1016 0388 4D000000 		.4byte	.LASF43
 1017 038c 0B       		.byte	0xb
 1018 038d 11       		.byte	0x11
 1019 038e 14       		.uleb128 0x14
 1020 038f 29000000 		.4byte	.LASF44
 1021 0393 29000000 		.4byte	.LASF44
 1022 0397 0B       		.byte	0xb
 1023 0398 14       		.byte	0x14
 1024 0399 14       		.uleb128 0x14
 1025 039a 35010000 		.4byte	.LASF45
 1026 039e 35010000 		.4byte	.LASF45
 1027 03a2 0B       		.byte	0xb
 1028 03a3 12       		.byte	0x12
 1029 03a4 14       		.uleb128 0x14
 1030 03a5 A5010000 		.4byte	.LASF46
 1031 03a9 A5010000 		.4byte	.LASF46
 1032 03ad 0B       		.byte	0xb
 1033 03ae 15       		.byte	0x15
 1034 03af 14       		.uleb128 0x14
 1035 03b0 B2020000 		.4byte	.LASF47
 1036 03b4 B2020000 		.4byte	.LASF47
 1037 03b8 0B       		.byte	0xb
 1038 03b9 10       		.byte	0x10
 1039 03ba 00       		.byte	0
 1040              		.section	.debug_abbrev,"",%progbits
 1041              	.Ldebug_abbrev0:
 1042 0000 01       		.uleb128 0x1
 1043 0001 11       		.uleb128 0x11
 1044 0002 01       		.byte	0x1
 1045 0003 25       		.uleb128 0x25
 1046 0004 0E       		.uleb128 0xe
 1047 0005 13       		.uleb128 0x13
 1048 0006 0B       		.uleb128 0xb
 1049 0007 03       		.uleb128 0x3
 1050 0008 0E       		.uleb128 0xe
 1051 0009 1B       		.uleb128 0x1b
ARM GAS  C:\Users\bbus692\AppData\Local\Temp\ccB4HL3f.s 			page 23


 1052 000a 0E       		.uleb128 0xe
 1053 000b 55       		.uleb128 0x55
 1054 000c 17       		.uleb128 0x17
 1055 000d 11       		.uleb128 0x11
 1056 000e 01       		.uleb128 0x1
 1057 000f 10       		.uleb128 0x10
 1058 0010 17       		.uleb128 0x17
 1059 0011 00       		.byte	0
 1060 0012 00       		.byte	0
 1061 0013 02       		.uleb128 0x2
 1062 0014 24       		.uleb128 0x24
 1063 0015 00       		.byte	0
 1064 0016 0B       		.uleb128 0xb
 1065 0017 0B       		.uleb128 0xb
 1066 0018 3E       		.uleb128 0x3e
 1067 0019 0B       		.uleb128 0xb
 1068 001a 03       		.uleb128 0x3
 1069 001b 0E       		.uleb128 0xe
 1070 001c 00       		.byte	0
 1071 001d 00       		.byte	0
 1072 001e 03       		.uleb128 0x3
 1073 001f 16       		.uleb128 0x16
 1074 0020 00       		.byte	0
 1075 0021 03       		.uleb128 0x3
 1076 0022 0E       		.uleb128 0xe
 1077 0023 3A       		.uleb128 0x3a
 1078 0024 0B       		.uleb128 0xb
 1079 0025 3B       		.uleb128 0x3b
 1080 0026 0B       		.uleb128 0xb
 1081 0027 49       		.uleb128 0x49
 1082 0028 13       		.uleb128 0x13
 1083 0029 00       		.byte	0
 1084 002a 00       		.byte	0
 1085 002b 04       		.uleb128 0x4
 1086 002c 24       		.uleb128 0x24
 1087 002d 00       		.byte	0
 1088 002e 0B       		.uleb128 0xb
 1089 002f 0B       		.uleb128 0xb
 1090 0030 3E       		.uleb128 0x3e
 1091 0031 0B       		.uleb128 0xb
 1092 0032 03       		.uleb128 0x3
 1093 0033 08       		.uleb128 0x8
 1094 0034 00       		.byte	0
 1095 0035 00       		.byte	0
 1096 0036 05       		.uleb128 0x5
 1097 0037 16       		.uleb128 0x16
 1098 0038 00       		.byte	0
 1099 0039 03       		.uleb128 0x3
 1100 003a 0E       		.uleb128 0xe
 1101 003b 3A       		.uleb128 0x3a
 1102 003c 0B       		.uleb128 0xb
 1103 003d 3B       		.uleb128 0x3b
 1104 003e 05       		.uleb128 0x5
 1105 003f 49       		.uleb128 0x49
 1106 0040 13       		.uleb128 0x13
 1107 0041 00       		.byte	0
 1108 0042 00       		.byte	0
ARM GAS  C:\Users\bbus692\AppData\Local\Temp\ccB4HL3f.s 			page 24


 1109 0043 06       		.uleb128 0x6
 1110 0044 35       		.uleb128 0x35
 1111 0045 00       		.byte	0
 1112 0046 49       		.uleb128 0x49
 1113 0047 13       		.uleb128 0x13
 1114 0048 00       		.byte	0
 1115 0049 00       		.byte	0
 1116 004a 07       		.uleb128 0x7
 1117 004b 2E       		.uleb128 0x2e
 1118 004c 00       		.byte	0
 1119 004d 3F       		.uleb128 0x3f
 1120 004e 19       		.uleb128 0x19
 1121 004f 03       		.uleb128 0x3
 1122 0050 0E       		.uleb128 0xe
 1123 0051 3A       		.uleb128 0x3a
 1124 0052 0B       		.uleb128 0xb
 1125 0053 3B       		.uleb128 0x3b
 1126 0054 0B       		.uleb128 0xb
 1127 0055 27       		.uleb128 0x27
 1128 0056 19       		.uleb128 0x19
 1129 0057 11       		.uleb128 0x11
 1130 0058 01       		.uleb128 0x1
 1131 0059 12       		.uleb128 0x12
 1132 005a 06       		.uleb128 0x6
 1133 005b 40       		.uleb128 0x40
 1134 005c 18       		.uleb128 0x18
 1135 005d 9742     		.uleb128 0x2117
 1136 005f 19       		.uleb128 0x19
 1137 0060 00       		.byte	0
 1138 0061 00       		.byte	0
 1139 0062 08       		.uleb128 0x8
 1140 0063 2E       		.uleb128 0x2e
 1141 0064 01       		.byte	0x1
 1142 0065 3F       		.uleb128 0x3f
 1143 0066 19       		.uleb128 0x19
 1144 0067 03       		.uleb128 0x3
 1145 0068 0E       		.uleb128 0xe
 1146 0069 3A       		.uleb128 0x3a
 1147 006a 0B       		.uleb128 0xb
 1148 006b 3B       		.uleb128 0x3b
 1149 006c 0B       		.uleb128 0xb
 1150 006d 27       		.uleb128 0x27
 1151 006e 19       		.uleb128 0x19
 1152 006f 49       		.uleb128 0x49
 1153 0070 13       		.uleb128 0x13
 1154 0071 8701     		.uleb128 0x87
 1155 0073 19       		.uleb128 0x19
 1156 0074 11       		.uleb128 0x11
 1157 0075 01       		.uleb128 0x1
 1158 0076 12       		.uleb128 0x12
 1159 0077 06       		.uleb128 0x6
 1160 0078 40       		.uleb128 0x40
 1161 0079 18       		.uleb128 0x18
 1162 007a 9742     		.uleb128 0x2117
 1163 007c 19       		.uleb128 0x19
 1164 007d 01       		.uleb128 0x1
 1165 007e 13       		.uleb128 0x13
ARM GAS  C:\Users\bbus692\AppData\Local\Temp\ccB4HL3f.s 			page 25


 1166 007f 00       		.byte	0
 1167 0080 00       		.byte	0
 1168 0081 09       		.uleb128 0x9
 1169 0082 0B       		.uleb128 0xb
 1170 0083 01       		.byte	0x1
 1171 0084 11       		.uleb128 0x11
 1172 0085 01       		.uleb128 0x1
 1173 0086 12       		.uleb128 0x12
 1174 0087 06       		.uleb128 0x6
 1175 0088 01       		.uleb128 0x1
 1176 0089 13       		.uleb128 0x13
 1177 008a 00       		.byte	0
 1178 008b 00       		.byte	0
 1179 008c 0A       		.uleb128 0xa
 1180 008d 34       		.uleb128 0x34
 1181 008e 00       		.byte	0
 1182 008f 03       		.uleb128 0x3
 1183 0090 08       		.uleb128 0x8
 1184 0091 3A       		.uleb128 0x3a
 1185 0092 0B       		.uleb128 0xb
 1186 0093 3B       		.uleb128 0x3b
 1187 0094 0B       		.uleb128 0xb
 1188 0095 49       		.uleb128 0x49
 1189 0096 13       		.uleb128 0x13
 1190 0097 02       		.uleb128 0x2
 1191 0098 17       		.uleb128 0x17
 1192 0099 00       		.byte	0
 1193 009a 00       		.byte	0
 1194 009b 0B       		.uleb128 0xb
 1195 009c 0B       		.uleb128 0xb
 1196 009d 01       		.byte	0x1
 1197 009e 55       		.uleb128 0x55
 1198 009f 17       		.uleb128 0x17
 1199 00a0 01       		.uleb128 0x1
 1200 00a1 13       		.uleb128 0x13
 1201 00a2 00       		.byte	0
 1202 00a3 00       		.byte	0
 1203 00a4 0C       		.uleb128 0xc
 1204 00a5 898201   		.uleb128 0x4109
 1205 00a8 01       		.byte	0x1
 1206 00a9 11       		.uleb128 0x11
 1207 00aa 01       		.uleb128 0x1
 1208 00ab 31       		.uleb128 0x31
 1209 00ac 13       		.uleb128 0x13
 1210 00ad 01       		.uleb128 0x1
 1211 00ae 13       		.uleb128 0x13
 1212 00af 00       		.byte	0
 1213 00b0 00       		.byte	0
 1214 00b1 0D       		.uleb128 0xd
 1215 00b2 8A8201   		.uleb128 0x410a
 1216 00b5 00       		.byte	0
 1217 00b6 02       		.uleb128 0x2
 1218 00b7 18       		.uleb128 0x18
 1219 00b8 9142     		.uleb128 0x2111
 1220 00ba 18       		.uleb128 0x18
 1221 00bb 00       		.byte	0
 1222 00bc 00       		.byte	0
ARM GAS  C:\Users\bbus692\AppData\Local\Temp\ccB4HL3f.s 			page 26


 1223 00bd 0E       		.uleb128 0xe
 1224 00be 898201   		.uleb128 0x4109
 1225 00c1 00       		.byte	0
 1226 00c2 11       		.uleb128 0x11
 1227 00c3 01       		.uleb128 0x1
 1228 00c4 31       		.uleb128 0x31
 1229 00c5 13       		.uleb128 0x13
 1230 00c6 00       		.byte	0
 1231 00c7 00       		.byte	0
 1232 00c8 0F       		.uleb128 0xf
 1233 00c9 34       		.uleb128 0x34
 1234 00ca 00       		.byte	0
 1235 00cb 03       		.uleb128 0x3
 1236 00cc 0E       		.uleb128 0xe
 1237 00cd 3A       		.uleb128 0x3a
 1238 00ce 0B       		.uleb128 0xb
 1239 00cf 3B       		.uleb128 0x3b
 1240 00d0 05       		.uleb128 0x5
 1241 00d1 49       		.uleb128 0x49
 1242 00d2 13       		.uleb128 0x13
 1243 00d3 3F       		.uleb128 0x3f
 1244 00d4 19       		.uleb128 0x19
 1245 00d5 3C       		.uleb128 0x3c
 1246 00d6 19       		.uleb128 0x19
 1247 00d7 00       		.byte	0
 1248 00d8 00       		.byte	0
 1249 00d9 10       		.uleb128 0x10
 1250 00da 34       		.uleb128 0x34
 1251 00db 00       		.byte	0
 1252 00dc 03       		.uleb128 0x3
 1253 00dd 0E       		.uleb128 0xe
 1254 00de 3A       		.uleb128 0x3a
 1255 00df 0B       		.uleb128 0xb
 1256 00e0 3B       		.uleb128 0x3b
 1257 00e1 0B       		.uleb128 0xb
 1258 00e2 49       		.uleb128 0x49
 1259 00e3 13       		.uleb128 0x13
 1260 00e4 3F       		.uleb128 0x3f
 1261 00e5 19       		.uleb128 0x19
 1262 00e6 02       		.uleb128 0x2
 1263 00e7 18       		.uleb128 0x18
 1264 00e8 00       		.byte	0
 1265 00e9 00       		.byte	0
 1266 00ea 11       		.uleb128 0x11
 1267 00eb 34       		.uleb128 0x34
 1268 00ec 00       		.byte	0
 1269 00ed 03       		.uleb128 0x3
 1270 00ee 08       		.uleb128 0x8
 1271 00ef 3A       		.uleb128 0x3a
 1272 00f0 0B       		.uleb128 0xb
 1273 00f1 3B       		.uleb128 0x3b
 1274 00f2 0B       		.uleb128 0xb
 1275 00f3 49       		.uleb128 0x49
 1276 00f4 13       		.uleb128 0x13
 1277 00f5 3F       		.uleb128 0x3f
 1278 00f6 19       		.uleb128 0x19
 1279 00f7 02       		.uleb128 0x2
ARM GAS  C:\Users\bbus692\AppData\Local\Temp\ccB4HL3f.s 			page 27


 1280 00f8 18       		.uleb128 0x18
 1281 00f9 00       		.byte	0
 1282 00fa 00       		.byte	0
 1283 00fb 12       		.uleb128 0x12
 1284 00fc 01       		.uleb128 0x1
 1285 00fd 01       		.byte	0x1
 1286 00fe 49       		.uleb128 0x49
 1287 00ff 13       		.uleb128 0x13
 1288 0100 01       		.uleb128 0x1
 1289 0101 13       		.uleb128 0x13
 1290 0102 00       		.byte	0
 1291 0103 00       		.byte	0
 1292 0104 13       		.uleb128 0x13
 1293 0105 21       		.uleb128 0x21
 1294 0106 00       		.byte	0
 1295 0107 49       		.uleb128 0x49
 1296 0108 13       		.uleb128 0x13
 1297 0109 2F       		.uleb128 0x2f
 1298 010a 0B       		.uleb128 0xb
 1299 010b 00       		.byte	0
 1300 010c 00       		.byte	0
 1301 010d 14       		.uleb128 0x14
 1302 010e 2E       		.uleb128 0x2e
 1303 010f 00       		.byte	0
 1304 0110 3F       		.uleb128 0x3f
 1305 0111 19       		.uleb128 0x19
 1306 0112 3C       		.uleb128 0x3c
 1307 0113 19       		.uleb128 0x19
 1308 0114 6E       		.uleb128 0x6e
 1309 0115 0E       		.uleb128 0xe
 1310 0116 03       		.uleb128 0x3
 1311 0117 0E       		.uleb128 0xe
 1312 0118 3A       		.uleb128 0x3a
 1313 0119 0B       		.uleb128 0xb
 1314 011a 3B       		.uleb128 0x3b
 1315 011b 0B       		.uleb128 0xb
 1316 011c 00       		.byte	0
 1317 011d 00       		.byte	0
 1318 011e 00       		.byte	0
 1319              		.section	.debug_loc,"",%progbits
 1320              	.Ldebug_loc0:
 1321              	.LLST0:
 1322 0000 1C000000 		.4byte	.LVL4
 1323 0004 20000000 		.4byte	.LVL5
 1324 0008 0200     		.2byte	0x2
 1325 000a 30       		.byte	0x30
 1326 000b 9F       		.byte	0x9f
 1327 000c 20000000 		.4byte	.LVL5
 1328 0010 2F000000 		.4byte	.LVL7-1
 1329 0014 0100     		.2byte	0x1
 1330 0016 53       		.byte	0x53
 1331 0017 00000000 		.4byte	0
 1332 001b 00000000 		.4byte	0
 1333              	.LLST1:
 1334 001f 70000000 		.4byte	.LVL11
 1335 0023 82000000 		.4byte	.LVL13
 1336 0027 0100     		.2byte	0x1
ARM GAS  C:\Users\bbus692\AppData\Local\Temp\ccB4HL3f.s 			page 28


 1337 0029 52       		.byte	0x52
 1338 002a 84000000 		.4byte	.LVL14
 1339 002e 98000000 		.4byte	.LVL15
 1340 0032 0100     		.2byte	0x1
 1341 0034 52       		.byte	0x52
 1342 0035 A2000000 		.4byte	.LVL17
 1343 0039 B1000000 		.4byte	.LVL18-1
 1344 003d 0100     		.2byte	0x1
 1345 003f 52       		.byte	0x52
 1346 0040 BC000000 		.4byte	.LVL19
 1347 0044 C0000000 		.4byte	.LVL20
 1348 0048 0100     		.2byte	0x1
 1349 004a 52       		.byte	0x52
 1350 004b C6000000 		.4byte	.LVL21
 1351 004f D2000000 		.4byte	.LVL22
 1352 0053 0100     		.2byte	0x1
 1353 0055 52       		.byte	0x52
 1354 0056 DC000000 		.4byte	.LVL24
 1355 005a EB000000 		.4byte	.LVL25-1
 1356 005e 0100     		.2byte	0x1
 1357 0060 52       		.byte	0x52
 1358 0061 F6000000 		.4byte	.LVL26
 1359 0065 FA000000 		.4byte	.LVL27
 1360 0069 0100     		.2byte	0x1
 1361 006b 52       		.byte	0x52
 1362 006c 00010000 		.4byte	.LVL28
 1363 0070 0D010000 		.4byte	.LVL29-1
 1364 0074 0100     		.2byte	0x1
 1365 0076 52       		.byte	0x52
 1366 0077 16010000 		.4byte	.LVL30
 1367 007b 18010000 		.4byte	.LVL31
 1368 007f 0100     		.2byte	0x1
 1369 0081 52       		.byte	0x52
 1370 0082 00000000 		.4byte	0
 1371 0086 00000000 		.4byte	0
 1372              		.section	.debug_aranges,"",%progbits
 1373 0000 2C000000 		.4byte	0x2c
 1374 0004 0200     		.2byte	0x2
 1375 0006 00000000 		.4byte	.Ldebug_info0
 1376 000a 04       		.byte	0x4
 1377 000b 00       		.byte	0
 1378 000c 0000     		.2byte	0
 1379 000e 0000     		.2byte	0
 1380 0010 00000000 		.4byte	.LFB64
 1381 0014 24000000 		.4byte	.LFE64-.LFB64
 1382 0018 00000000 		.4byte	.LFB65
 1383 001c 0C000000 		.4byte	.LFE65-.LFB65
 1384 0020 00000000 		.4byte	.LFB66
 1385 0024 6C020000 		.4byte	.LFE66-.LFB66
 1386 0028 00000000 		.4byte	0
 1387 002c 00000000 		.4byte	0
 1388              		.section	.debug_ranges,"",%progbits
 1389              	.Ldebug_ranges0:
 1390 0000 70000000 		.4byte	.LBB3
 1391 0004 82000000 		.4byte	.LBE3
 1392 0008 84000000 		.4byte	.LBB4
 1393 000c 88000000 		.4byte	.LBE4
ARM GAS  C:\Users\bbus692\AppData\Local\Temp\ccB4HL3f.s 			page 29


 1394 0010 00000000 		.4byte	0
 1395 0014 00000000 		.4byte	0
 1396 0018 00000000 		.4byte	.LFB64
 1397 001c 24000000 		.4byte	.LFE64
 1398 0020 00000000 		.4byte	.LFB65
 1399 0024 0C000000 		.4byte	.LFE65
 1400 0028 00000000 		.4byte	.LFB66
 1401 002c 6C020000 		.4byte	.LFE66
 1402 0030 00000000 		.4byte	0
 1403 0034 00000000 		.4byte	0
 1404              		.section	.debug_line,"",%progbits
 1405              	.Ldebug_line0:
 1406 0000 85020000 		.section	.debug_str,"MS",%progbits,1
 1406      0200AF01 
 1406      00000201 
 1406      FB0E0D00 
 1406      01010101 
 1407              	.LASF22:
 1408 0000 6368616E 		.ascii	"channel\000"
 1408      6E656C00 
 1409              	.LASF27:
 1410 0008 73746174 		.ascii	"state\000"
 1410      6500
 1411              	.LASF28:
 1412 000e 72657365 		.ascii	"reset\000"
 1412      7400
 1413              	.LASF9:
 1414 0014 5F5F696E 		.ascii	"__int32_t\000"
 1414      7433325F 
 1414      7400
 1415              	.LASF23:
 1416 001e 7475726E 		.ascii	"turn_count\000"
 1416      5F636F75 
 1416      6E7400
 1417              	.LASF44:
 1418 0029 7475726E 		.ascii	"turn_right_sharp\000"
 1418      5F726967 
 1418      68745F73 
 1418      68617270 
 1418      00
 1419              	.LASF3:
 1420 003a 73686F72 		.ascii	"short unsigned int\000"
 1420      7420756E 
 1420      7369676E 
 1420      65642069 
 1420      6E7400
 1421              	.LASF43:
 1422 004d 7475726E 		.ascii	"turn_left\000"
 1422      5F6C6566 
 1422      7400
 1423              	.LASF10:
 1424 0057 696E7433 		.ascii	"int32_t\000"
 1424      325F7400 
 1425              	.LASF36:
 1426 005f 4144435F 		.ascii	"ADC_SAR_Seq_1_Start\000"
 1426      5341525F 
 1426      5365715F 
ARM GAS  C:\Users\bbus692\AppData\Local\Temp\ccB4HL3f.s 			page 30


 1426      315F5374 
 1426      61727400 
 1427              	.LASF14:
 1428 0073 666C6F61 		.ascii	"float\000"
 1428      7400
 1429              	.LASF38:
 1430 0079 54696D65 		.ascii	"Timer_1_Start\000"
 1430      725F315F 
 1430      53746172 
 1430      7400
 1431              	.LASF1:
 1432 0087 756E7369 		.ascii	"unsigned char\000"
 1432      676E6564 
 1432      20636861 
 1432      7200
 1433              	.LASF48:
 1434 0095 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1434      43313120 
 1434      352E342E 
 1434      31203230 
 1434      31363036 
 1435 00c8 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1435      20726576 
 1435      6973696F 
 1435      6E203233 
 1435      37373135 
 1436 00fb 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1436      66756E63 
 1436      74696F6E 
 1436      2D736563 
 1436      74696F6E 
 1437              	.LASF5:
 1438 0123 6C6F6E67 		.ascii	"long unsigned int\000"
 1438      20756E73 
 1438      69676E65 
 1438      6420696E 
 1438      7400
 1439              	.LASF45:
 1440 0135 7475726E 		.ascii	"turn_right\000"
 1440      5F726967 
 1440      687400
 1441              	.LASF50:
 1442 0140 5C5C6669 		.ascii	"\\\\files.auckland.ac.nz\\myhome\\Documents\\GitHub"
 1442      6C65732E 
 1442      6175636B 
 1442      6C616E64 
 1442      2E61632E 
 1443 016e 5C70726F 		.ascii	"\\project-project-group-7\\301 Project\\Sensor Test"
 1443      6A656374 
 1443      2D70726F 
 1443      6A656374 
 1443      2D67726F 
 1444 019e 2E637964 		.ascii	".cydsn\000"
 1444      736E00
 1445              	.LASF46:
 1446 01a5 73746F70 		.ascii	"stop\000"
 1446      00
ARM GAS  C:\Users\bbus692\AppData\Local\Temp\ccB4HL3f.s 			page 31


 1447              	.LASF21:
 1448 01aa 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1448      52784275 
 1448      66666572 
 1448      00
 1449              	.LASF42:
 1450 01b7 7475726E 		.ascii	"turn_left_sharp\000"
 1450      5F6C6566 
 1450      745F7368 
 1450      61727000 
 1451              	.LASF15:
 1452 01c7 646F7562 		.ascii	"double\000"
 1452      6C6500
 1453              	.LASF25:
 1454 01ce 41444352 		.ascii	"ADCResult\000"
 1454      6573756C 
 1454      7400
 1455              	.LASF51:
 1456 01d8 6D61696E 		.ascii	"main\000"
 1456      00
 1457              	.LASF12:
 1458 01dd 75696E74 		.ascii	"uint16\000"
 1458      313600
 1459              	.LASF33:
 1460 01e4 6973725F 		.ascii	"isr_eoc_1_StartEx\000"
 1460      656F635F 
 1460      315F5374 
 1460      61727445 
 1460      7800
 1461              	.LASF13:
 1462 01f6 75696E74 		.ascii	"uint32\000"
 1462      333200
 1463              	.LASF8:
 1464 01fd 756E7369 		.ascii	"unsigned int\000"
 1464      676E6564 
 1464      20696E74 
 1464      00
 1465              	.LASF37:
 1466 020a 4144435F 		.ascii	"ADC_SAR_Seq_1_StartConvert\000"
 1466      5341525F 
 1466      5365715F 
 1466      315F5374 
 1466      61727443 
 1467              	.LASF30:
 1468 0225 70617374 		.ascii	"pastValues\000"
 1468      56616C75 
 1468      657300
 1469              	.LASF7:
 1470 0230 6C6F6E67 		.ascii	"long long unsigned int\000"
 1470      206C6F6E 
 1470      6720756E 
 1470      7369676E 
 1470      65642069 
 1471              	.LASF20:
 1472 0247 6973725F 		.ascii	"isr_timer_1\000"
 1472      74696D65 
 1472      725F3100 
ARM GAS  C:\Users\bbus692\AppData\Local\Temp\ccB4HL3f.s 			page 32


 1473              	.LASF34:
 1474 0253 6973725F 		.ascii	"isr_timer_1_StartEx\000"
 1474      74696D65 
 1474      725F315F 
 1474      53746172 
 1474      74457800 
 1475              	.LASF32:
 1476 0267 73656E73 		.ascii	"sensor_state\000"
 1476      6F725F73 
 1476      74617465 
 1476      00
 1477              	.LASF17:
 1478 0274 6C6F6E67 		.ascii	"long double\000"
 1478      20646F75 
 1478      626C6500 
 1479              	.LASF18:
 1480 0280 73697A65 		.ascii	"sizetype\000"
 1480      74797065 
 1480      00
 1481              	.LASF24:
 1482 0289 64697361 		.ascii	"disable_toggle\000"
 1482      626C655F 
 1482      746F6767 
 1482      6C6500
 1483              	.LASF6:
 1484 0298 6C6F6E67 		.ascii	"long long int\000"
 1484      206C6F6E 
 1484      6720696E 
 1484      7400
 1485              	.LASF49:
 1486 02a6 6D61696E 		.ascii	"main.c\000"
 1486      2E6300
 1487              	.LASF16:
 1488 02ad 63686172 		.ascii	"char\000"
 1488      00
 1489              	.LASF47:
 1490 02b2 6D6F7665 		.ascii	"move_forward\000"
 1490      5F666F72 
 1490      77617264 
 1490      00
 1491              	.LASF41:
 1492 02bf 4144435F 		.ascii	"ADC_SAR_Seq_1_CountsTo_mVolts\000"
 1492      5341525F 
 1492      5365715F 
 1492      315F436F 
 1492      756E7473 
 1493              	.LASF31:
 1494 02dd 636F756E 		.ascii	"count\000"
 1494      7400
 1495              	.LASF2:
 1496 02e3 73686F72 		.ascii	"short int\000"
 1496      7420696E 
 1496      7400
 1497              	.LASF29:
 1498 02ed 6D617856 		.ascii	"maxValues\000"
 1498      616C7565 
 1498      7300
ARM GAS  C:\Users\bbus692\AppData\Local\Temp\ccB4HL3f.s 			page 33


 1499              	.LASF11:
 1500 02f7 75696E74 		.ascii	"uint8\000"
 1500      3800
 1501              	.LASF19:
 1502 02fd 6973725F 		.ascii	"isr_eoc_1\000"
 1502      656F635F 
 1502      3100
 1503              	.LASF4:
 1504 0307 6C6F6E67 		.ascii	"long int\000"
 1504      20696E74 
 1504      00
 1505              	.LASF39:
 1506 0310 4144435F 		.ascii	"ADC_SAR_Seq_1_IsEndConversion\000"
 1506      5341525F 
 1506      5365715F 
 1506      315F4973 
 1506      456E6443 
 1507              	.LASF35:
 1508 032e 4144435F 		.ascii	"ADC_SAR_Seq_1_IRQ_Enable\000"
 1508      5341525F 
 1508      5365715F 
 1508      315F4952 
 1508      515F456E 
 1509              	.LASF0:
 1510 0347 7369676E 		.ascii	"signed char\000"
 1510      65642063 
 1510      68617200 
 1511              	.LASF26:
 1512 0353 6D696C6C 		.ascii	"milliVoltReading\000"
 1512      69566F6C 
 1512      74526561 
 1512      64696E67 
 1512      00
 1513              	.LASF40:
 1514 0364 4144435F 		.ascii	"ADC_SAR_Seq_1_GetResult16\000"
 1514      5341525F 
 1514      5365715F 
 1514      315F4765 
 1514      74526573 
 1515              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
