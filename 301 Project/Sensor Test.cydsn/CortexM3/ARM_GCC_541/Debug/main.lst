ARM GAS  C:\Users\smas270\AppData\Local\Temp\ccbR89UE.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.isr_eoc_1,"ax",%progbits
  20              		.align	2
  21              		.global	isr_eoc_1
  22              		.thumb
  23              		.thumb_func
  24              		.type	isr_eoc_1, %function
  25              	isr_eoc_1:
  26              	.LFB63:
  27              		.file 1 "main.c"
   1:main.c        **** #include "project.h"
   2:main.c        **** #include "motors.h"
   3:main.c        **** 
   4:main.c        **** #define ON 1
   5:main.c        **** #define OFF 0
   6:main.c        **** 
   7:main.c        **** // FL, FR, CL, CR, BC = front left, front right, center left, center right, back center respectivel
   8:main.c        **** #define FL 0
   9:main.c        **** #define FR 1
  10:main.c        **** #define CL 2
  11:main.c        **** #define CR 3
  12:main.c        **** #define BC 4
  13:main.c        **** 
  14:main.c        **** // State values.
  15:main.c        **** #define FORWARD 0
  16:main.c        **** #define TURNING_LEFT 1
  17:main.c        **** #define TURNING_RIGHT 2
  18:main.c        **** #define EXIT_LEFT 3
  19:main.c        **** #define EXIT_RIGHT 4
  20:main.c        **** #define CONTINUE_FROM_LEFT 5
  21:main.c        **** #define CONTINUE_FROM_RIGHT 6
  22:main.c        **** 
  23:main.c        **** // Prototype declarations.
  24:main.c        **** CY_ISR_PROTO(isr_eoc_1);
  25:main.c        **** CY_ISR_PROTO(isr_timer_1);
  26:main.c        **** 
  27:main.c        **** volatile uint8 channel = 0;
  28:main.c        **** 
  29:main.c        **** uint32 i = 0;
  30:main.c        **** 
ARM GAS  C:\Users\smas270\AppData\Local\Temp\ccbR89UE.s 			page 2


  31:main.c        **** uint16 ADCResult;
  32:main.c        **** uint16 milliVoltReading;
  33:main.c        **** uint8 state = FORWARD;
  34:main.c        **** volatile uint8 reset = 0;
  35:main.c        **** 
  36:main.c        **** uint16 maxValues[5] = {0};
  37:main.c        **** uint16 pastValues[5] = {0};
  38:main.c        **** volatile uint16 count = 0;
  39:main.c        **** uint8 sensor_state[5];
  40:main.c        **** 
  41:main.c        **** CY_ISR(isr_eoc_1) {
  28              		.loc 1 41 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  42:main.c        ****     // Change the ADC channel each time an eoc interrupt is generated.
  43:main.c        ****     if (channel == 4) {
  33              		.loc 1 43 0
  34 0000 074B     		ldr	r3, .L4
  35 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  36 0004 DBB2     		uxtb	r3, r3
  37 0006 042B     		cmp	r3, #4
  38 0008 03D1     		bne	.L2
  44:main.c        ****         channel = 0;
  39              		.loc 1 44 0
  40 000a 0022     		movs	r2, #0
  41 000c 044B     		ldr	r3, .L4
  42 000e 1A70     		strb	r2, [r3]
  43 0010 7047     		bx	lr
  44              	.L2:
  45:main.c        ****     } else {
  46:main.c        ****         channel++;
  45              		.loc 1 46 0
  46 0012 034A     		ldr	r2, .L4
  47 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  48 0016 0133     		adds	r3, r3, #1
  49 0018 DBB2     		uxtb	r3, r3
  50 001a 1370     		strb	r3, [r2]
  51 001c 7047     		bx	lr
  52              	.L5:
  53 001e 00BF     		.align	2
  54              	.L4:
  55 0020 00000000 		.word	.LANCHOR0
  56              		.cfi_endproc
  57              	.LFE63:
  58              		.size	isr_eoc_1, .-isr_eoc_1
  59              		.section	.text.isr_timer_1,"ax",%progbits
  60              		.align	2
  61              		.global	isr_timer_1
  62              		.thumb
  63              		.thumb_func
  64              		.type	isr_timer_1, %function
  65              	isr_timer_1:
  66              	.LFB64:
  47:main.c        ****     }   
  48:main.c        **** }
ARM GAS  C:\Users\smas270\AppData\Local\Temp\ccbR89UE.s 			page 3


  49:main.c        **** 
  50:main.c        **** CY_ISR(isr_timer_1) {
  67              		.loc 1 50 0
  68              		.cfi_startproc
  69              		@ args = 0, pretend = 0, frame = 0
  70              		@ frame_needed = 0, uses_anonymous_args = 0
  71              		@ link register save eliminated.
  51:main.c        ****     reset = 1;
  72              		.loc 1 51 0
  73 0000 0122     		movs	r2, #1
  74 0002 014B     		ldr	r3, .L7
  75 0004 5A70     		strb	r2, [r3, #1]
  76 0006 7047     		bx	lr
  77              	.L8:
  78              		.align	2
  79              	.L7:
  80 0008 00000000 		.word	.LANCHOR0
  81              		.cfi_endproc
  82              	.LFE64:
  83              		.size	isr_timer_1, .-isr_timer_1
  84              		.section	.text.main,"ax",%progbits
  85              		.align	2
  86              		.global	main
  87              		.thumb
  88              		.thumb_func
  89              		.type	main, %function
  90              	main:
  91              	.LFB65:
  52:main.c        **** }
  53:main.c        **** 
  54:main.c        **** int main(void){
  92              		.loc 1 54 0
  93              		.cfi_startproc
  94              		@ args = 0, pretend = 0, frame = 0
  95              		@ frame_needed = 0, uses_anonymous_args = 0
  96 0000 10B5     		push	{r4, lr}
  97              		.cfi_def_cfa_offset 8
  98              		.cfi_offset 4, -8
  99              		.cfi_offset 14, -4
  55:main.c        ****     
  56:main.c        ****     // Enable global interrupts as well as start and enable the isr.
  57:main.c        ****     CyGlobalIntEnable;
 100              		.loc 1 57 0
 101              		.syntax unified
 102              	@ 57 "main.c" 1
 103 0002 62B6     		CPSIE   i
 104              	@ 0 "" 2
  58:main.c        ****     isr_eoc_1_StartEx(isr_eoc_1);
 105              		.loc 1 58 0
 106              		.thumb
 107              		.syntax unified
 108 0004 7548     		ldr	r0, .L39
 109 0006 FFF7FEFF 		bl	isr_eoc_1_StartEx
 110              	.LVL0:
  59:main.c        ****     isr_timer_1_StartEx(isr_timer_1);
 111              		.loc 1 59 0
 112 000a 7548     		ldr	r0, .L39+4
ARM GAS  C:\Users\smas270\AppData\Local\Temp\ccbR89UE.s 			page 4


 113 000c FFF7FEFF 		bl	isr_timer_1_StartEx
 114              	.LVL1:
  60:main.c        ****     ADC_SAR_Seq_1_IRQ_Enable();
 115              		.loc 1 60 0
 116 0010 FFF7FEFF 		bl	ADC_SAR_Seq_1_IRQ_Enable
 117              	.LVL2:
  61:main.c        ****     //isr_eoc_1_Enable();
  62:main.c        ****     //isr_eoc_2_StartEx(isr_eoc_2);
  63:main.c        ****     //isr_eoc_2_Enable();
  64:main.c        ****     //isr_timer_StartEx(isr_timer);
  65:main.c        ****     //isr_timer_Enable();
  66:main.c        ****     
  67:main.c        ****     // Start the ADC and begin conversions (in free running mode so will continue to convert).
  68:main.c        ****     ADC_SAR_Seq_1_Start();
 118              		.loc 1 68 0
 119 0014 FFF7FEFF 		bl	ADC_SAR_Seq_1_Start
 120              	.LVL3:
  69:main.c        ****     ADC_SAR_Seq_1_StartConvert();
 121              		.loc 1 69 0
 122 0018 FFF7FEFF 		bl	ADC_SAR_Seq_1_StartConvert
 123              	.LVL4:
 124              	.LBB2:
  70:main.c        ****     
  71:main.c        ****     // Initialise sensor states.
  72:main.c        ****     for (int i = 0; i < 5; i++) {
 125              		.loc 1 72 0
 126 001c 0023     		movs	r3, #0
 127 001e 03E0     		b	.L10
 128              	.LVL5:
 129              	.L11:
  73:main.c        ****         sensor_state[i] = ON;
 130              		.loc 1 73 0 discriminator 3
 131 0020 0121     		movs	r1, #1
 132 0022 704A     		ldr	r2, .L39+8
 133 0024 D154     		strb	r1, [r2, r3]
  72:main.c        ****         sensor_state[i] = ON;
 134              		.loc 1 72 0 discriminator 3
 135 0026 0B44     		add	r3, r3, r1
 136              	.LVL6:
 137              	.L10:
  72:main.c        ****         sensor_state[i] = ON;
 138              		.loc 1 72 0 is_stmt 0 discriminator 1
 139 0028 042B     		cmp	r3, #4
 140 002a F9DD     		ble	.L11
 141              	.LBE2:
  74:main.c        ****     }
  75:main.c        ****     
  76:main.c        ****     //PWM_1_WritePeriod(250);
  77:main.c        ****     //PWM_1_Start();
  78:main.c        ****     //PWM_1_WriteCompare(83);
  79:main.c        ****                  
  80:main.c        ****     //PWM_2_WritePeriod(250);
  81:main.c        ****     //PWM_2_Start();
  82:main.c        ****     //PWM_2_WriteCompare(90);
  83:main.c        ****     Timer_1_Start();
 142              		.loc 1 83 0 is_stmt 1
 143 002c FFF7FEFF 		bl	Timer_1_Start
ARM GAS  C:\Users\smas270\AppData\Local\Temp\ccbR89UE.s 			page 5


 144              	.LVL7:
 145              	.L12:
  84:main.c        ****     //turn_left();
  85:main.c        ****     //stop();
  86:main.c        ****     //turn_right();
  87:main.c        ****         
  88:main.c        ****     while(1) {
  89:main.c        ****         
  90:main.c        **** // If the conversion result is ready, put it into a variable and convert it into millivolts.
  91:main.c        ****         ADC_SAR_Seq_1_IsEndConversion(ADC_SAR_Seq_1_WAIT_FOR_RESULT);
 146              		.loc 1 91 0
 147 0030 0020     		movs	r0, #0
 148 0032 FFF7FEFF 		bl	ADC_SAR_Seq_1_IsEndConversion
 149              	.LVL8:
  92:main.c        ****         ADCResult = ADC_SAR_Seq_1_GetResult16(channel);
 150              		.loc 1 92 0
 151 0036 6C4C     		ldr	r4, .L39+12
 152 0038 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 153 003a FFF7FEFF 		bl	ADC_SAR_Seq_1_GetResult16
 154              	.LVL9:
 155 003e 6B4B     		ldr	r3, .L39+16
 156 0040 1880     		strh	r0, [r3]	@ movhi
  93:main.c        ****         milliVoltReading = ADC_SAR_Seq_1_CountsTo_mVolts(ADCResult);
 157              		.loc 1 93 0
 158 0042 FFF7FEFF 		bl	ADC_SAR_Seq_1_CountsTo_mVolts
 159              	.LVL10:
 160 0046 80B2     		uxth	r0, r0
 161 0048 694B     		ldr	r3, .L39+20
 162 004a 1880     		strh	r0, [r3]	@ movhi
  94:main.c        ****         
  95:main.c        ****         if (milliVoltReading > maxValues[channel]) {
 163              		.loc 1 95 0
 164 004c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 165 004e 04EB4304 		add	r4, r4, r3, lsl #1
 166 0052 A388     		ldrh	r3, [r4, #4]
 167 0054 9842     		cmp	r0, r3
 168 0056 04D9     		bls	.L13
  96:main.c        ****             maxValues[channel] = milliVoltReading;
 169              		.loc 1 96 0
 170 0058 634B     		ldr	r3, .L39+12
 171 005a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 172 005c 03EB4203 		add	r3, r3, r2, lsl #1
 173 0060 9880     		strh	r0, [r3, #4]	@ movhi
 174              	.L13:
  97:main.c        ****         }
  98:main.c        ****         
  99:main.c        ****         if (reset == 1) {
 175              		.loc 1 99 0
 176 0062 614B     		ldr	r3, .L39+12
 177 0064 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 178 0066 DBB2     		uxtb	r3, r3
 179 0068 012B     		cmp	r3, #1
 180 006a 53D1     		bne	.L15
 181 006c 08E0     		b	.L37
 182              	.LVL11:
 183              	.L16:
 184              	.LBB3:
ARM GAS  C:\Users\smas270\AppData\Local\Temp\ccbR89UE.s 			page 6


 100:main.c        ****             for (int i = 0; i < 5; i++) {
 101:main.c        ****                 pastValues[i] = maxValues[i];
 185              		.loc 1 101 0 discriminator 3
 186 006e 5E4B     		ldr	r3, .L39+12
 187 0070 03EB4203 		add	r3, r3, r2, lsl #1
 188 0074 9988     		ldrh	r1, [r3, #4]
 189 0076 1982     		strh	r1, [r3, #16]	@ movhi
 102:main.c        ****                 maxValues[i] = 0;
 190              		.loc 1 102 0 discriminator 3
 191 0078 0021     		movs	r1, #0
 192 007a 9980     		strh	r1, [r3, #4]	@ movhi
 100:main.c        ****             for (int i = 0; i < 5; i++) {
 193              		.loc 1 100 0 discriminator 3
 194 007c 0132     		adds	r2, r2, #1
 195              	.LVL12:
 196 007e 00E0     		b	.L14
 197              	.LVL13:
 198              	.L37:
 199              	.LBE3:
 200 0080 0022     		movs	r2, #0
 201              	.L14:
 202              	.LVL14:
 203              	.LBB4:
 100:main.c        ****             for (int i = 0; i < 5; i++) {
 204              		.loc 1 100 0 is_stmt 0 discriminator 1
 205 0082 042A     		cmp	r2, #4
 206 0084 F3DD     		ble	.L16
 207              	.LBE4:
 103:main.c        ****             }
 104:main.c        ****             
 105:main.c        ****             if (state == TURNING_LEFT) {
 208              		.loc 1 105 0 is_stmt 1
 209 0086 584B     		ldr	r3, .L39+12
 210 0088 9B7E     		ldrb	r3, [r3, #26]	@ zero_extendqisi2
 211 008a 012B     		cmp	r3, #1
 212 008c 08D1     		bne	.L17
 106:main.c        ****                 if (sensor_state[FL] == OFF) {
 213              		.loc 1 106 0
 214 008e 554B     		ldr	r3, .L39+8
 215 0090 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 216 0092 13B9     		cbnz	r3, .L18
 107:main.c        ****                     state = EXIT_LEFT;
 217              		.loc 1 107 0
 218 0094 0322     		movs	r2, #3
 219              	.LVL15:
 220 0096 544B     		ldr	r3, .L39+12
 221 0098 9A76     		strb	r2, [r3, #26]
 222              	.L18:
 108:main.c        ****                 }
 109:main.c        ****                 turn_left();
 223              		.loc 1 109 0
 224 009a FFF7FEFF 		bl	turn_left
 225              	.LVL16:
 226 009e 36E0     		b	.L19
 227              	.LVL17:
 228              	.L17:
 110:main.c        ****             } else if (state == EXIT_LEFT) {
ARM GAS  C:\Users\smas270\AppData\Local\Temp\ccbR89UE.s 			page 7


 229              		.loc 1 110 0
 230 00a0 032B     		cmp	r3, #3
 231 00a2 08D1     		bne	.L20
 111:main.c        ****                 if (sensor_state[FR] == OFF) {
 232              		.loc 1 111 0
 233 00a4 4F4B     		ldr	r3, .L39+8
 234 00a6 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 235 00a8 13B9     		cbnz	r3, .L21
 112:main.c        ****                     state = CONTINUE_FROM_LEFT;
 236              		.loc 1 112 0
 237 00aa 0522     		movs	r2, #5
 238              	.LVL18:
 239 00ac 4E4B     		ldr	r3, .L39+12
 240 00ae 9A76     		strb	r2, [r3, #26]
 241              	.L21:
 113:main.c        ****                 }
 114:main.c        ****                 move_forward();
 242              		.loc 1 114 0
 243 00b0 FFF7FEFF 		bl	move_forward
 244              	.LVL19:
 245 00b4 2BE0     		b	.L19
 246              	.LVL20:
 247              	.L20:
 115:main.c        ****             } else if (state == CONTINUE_FROM_LEFT) {
 248              		.loc 1 115 0
 249 00b6 052B     		cmp	r3, #5
 250 00b8 08D1     		bne	.L22
 116:main.c        ****                 if (sensor_state[BC] == OFF) {
 251              		.loc 1 116 0
 252 00ba 4A4B     		ldr	r3, .L39+8
 253 00bc 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 254 00be 13B9     		cbnz	r3, .L23
 117:main.c        ****                     state = FORWARD;
 255              		.loc 1 117 0
 256 00c0 0022     		movs	r2, #0
 257              	.LVL21:
 258 00c2 494B     		ldr	r3, .L39+12
 259 00c4 9A76     		strb	r2, [r3, #26]
 260              	.L23:
 118:main.c        ****                 }
 119:main.c        ****                 turn_right();
 261              		.loc 1 119 0
 262 00c6 FFF7FEFF 		bl	turn_right
 263              	.LVL22:
 264 00ca 20E0     		b	.L19
 265              	.LVL23:
 266              	.L22:
 120:main.c        ****                 // WHEN THE RIGHT SENSOR IS FIXED UNCOMMENT THE BELOW
 121:main.c        ****             //} else if (state == TURNING_RIGHT) {
 122:main.c        ****             //    if (sensor_state[FR] == OFF) {
 123:main.c        ****             //        state = EXIT_RIGHT;
 124:main.c        ****             //    }
 125:main.c        ****             //    turn_right();
 126:main.c        ****             //} else if (state == EXIT_RIGHT) {
 127:main.c        ****             //    if (sensor_state[FL] == OFF) {
 128:main.c        ****             //        state = CONTINUE_FROM_RIGHT;
 129:main.c        ****             //    }
ARM GAS  C:\Users\smas270\AppData\Local\Temp\ccbR89UE.s 			page 8


 130:main.c        ****             //    move_forward();
 131:main.c        ****             //} else if (state == CONTINUE_FROM_RIGHT) {
 132:main.c        ****             //    if (sensor_state[BC] == OFF) {
 133:main.c        ****             //        state = FORWARD;
 134:main.c        ****             //    }
 135:main.c        ****             //    turn_left();
 136:main.c        ****             } else if (state == FORWARD) {
 267              		.loc 1 136 0
 268 00cc FBB9     		cbnz	r3, .L19
 137:main.c        ****                 if (sensor_state[FL] == OFF) {
 269              		.loc 1 137 0
 270 00ce 454B     		ldr	r3, .L39+8
 271 00d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 272 00d2 13B9     		cbnz	r3, .L24
 138:main.c        ****                     turn_left();
 273              		.loc 1 138 0
 274 00d4 FFF7FEFF 		bl	turn_left
 275              	.LVL24:
 276 00d8 19E0     		b	.L19
 277              	.LVL25:
 278              	.L24:
 139:main.c        ****                 } else if (sensor_state[FR] == OFF) {
 279              		.loc 1 139 0
 280 00da 424A     		ldr	r2, .L39+8
 281              	.LVL26:
 282 00dc 5278     		ldrb	r2, [r2, #1]	@ zero_extendqisi2
 283 00de 12B9     		cbnz	r2, .L25
 140:main.c        ****                     turn_right();
 284              		.loc 1 140 0
 285 00e0 FFF7FEFF 		bl	turn_right
 286              	.LVL27:
 287 00e4 13E0     		b	.L19
 288              	.L25:
 141:main.c        ****                     // WHEN THE RIGHT SENSOR IS FIXED, CHANGE sensor_state[CR] == OFF to sensor_sta
 142:main.c        ****                 } else if (sensor_state[FL] == ON && sensor_state[FR] == ON && sensor_state[CL] == 
 289              		.loc 1 142 0
 290 00e6 012B     		cmp	r3, #1
 291 00e8 0FD1     		bne	.L26
 292              		.loc 1 142 0 is_stmt 0 discriminator 1
 293 00ea 012A     		cmp	r2, #1
 294 00ec 0DD1     		bne	.L26
 295              		.loc 1 142 0 discriminator 2
 296 00ee 3D4B     		ldr	r3, .L39+8
 297 00f0 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 298 00f2 53B9     		cbnz	r3, .L26
 299              		.loc 1 142 0 discriminator 3
 300 00f4 3B4B     		ldr	r3, .L39+8
 301 00f6 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 302 00f8 3BB9     		cbnz	r3, .L26
 143:main.c        ****                     stop();
 303              		.loc 1 143 0 is_stmt 1
 304 00fa FFF7FEFF 		bl	stop
 305              	.LVL28:
 144:main.c        ****                     state = TURNING_LEFT;
 306              		.loc 1 144 0
 307 00fe 0122     		movs	r2, #1
 308 0100 394B     		ldr	r3, .L39+12
ARM GAS  C:\Users\smas270\AppData\Local\Temp\ccbR89UE.s 			page 9


 309 0102 9A76     		strb	r2, [r3, #26]
 145:main.c        ****                     turn_left();
 310              		.loc 1 145 0
 311 0104 FFF7FEFF 		bl	turn_left
 312              	.LVL29:
 313 0108 01E0     		b	.L19
 314              	.L26:
 146:main.c        ****                     // WHEN THE RIGHT SENSOR IS FIXED UNCOMMENT THE BELOW
 147:main.c        ****                 //} else if (sensor_state[FL] == ON && sensor_state[FR] == ON && sensor_state[CL] =
 148:main.c        ****                 //    stop();
 149:main.c        ****                 //    state = TURNING_RIGHT;
 150:main.c        ****                 //    turn_right();
 151:main.c        ****                 } else {
 152:main.c        ****                     move_forward();
 315              		.loc 1 152 0
 316 010a FFF7FEFF 		bl	move_forward
 317              	.LVL30:
 318              	.L19:
 153:main.c        ****                 }
 154:main.c        ****             }
 155:main.c        ****                      
 156:main.c        ****             reset = 0;
 319              		.loc 1 156 0
 320 010e 0022     		movs	r2, #0
 321 0110 354B     		ldr	r3, .L39+12
 322 0112 5A70     		strb	r2, [r3, #1]
 323              	.L15:
 157:main.c        ****             
 158:main.c        ****         }     
 159:main.c        ****         
 160:main.c        ****         // If the milliVolt reading is above the required threshold, perform the requested operatio
 161:main.c        ****         if (pastValues[channel] >= 800) {
 324              		.loc 1 161 0
 325 0114 344B     		ldr	r3, .L39+12
 326 0116 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 327 0118 03EB4203 		add	r3, r3, r2, lsl #1
 328 011c 1B8A     		ldrh	r3, [r3, #16]
 329 011e B3F5487F 		cmp	r3, #800
 330 0122 2DD3     		bcc	.L27
 162:main.c        ****             // Change the position in the sensor_state array depending on the channel being read.
 163:main.c        ****             if (channel == 0) {
 331              		.loc 1 163 0
 332 0124 304B     		ldr	r3, .L39+12
 333 0126 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 334 0128 13F0FF0F 		tst	r3, #255
 335 012c 03D1     		bne	.L28
 164:main.c        ****                 sensor_state[FL] = ON;
 336              		.loc 1 164 0
 337 012e 0122     		movs	r2, #1
 338 0130 2C4B     		ldr	r3, .L39+8
 339 0132 1A70     		strb	r2, [r3]
 340 0134 7CE7     		b	.L12
 341              	.L28:
 165:main.c        ****             } else if (channel == 1) {
 342              		.loc 1 165 0
 343 0136 2C4B     		ldr	r3, .L39+12
 344 0138 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\smas270\AppData\Local\Temp\ccbR89UE.s 			page 10


 345 013a DBB2     		uxtb	r3, r3
 346 013c 012B     		cmp	r3, #1
 347 013e 03D1     		bne	.L30
 166:main.c        ****                 sensor_state[FR] = ON;
 348              		.loc 1 166 0
 349 0140 0122     		movs	r2, #1
 350 0142 284B     		ldr	r3, .L39+8
 351 0144 5A70     		strb	r2, [r3, #1]
 352 0146 73E7     		b	.L12
 353              	.L30:
 167:main.c        ****             } else if (channel == 2) {
 354              		.loc 1 167 0
 355 0148 274B     		ldr	r3, .L39+12
 356 014a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 357 014c DBB2     		uxtb	r3, r3
 358 014e 022B     		cmp	r3, #2
 359 0150 03D1     		bne	.L31
 168:main.c        ****                 sensor_state[CL] = ON;
 360              		.loc 1 168 0
 361 0152 0122     		movs	r2, #1
 362 0154 234B     		ldr	r3, .L39+8
 363 0156 9A70     		strb	r2, [r3, #2]
 364 0158 6AE7     		b	.L12
 365              	.L31:
 169:main.c        ****             } else if (channel == 3) {
 366              		.loc 1 169 0
 367 015a 234B     		ldr	r3, .L39+12
 368 015c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 369 015e DBB2     		uxtb	r3, r3
 370 0160 032B     		cmp	r3, #3
 371 0162 03D1     		bne	.L32
 170:main.c        ****                 sensor_state[CR] = ON;
 372              		.loc 1 170 0
 373 0164 0122     		movs	r2, #1
 374 0166 1F4B     		ldr	r3, .L39+8
 375 0168 DA70     		strb	r2, [r3, #3]
 376 016a 61E7     		b	.L12
 377              	.L32:
 171:main.c        ****             } else if (channel == 4) {
 378              		.loc 1 171 0
 379 016c 1E4B     		ldr	r3, .L39+12
 380 016e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 381 0170 DBB2     		uxtb	r3, r3
 382 0172 042B     		cmp	r3, #4
 383 0174 7FF45CAF 		bne	.L12
 172:main.c        ****                 sensor_state[BC] = ON;
 384              		.loc 1 172 0
 385 0178 0122     		movs	r2, #1
 386 017a 1A4B     		ldr	r3, .L39+8
 387 017c 1A71     		strb	r2, [r3, #4]
 388 017e 57E7     		b	.L12
 389              	.L27:
 173:main.c        ****             }
 174:main.c        ****         } else {
 175:main.c        ****             if (channel == 0) {
 390              		.loc 1 175 0
 391 0180 194B     		ldr	r3, .L39+12
ARM GAS  C:\Users\smas270\AppData\Local\Temp\ccbR89UE.s 			page 11


 392 0182 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 393 0184 13F0FF0F 		tst	r3, #255
 394 0188 03D1     		bne	.L33
 176:main.c        ****                 sensor_state[FL] = OFF;
 395              		.loc 1 176 0
 396 018a 0022     		movs	r2, #0
 397 018c 154B     		ldr	r3, .L39+8
 398 018e 1A70     		strb	r2, [r3]
 399 0190 4EE7     		b	.L12
 400              	.L33:
 177:main.c        ****             } else if (channel == 1) {
 401              		.loc 1 177 0
 402 0192 154B     		ldr	r3, .L39+12
 403 0194 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 404 0196 DBB2     		uxtb	r3, r3
 405 0198 012B     		cmp	r3, #1
 406 019a 03D1     		bne	.L34
 178:main.c        ****                 sensor_state[FR] = OFF;
 407              		.loc 1 178 0
 408 019c 0022     		movs	r2, #0
 409 019e 114B     		ldr	r3, .L39+8
 410 01a0 5A70     		strb	r2, [r3, #1]
 411 01a2 45E7     		b	.L12
 412              	.L34:
 179:main.c        ****             } else if (channel == 2) {
 413              		.loc 1 179 0
 414 01a4 104B     		ldr	r3, .L39+12
 415 01a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 416 01a8 DBB2     		uxtb	r3, r3
 417 01aa 022B     		cmp	r3, #2
 418 01ac 03D1     		bne	.L35
 180:main.c        ****                 sensor_state[CL] = OFF;
 419              		.loc 1 180 0
 420 01ae 0022     		movs	r2, #0
 421 01b0 0C4B     		ldr	r3, .L39+8
 422 01b2 9A70     		strb	r2, [r3, #2]
 423 01b4 3CE7     		b	.L12
 424              	.L35:
 181:main.c        ****             } else if (channel == 3) {
 425              		.loc 1 181 0
 426 01b6 0C4B     		ldr	r3, .L39+12
 427 01b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 428 01ba DBB2     		uxtb	r3, r3
 429 01bc 032B     		cmp	r3, #3
 430 01be 03D1     		bne	.L36
 182:main.c        ****                 sensor_state[CR] = OFF;
 431              		.loc 1 182 0
 432 01c0 0022     		movs	r2, #0
 433 01c2 084B     		ldr	r3, .L39+8
 434 01c4 DA70     		strb	r2, [r3, #3]
 435 01c6 33E7     		b	.L12
 436              	.L36:
 183:main.c        ****             } else if (channel == 4) {
 437              		.loc 1 183 0
 438 01c8 074B     		ldr	r3, .L39+12
 439 01ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 440 01cc DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\smas270\AppData\Local\Temp\ccbR89UE.s 			page 12


 441 01ce 042B     		cmp	r3, #4
 442 01d0 7FF42EAF 		bne	.L12
 184:main.c        ****                 sensor_state[BC] = OFF;
 443              		.loc 1 184 0
 444 01d4 0022     		movs	r2, #0
 445 01d6 034B     		ldr	r3, .L39+8
 446 01d8 1A71     		strb	r2, [r3, #4]
 447 01da 29E7     		b	.L12
 448              	.L40:
 449              		.align	2
 450              	.L39:
 451 01dc 00000000 		.word	isr_eoc_1
 452 01e0 00000000 		.word	isr_timer_1
 453 01e4 00000000 		.word	sensor_state
 454 01e8 00000000 		.word	.LANCHOR0
 455 01ec 00000000 		.word	ADCResult
 456 01f0 00000000 		.word	milliVoltReading
 457              		.cfi_endproc
 458              	.LFE65:
 459              		.size	main, .-main
 460              		.comm	sensor_state,5,4
 461              		.global	count
 462              		.global	pastValues
 463              		.global	maxValues
 464              		.global	reset
 465              		.global	state
 466              		.comm	milliVoltReading,2,2
 467              		.comm	ADCResult,2,2
 468              		.global	i
 469              		.global	channel
 470              		.bss
 471              		.align	2
 472              		.set	.LANCHOR0,. + 0
 473              		.type	channel, %object
 474              		.size	channel, 1
 475              	channel:
 476 0000 00       		.space	1
 477              		.type	reset, %object
 478              		.size	reset, 1
 479              	reset:
 480 0001 00       		.space	1
 481 0002 0000     		.space	2
 482              		.type	maxValues, %object
 483              		.size	maxValues, 10
 484              	maxValues:
 485 0004 00000000 		.space	10
 485      00000000 
 485      0000
 486 000e 0000     		.space	2
 487              		.type	pastValues, %object
 488              		.size	pastValues, 10
 489              	pastValues:
 490 0010 00000000 		.space	10
 490      00000000 
 490      0000
 491              		.type	state, %object
 492              		.size	state, 1
ARM GAS  C:\Users\smas270\AppData\Local\Temp\ccbR89UE.s 			page 13


 493              	state:
 494 001a 00       		.space	1
 495 001b 00       		.space	1
 496              		.type	count, %object
 497              		.size	count, 2
 498              	count:
 499 001c 0000     		.space	2
 500 001e 0000     		.space	2
 501              		.type	i, %object
 502              		.size	i, 4
 503              	i:
 504 0020 00000000 		.space	4
 505              		.text
 506              	.Letext0:
 507              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 508              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 509              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 510              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 511              		.file 6 "Generated_Source\\PSoC5/isr_eoc_1.h"
 512              		.file 7 "Generated_Source\\PSoC5/isr_timer_1.h"
 513              		.file 8 "Generated_Source\\PSoC5/ADC_SAR_Seq_1_IRQ.h"
 514              		.file 9 "Generated_Source\\PSoC5/ADC_SAR_Seq_1.h"
 515              		.file 10 "Generated_Source\\PSoC5/Timer_1.h"
 516              		.file 11 "motors.h"
 517              		.section	.debug_info,"",%progbits
 518              	.Ldebug_info0:
 519 0000 64030000 		.4byte	0x364
 520 0004 0400     		.2byte	0x4
 521 0006 00000000 		.4byte	.Ldebug_abbrev0
 522 000a 04       		.byte	0x4
 523 000b 01       		.uleb128 0x1
 524 000c E9000000 		.4byte	.LASF44
 525 0010 0C       		.byte	0xc
 526 0011 76020000 		.4byte	.LASF45
 527 0015 31000000 		.4byte	.LASF46
 528 0019 18000000 		.4byte	.Ldebug_ranges0+0x18
 529 001d 00000000 		.4byte	0
 530 0021 00000000 		.4byte	.Ldebug_line0
 531 0025 02       		.uleb128 0x2
 532 0026 01       		.byte	0x1
 533 0027 06       		.byte	0x6
 534 0028 17030000 		.4byte	.LASF0
 535 002c 02       		.uleb128 0x2
 536 002d 01       		.byte	0x1
 537 002e 08       		.byte	0x8
 538 002f DB000000 		.4byte	.LASF1
 539 0033 02       		.uleb128 0x2
 540 0034 02       		.byte	0x2
 541 0035 05       		.byte	0x5
 542 0036 B3020000 		.4byte	.LASF2
 543 003a 02       		.uleb128 0x2
 544 003b 02       		.byte	0x2
 545 003c 07       		.byte	0x7
 546 003d 1E000000 		.4byte	.LASF3
 547 0041 03       		.uleb128 0x3
 548 0042 14000000 		.4byte	.LASF9
 549 0046 02       		.byte	0x2
ARM GAS  C:\Users\smas270\AppData\Local\Temp\ccbR89UE.s 			page 14


 550 0047 3F       		.byte	0x3f
 551 0048 4C000000 		.4byte	0x4c
 552 004c 02       		.uleb128 0x2
 553 004d 04       		.byte	0x4
 554 004e 05       		.byte	0x5
 555 004f D7020000 		.4byte	.LASF4
 556 0053 02       		.uleb128 0x2
 557 0054 04       		.byte	0x4
 558 0055 07       		.byte	0x7
 559 0056 77010000 		.4byte	.LASF5
 560 005a 02       		.uleb128 0x2
 561 005b 08       		.byte	0x8
 562 005c 05       		.byte	0x5
 563 005d 68020000 		.4byte	.LASF6
 564 0061 02       		.uleb128 0x2
 565 0062 08       		.byte	0x8
 566 0063 07       		.byte	0x7
 567 0064 0F020000 		.4byte	.LASF7
 568 0068 04       		.uleb128 0x4
 569 0069 04       		.byte	0x4
 570 006a 05       		.byte	0x5
 571 006b 696E7400 		.ascii	"int\000"
 572 006f 02       		.uleb128 0x2
 573 0070 04       		.byte	0x4
 574 0071 07       		.byte	0x7
 575 0072 DC010000 		.4byte	.LASF8
 576 0076 03       		.uleb128 0x3
 577 0077 AB000000 		.4byte	.LASF10
 578 007b 03       		.byte	0x3
 579 007c 2C       		.byte	0x2c
 580 007d 41000000 		.4byte	0x41
 581 0081 05       		.uleb128 0x5
 582 0082 C7020000 		.4byte	.LASF11
 583 0086 04       		.byte	0x4
 584 0087 E401     		.2byte	0x1e4
 585 0089 2C000000 		.4byte	0x2c
 586 008d 05       		.uleb128 0x5
 587 008e BC010000 		.4byte	.LASF12
 588 0092 04       		.byte	0x4
 589 0093 E501     		.2byte	0x1e5
 590 0095 3A000000 		.4byte	0x3a
 591 0099 05       		.uleb128 0x5
 592 009a D5010000 		.4byte	.LASF13
 593 009e 04       		.byte	0x4
 594 009f E601     		.2byte	0x1e6
 595 00a1 53000000 		.4byte	0x53
 596 00a5 02       		.uleb128 0x2
 597 00a6 04       		.byte	0x4
 598 00a7 04       		.byte	0x4
 599 00a8 C7000000 		.4byte	.LASF14
 600 00ac 02       		.uleb128 0x2
 601 00ad 08       		.byte	0x8
 602 00ae 04       		.byte	0x4
 603 00af A6010000 		.4byte	.LASF15
 604 00b3 02       		.uleb128 0x2
 605 00b4 01       		.byte	0x1
 606 00b5 08       		.byte	0x8
ARM GAS  C:\Users\smas270\AppData\Local\Temp\ccbR89UE.s 			page 15


 607 00b6 7D020000 		.4byte	.LASF16
 608 00ba 06       		.uleb128 0x6
 609 00bb 81000000 		.4byte	0x81
 610 00bf 06       		.uleb128 0x6
 611 00c0 8D000000 		.4byte	0x8d
 612 00c4 02       		.uleb128 0x2
 613 00c5 08       		.byte	0x8
 614 00c6 04       		.byte	0x4
 615 00c7 53020000 		.4byte	.LASF17
 616 00cb 02       		.uleb128 0x2
 617 00cc 04       		.byte	0x4
 618 00cd 07       		.byte	0x7
 619 00ce 5F020000 		.4byte	.LASF18
 620 00d2 07       		.uleb128 0x7
 621 00d3 CD020000 		.4byte	.LASF19
 622 00d7 01       		.byte	0x1
 623 00d8 29       		.byte	0x29
 624 00d9 00000000 		.4byte	.LFB63
 625 00dd 24000000 		.4byte	.LFE63-.LFB63
 626 00e1 01       		.uleb128 0x1
 627 00e2 9C       		.byte	0x9c
 628 00e3 07       		.uleb128 0x7
 629 00e4 26020000 		.4byte	.LASF20
 630 00e8 01       		.byte	0x1
 631 00e9 32       		.byte	0x32
 632 00ea 00000000 		.4byte	.LFB64
 633 00ee 0C000000 		.4byte	.LFE64-.LFB64
 634 00f2 01       		.uleb128 0x1
 635 00f3 9C       		.byte	0x9c
 636 00f4 08       		.uleb128 0x8
 637 00f5 B7010000 		.4byte	.LASF47
 638 00f9 01       		.byte	0x1
 639 00fa 36       		.byte	0x36
 640 00fb 68000000 		.4byte	0x68
 641 00ff 00000000 		.4byte	.LFB65
 642 0103 F4010000 		.4byte	.LFE65-.LFB65
 643 0107 01       		.uleb128 0x1
 644 0108 9C       		.byte	0x9c
 645 0109 FF010000 		.4byte	0x1ff
 646 010d 09       		.uleb128 0x9
 647 010e 1C000000 		.4byte	.LBB2
 648 0112 10000000 		.4byte	.LBE2-.LBB2
 649 0116 28010000 		.4byte	0x128
 650 011a 0A       		.uleb128 0xa
 651 011b 6900     		.ascii	"i\000"
 652 011d 01       		.byte	0x1
 653 011e 48       		.byte	0x48
 654 011f 68000000 		.4byte	0x68
 655 0123 00000000 		.4byte	.LLST0
 656 0127 00       		.byte	0
 657 0128 0B       		.uleb128 0xb
 658 0129 00000000 		.4byte	.Ldebug_ranges0+0
 659 012d 3F010000 		.4byte	0x13f
 660 0131 0A       		.uleb128 0xa
 661 0132 6900     		.ascii	"i\000"
 662 0134 01       		.byte	0x1
 663 0135 64       		.byte	0x64
ARM GAS  C:\Users\smas270\AppData\Local\Temp\ccbR89UE.s 			page 16


 664 0136 68000000 		.4byte	0x68
 665 013a 1F000000 		.4byte	.LLST1
 666 013e 00       		.byte	0
 667 013f 0C       		.uleb128 0xc
 668 0140 0A000000 		.4byte	.LVL0
 669 0144 D8020000 		.4byte	0x2d8
 670 0148 56010000 		.4byte	0x156
 671 014c 0D       		.uleb128 0xd
 672 014d 01       		.uleb128 0x1
 673 014e 50       		.byte	0x50
 674 014f 05       		.uleb128 0x5
 675 0150 03       		.byte	0x3
 676 0151 00000000 		.4byte	isr_eoc_1
 677 0155 00       		.byte	0
 678 0156 0C       		.uleb128 0xc
 679 0157 10000000 		.4byte	.LVL1
 680 015b E3020000 		.4byte	0x2e3
 681 015f 6D010000 		.4byte	0x16d
 682 0163 0D       		.uleb128 0xd
 683 0164 01       		.uleb128 0x1
 684 0165 50       		.byte	0x50
 685 0166 05       		.uleb128 0x5
 686 0167 03       		.byte	0x3
 687 0168 00000000 		.4byte	isr_timer_1
 688 016c 00       		.byte	0
 689 016d 0E       		.uleb128 0xe
 690 016e 14000000 		.4byte	.LVL2
 691 0172 EE020000 		.4byte	0x2ee
 692 0176 0E       		.uleb128 0xe
 693 0177 18000000 		.4byte	.LVL3
 694 017b F9020000 		.4byte	0x2f9
 695 017f 0E       		.uleb128 0xe
 696 0180 1C000000 		.4byte	.LVL4
 697 0184 04030000 		.4byte	0x304
 698 0188 0E       		.uleb128 0xe
 699 0189 30000000 		.4byte	.LVL7
 700 018d 0F030000 		.4byte	0x30f
 701 0191 0C       		.uleb128 0xc
 702 0192 36000000 		.4byte	.LVL8
 703 0196 1A030000 		.4byte	0x31a
 704 019a A4010000 		.4byte	0x1a4
 705 019e 0D       		.uleb128 0xd
 706 019f 01       		.uleb128 0x1
 707 01a0 50       		.byte	0x50
 708 01a1 01       		.uleb128 0x1
 709 01a2 30       		.byte	0x30
 710 01a3 00       		.byte	0
 711 01a4 0E       		.uleb128 0xe
 712 01a5 3E000000 		.4byte	.LVL9
 713 01a9 25030000 		.4byte	0x325
 714 01ad 0E       		.uleb128 0xe
 715 01ae 46000000 		.4byte	.LVL10
 716 01b2 30030000 		.4byte	0x330
 717 01b6 0E       		.uleb128 0xe
 718 01b7 9E000000 		.4byte	.LVL16
 719 01bb 3B030000 		.4byte	0x33b
 720 01bf 0E       		.uleb128 0xe
ARM GAS  C:\Users\smas270\AppData\Local\Temp\ccbR89UE.s 			page 17


 721 01c0 B4000000 		.4byte	.LVL19
 722 01c4 46030000 		.4byte	0x346
 723 01c8 0E       		.uleb128 0xe
 724 01c9 CA000000 		.4byte	.LVL22
 725 01cd 51030000 		.4byte	0x351
 726 01d1 0E       		.uleb128 0xe
 727 01d2 D8000000 		.4byte	.LVL24
 728 01d6 3B030000 		.4byte	0x33b
 729 01da 0E       		.uleb128 0xe
 730 01db E4000000 		.4byte	.LVL27
 731 01df 51030000 		.4byte	0x351
 732 01e3 0E       		.uleb128 0xe
 733 01e4 FE000000 		.4byte	.LVL28
 734 01e8 5C030000 		.4byte	0x35c
 735 01ec 0E       		.uleb128 0xe
 736 01ed 08010000 		.4byte	.LVL29
 737 01f1 3B030000 		.4byte	0x33b
 738 01f5 0E       		.uleb128 0xe
 739 01f6 0E010000 		.4byte	.LVL30
 740 01fa 46030000 		.4byte	0x346
 741 01fe 00       		.byte	0
 742 01ff 0F       		.uleb128 0xf
 743 0200 99010000 		.4byte	.LASF21
 744 0204 05       		.byte	0x5
 745 0205 1207     		.2byte	0x712
 746 0207 0B020000 		.4byte	0x20b
 747 020b 06       		.uleb128 0x6
 748 020c 76000000 		.4byte	0x76
 749 0210 10       		.uleb128 0x10
 750 0211 00000000 		.4byte	.LASF22
 751 0215 01       		.byte	0x1
 752 0216 1B       		.byte	0x1b
 753 0217 BA000000 		.4byte	0xba
 754 021b 05       		.uleb128 0x5
 755 021c 03       		.byte	0x3
 756 021d 00000000 		.4byte	channel
 757 0221 11       		.uleb128 0x11
 758 0222 6900     		.ascii	"i\000"
 759 0224 01       		.byte	0x1
 760 0225 1D       		.byte	0x1d
 761 0226 99000000 		.4byte	0x99
 762 022a 05       		.uleb128 0x5
 763 022b 03       		.byte	0x3
 764 022c 00000000 		.4byte	i
 765 0230 10       		.uleb128 0x10
 766 0231 AD010000 		.4byte	.LASF23
 767 0235 01       		.byte	0x1
 768 0236 1F       		.byte	0x1f
 769 0237 8D000000 		.4byte	0x8d
 770 023b 05       		.uleb128 0x5
 771 023c 03       		.byte	0x3
 772 023d 00000000 		.4byte	ADCResult
 773 0241 10       		.uleb128 0x10
 774 0242 23030000 		.4byte	.LASF24
 775 0246 01       		.byte	0x1
 776 0247 20       		.byte	0x20
 777 0248 8D000000 		.4byte	0x8d
ARM GAS  C:\Users\smas270\AppData\Local\Temp\ccbR89UE.s 			page 18


 778 024c 05       		.uleb128 0x5
 779 024d 03       		.byte	0x3
 780 024e 00000000 		.4byte	milliVoltReading
 781 0252 10       		.uleb128 0x10
 782 0253 08000000 		.4byte	.LASF25
 783 0257 01       		.byte	0x1
 784 0258 21       		.byte	0x21
 785 0259 81000000 		.4byte	0x81
 786 025d 05       		.uleb128 0x5
 787 025e 03       		.byte	0x3
 788 025f 00000000 		.4byte	state
 789 0263 10       		.uleb128 0x10
 790 0264 0E000000 		.4byte	.LASF26
 791 0268 01       		.byte	0x1
 792 0269 22       		.byte	0x22
 793 026a BA000000 		.4byte	0xba
 794 026e 05       		.uleb128 0x5
 795 026f 03       		.byte	0x3
 796 0270 00000000 		.4byte	reset
 797 0274 12       		.uleb128 0x12
 798 0275 8D000000 		.4byte	0x8d
 799 0279 84020000 		.4byte	0x284
 800 027d 13       		.uleb128 0x13
 801 027e CB000000 		.4byte	0xcb
 802 0282 04       		.byte	0x4
 803 0283 00       		.byte	0
 804 0284 10       		.uleb128 0x10
 805 0285 BD020000 		.4byte	.LASF27
 806 0289 01       		.byte	0x1
 807 028a 24       		.byte	0x24
 808 028b 74020000 		.4byte	0x274
 809 028f 05       		.uleb128 0x5
 810 0290 03       		.byte	0x3
 811 0291 00000000 		.4byte	maxValues
 812 0295 10       		.uleb128 0x10
 813 0296 04020000 		.4byte	.LASF28
 814 029a 01       		.byte	0x1
 815 029b 25       		.byte	0x25
 816 029c 74020000 		.4byte	0x274
 817 02a0 05       		.uleb128 0x5
 818 02a1 03       		.byte	0x3
 819 02a2 00000000 		.4byte	pastValues
 820 02a6 10       		.uleb128 0x10
 821 02a7 AD020000 		.4byte	.LASF29
 822 02ab 01       		.byte	0x1
 823 02ac 26       		.byte	0x26
 824 02ad BF000000 		.4byte	0xbf
 825 02b1 05       		.uleb128 0x5
 826 02b2 03       		.byte	0x3
 827 02b3 00000000 		.4byte	count
 828 02b7 12       		.uleb128 0x12
 829 02b8 81000000 		.4byte	0x81
 830 02bc C7020000 		.4byte	0x2c7
 831 02c0 13       		.uleb128 0x13
 832 02c1 CB000000 		.4byte	0xcb
 833 02c5 04       		.byte	0x4
 834 02c6 00       		.byte	0
ARM GAS  C:\Users\smas270\AppData\Local\Temp\ccbR89UE.s 			page 19


 835 02c7 10       		.uleb128 0x10
 836 02c8 46020000 		.4byte	.LASF30
 837 02cc 01       		.byte	0x1
 838 02cd 27       		.byte	0x27
 839 02ce B7020000 		.4byte	0x2b7
 840 02d2 05       		.uleb128 0x5
 841 02d3 03       		.byte	0x3
 842 02d4 00000000 		.4byte	sensor_state
 843 02d8 14       		.uleb128 0x14
 844 02d9 C3010000 		.4byte	.LASF31
 845 02dd C3010000 		.4byte	.LASF31
 846 02e1 06       		.byte	0x6
 847 02e2 18       		.byte	0x18
 848 02e3 14       		.uleb128 0x14
 849 02e4 32020000 		.4byte	.LASF32
 850 02e8 32020000 		.4byte	.LASF32
 851 02ec 07       		.byte	0x7
 852 02ed 18       		.byte	0x18
 853 02ee 14       		.uleb128 0x14
 854 02ef FE020000 		.4byte	.LASF33
 855 02f3 FE020000 		.4byte	.LASF33
 856 02f7 08       		.byte	0x8
 857 02f8 23       		.byte	0x23
 858 02f9 14       		.uleb128 0x14
 859 02fa B3000000 		.4byte	.LASF34
 860 02fe B3000000 		.4byte	.LASF34
 861 0302 09       		.byte	0x9
 862 0303 31       		.byte	0x31
 863 0304 14       		.uleb128 0x14
 864 0305 E9010000 		.4byte	.LASF35
 865 0309 E9010000 		.4byte	.LASF35
 866 030d 09       		.byte	0x9
 867 030e A1       		.byte	0xa1
 868 030f 14       		.uleb128 0x14
 869 0310 CD000000 		.4byte	.LASF36
 870 0314 CD000000 		.4byte	.LASF36
 871 0318 0A       		.byte	0xa
 872 0319 5A       		.byte	0x5a
 873 031a 14       		.uleb128 0x14
 874 031b E0020000 		.4byte	.LASF37
 875 031f E0020000 		.4byte	.LASF37
 876 0323 09       		.byte	0x9
 877 0324 34       		.byte	0x34
 878 0325 14       		.uleb128 0x14
 879 0326 34030000 		.4byte	.LASF38
 880 032a 34030000 		.4byte	.LASF38
 881 032e 09       		.byte	0x9
 882 032f 35       		.byte	0x35
 883 0330 14       		.uleb128 0x14
 884 0331 8F020000 		.4byte	.LASF39
 885 0335 8F020000 		.4byte	.LASF39
 886 0339 09       		.byte	0x9
 887 033a 3A       		.byte	0x3a
 888 033b 14       		.uleb128 0x14
 889 033c A1000000 		.4byte	.LASF40
 890 0340 A1000000 		.4byte	.LASF40
 891 0344 0B       		.byte	0xb
ARM GAS  C:\Users\smas270\AppData\Local\Temp\ccbR89UE.s 			page 20


 892 0345 11       		.byte	0x11
 893 0346 14       		.uleb128 0x14
 894 0347 82020000 		.4byte	.LASF41
 895 034b 82020000 		.4byte	.LASF41
 896 034f 0B       		.byte	0xb
 897 0350 10       		.byte	0x10
 898 0351 14       		.uleb128 0x14
 899 0352 89010000 		.4byte	.LASF42
 900 0356 89010000 		.4byte	.LASF42
 901 035a 0B       		.byte	0xb
 902 035b 12       		.byte	0x12
 903 035c 14       		.uleb128 0x14
 904 035d 94010000 		.4byte	.LASF43
 905 0361 94010000 		.4byte	.LASF43
 906 0365 0B       		.byte	0xb
 907 0366 13       		.byte	0x13
 908 0367 00       		.byte	0
 909              		.section	.debug_abbrev,"",%progbits
 910              	.Ldebug_abbrev0:
 911 0000 01       		.uleb128 0x1
 912 0001 11       		.uleb128 0x11
 913 0002 01       		.byte	0x1
 914 0003 25       		.uleb128 0x25
 915 0004 0E       		.uleb128 0xe
 916 0005 13       		.uleb128 0x13
 917 0006 0B       		.uleb128 0xb
 918 0007 03       		.uleb128 0x3
 919 0008 0E       		.uleb128 0xe
 920 0009 1B       		.uleb128 0x1b
 921 000a 0E       		.uleb128 0xe
 922 000b 55       		.uleb128 0x55
 923 000c 17       		.uleb128 0x17
 924 000d 11       		.uleb128 0x11
 925 000e 01       		.uleb128 0x1
 926 000f 10       		.uleb128 0x10
 927 0010 17       		.uleb128 0x17
 928 0011 00       		.byte	0
 929 0012 00       		.byte	0
 930 0013 02       		.uleb128 0x2
 931 0014 24       		.uleb128 0x24
 932 0015 00       		.byte	0
 933 0016 0B       		.uleb128 0xb
 934 0017 0B       		.uleb128 0xb
 935 0018 3E       		.uleb128 0x3e
 936 0019 0B       		.uleb128 0xb
 937 001a 03       		.uleb128 0x3
 938 001b 0E       		.uleb128 0xe
 939 001c 00       		.byte	0
 940 001d 00       		.byte	0
 941 001e 03       		.uleb128 0x3
 942 001f 16       		.uleb128 0x16
 943 0020 00       		.byte	0
 944 0021 03       		.uleb128 0x3
 945 0022 0E       		.uleb128 0xe
 946 0023 3A       		.uleb128 0x3a
 947 0024 0B       		.uleb128 0xb
 948 0025 3B       		.uleb128 0x3b
ARM GAS  C:\Users\smas270\AppData\Local\Temp\ccbR89UE.s 			page 21


 949 0026 0B       		.uleb128 0xb
 950 0027 49       		.uleb128 0x49
 951 0028 13       		.uleb128 0x13
 952 0029 00       		.byte	0
 953 002a 00       		.byte	0
 954 002b 04       		.uleb128 0x4
 955 002c 24       		.uleb128 0x24
 956 002d 00       		.byte	0
 957 002e 0B       		.uleb128 0xb
 958 002f 0B       		.uleb128 0xb
 959 0030 3E       		.uleb128 0x3e
 960 0031 0B       		.uleb128 0xb
 961 0032 03       		.uleb128 0x3
 962 0033 08       		.uleb128 0x8
 963 0034 00       		.byte	0
 964 0035 00       		.byte	0
 965 0036 05       		.uleb128 0x5
 966 0037 16       		.uleb128 0x16
 967 0038 00       		.byte	0
 968 0039 03       		.uleb128 0x3
 969 003a 0E       		.uleb128 0xe
 970 003b 3A       		.uleb128 0x3a
 971 003c 0B       		.uleb128 0xb
 972 003d 3B       		.uleb128 0x3b
 973 003e 05       		.uleb128 0x5
 974 003f 49       		.uleb128 0x49
 975 0040 13       		.uleb128 0x13
 976 0041 00       		.byte	0
 977 0042 00       		.byte	0
 978 0043 06       		.uleb128 0x6
 979 0044 35       		.uleb128 0x35
 980 0045 00       		.byte	0
 981 0046 49       		.uleb128 0x49
 982 0047 13       		.uleb128 0x13
 983 0048 00       		.byte	0
 984 0049 00       		.byte	0
 985 004a 07       		.uleb128 0x7
 986 004b 2E       		.uleb128 0x2e
 987 004c 00       		.byte	0
 988 004d 3F       		.uleb128 0x3f
 989 004e 19       		.uleb128 0x19
 990 004f 03       		.uleb128 0x3
 991 0050 0E       		.uleb128 0xe
 992 0051 3A       		.uleb128 0x3a
 993 0052 0B       		.uleb128 0xb
 994 0053 3B       		.uleb128 0x3b
 995 0054 0B       		.uleb128 0xb
 996 0055 27       		.uleb128 0x27
 997 0056 19       		.uleb128 0x19
 998 0057 11       		.uleb128 0x11
 999 0058 01       		.uleb128 0x1
 1000 0059 12       		.uleb128 0x12
 1001 005a 06       		.uleb128 0x6
 1002 005b 40       		.uleb128 0x40
 1003 005c 18       		.uleb128 0x18
 1004 005d 9742     		.uleb128 0x2117
 1005 005f 19       		.uleb128 0x19
ARM GAS  C:\Users\smas270\AppData\Local\Temp\ccbR89UE.s 			page 22


 1006 0060 00       		.byte	0
 1007 0061 00       		.byte	0
 1008 0062 08       		.uleb128 0x8
 1009 0063 2E       		.uleb128 0x2e
 1010 0064 01       		.byte	0x1
 1011 0065 3F       		.uleb128 0x3f
 1012 0066 19       		.uleb128 0x19
 1013 0067 03       		.uleb128 0x3
 1014 0068 0E       		.uleb128 0xe
 1015 0069 3A       		.uleb128 0x3a
 1016 006a 0B       		.uleb128 0xb
 1017 006b 3B       		.uleb128 0x3b
 1018 006c 0B       		.uleb128 0xb
 1019 006d 27       		.uleb128 0x27
 1020 006e 19       		.uleb128 0x19
 1021 006f 49       		.uleb128 0x49
 1022 0070 13       		.uleb128 0x13
 1023 0071 8701     		.uleb128 0x87
 1024 0073 19       		.uleb128 0x19
 1025 0074 11       		.uleb128 0x11
 1026 0075 01       		.uleb128 0x1
 1027 0076 12       		.uleb128 0x12
 1028 0077 06       		.uleb128 0x6
 1029 0078 40       		.uleb128 0x40
 1030 0079 18       		.uleb128 0x18
 1031 007a 9742     		.uleb128 0x2117
 1032 007c 19       		.uleb128 0x19
 1033 007d 01       		.uleb128 0x1
 1034 007e 13       		.uleb128 0x13
 1035 007f 00       		.byte	0
 1036 0080 00       		.byte	0
 1037 0081 09       		.uleb128 0x9
 1038 0082 0B       		.uleb128 0xb
 1039 0083 01       		.byte	0x1
 1040 0084 11       		.uleb128 0x11
 1041 0085 01       		.uleb128 0x1
 1042 0086 12       		.uleb128 0x12
 1043 0087 06       		.uleb128 0x6
 1044 0088 01       		.uleb128 0x1
 1045 0089 13       		.uleb128 0x13
 1046 008a 00       		.byte	0
 1047 008b 00       		.byte	0
 1048 008c 0A       		.uleb128 0xa
 1049 008d 34       		.uleb128 0x34
 1050 008e 00       		.byte	0
 1051 008f 03       		.uleb128 0x3
 1052 0090 08       		.uleb128 0x8
 1053 0091 3A       		.uleb128 0x3a
 1054 0092 0B       		.uleb128 0xb
 1055 0093 3B       		.uleb128 0x3b
 1056 0094 0B       		.uleb128 0xb
 1057 0095 49       		.uleb128 0x49
 1058 0096 13       		.uleb128 0x13
 1059 0097 02       		.uleb128 0x2
 1060 0098 17       		.uleb128 0x17
 1061 0099 00       		.byte	0
 1062 009a 00       		.byte	0
ARM GAS  C:\Users\smas270\AppData\Local\Temp\ccbR89UE.s 			page 23


 1063 009b 0B       		.uleb128 0xb
 1064 009c 0B       		.uleb128 0xb
 1065 009d 01       		.byte	0x1
 1066 009e 55       		.uleb128 0x55
 1067 009f 17       		.uleb128 0x17
 1068 00a0 01       		.uleb128 0x1
 1069 00a1 13       		.uleb128 0x13
 1070 00a2 00       		.byte	0
 1071 00a3 00       		.byte	0
 1072 00a4 0C       		.uleb128 0xc
 1073 00a5 898201   		.uleb128 0x4109
 1074 00a8 01       		.byte	0x1
 1075 00a9 11       		.uleb128 0x11
 1076 00aa 01       		.uleb128 0x1
 1077 00ab 31       		.uleb128 0x31
 1078 00ac 13       		.uleb128 0x13
 1079 00ad 01       		.uleb128 0x1
 1080 00ae 13       		.uleb128 0x13
 1081 00af 00       		.byte	0
 1082 00b0 00       		.byte	0
 1083 00b1 0D       		.uleb128 0xd
 1084 00b2 8A8201   		.uleb128 0x410a
 1085 00b5 00       		.byte	0
 1086 00b6 02       		.uleb128 0x2
 1087 00b7 18       		.uleb128 0x18
 1088 00b8 9142     		.uleb128 0x2111
 1089 00ba 18       		.uleb128 0x18
 1090 00bb 00       		.byte	0
 1091 00bc 00       		.byte	0
 1092 00bd 0E       		.uleb128 0xe
 1093 00be 898201   		.uleb128 0x4109
 1094 00c1 00       		.byte	0
 1095 00c2 11       		.uleb128 0x11
 1096 00c3 01       		.uleb128 0x1
 1097 00c4 31       		.uleb128 0x31
 1098 00c5 13       		.uleb128 0x13
 1099 00c6 00       		.byte	0
 1100 00c7 00       		.byte	0
 1101 00c8 0F       		.uleb128 0xf
 1102 00c9 34       		.uleb128 0x34
 1103 00ca 00       		.byte	0
 1104 00cb 03       		.uleb128 0x3
 1105 00cc 0E       		.uleb128 0xe
 1106 00cd 3A       		.uleb128 0x3a
 1107 00ce 0B       		.uleb128 0xb
 1108 00cf 3B       		.uleb128 0x3b
 1109 00d0 05       		.uleb128 0x5
 1110 00d1 49       		.uleb128 0x49
 1111 00d2 13       		.uleb128 0x13
 1112 00d3 3F       		.uleb128 0x3f
 1113 00d4 19       		.uleb128 0x19
 1114 00d5 3C       		.uleb128 0x3c
 1115 00d6 19       		.uleb128 0x19
 1116 00d7 00       		.byte	0
 1117 00d8 00       		.byte	0
 1118 00d9 10       		.uleb128 0x10
 1119 00da 34       		.uleb128 0x34
ARM GAS  C:\Users\smas270\AppData\Local\Temp\ccbR89UE.s 			page 24


 1120 00db 00       		.byte	0
 1121 00dc 03       		.uleb128 0x3
 1122 00dd 0E       		.uleb128 0xe
 1123 00de 3A       		.uleb128 0x3a
 1124 00df 0B       		.uleb128 0xb
 1125 00e0 3B       		.uleb128 0x3b
 1126 00e1 0B       		.uleb128 0xb
 1127 00e2 49       		.uleb128 0x49
 1128 00e3 13       		.uleb128 0x13
 1129 00e4 3F       		.uleb128 0x3f
 1130 00e5 19       		.uleb128 0x19
 1131 00e6 02       		.uleb128 0x2
 1132 00e7 18       		.uleb128 0x18
 1133 00e8 00       		.byte	0
 1134 00e9 00       		.byte	0
 1135 00ea 11       		.uleb128 0x11
 1136 00eb 34       		.uleb128 0x34
 1137 00ec 00       		.byte	0
 1138 00ed 03       		.uleb128 0x3
 1139 00ee 08       		.uleb128 0x8
 1140 00ef 3A       		.uleb128 0x3a
 1141 00f0 0B       		.uleb128 0xb
 1142 00f1 3B       		.uleb128 0x3b
 1143 00f2 0B       		.uleb128 0xb
 1144 00f3 49       		.uleb128 0x49
 1145 00f4 13       		.uleb128 0x13
 1146 00f5 3F       		.uleb128 0x3f
 1147 00f6 19       		.uleb128 0x19
 1148 00f7 02       		.uleb128 0x2
 1149 00f8 18       		.uleb128 0x18
 1150 00f9 00       		.byte	0
 1151 00fa 00       		.byte	0
 1152 00fb 12       		.uleb128 0x12
 1153 00fc 01       		.uleb128 0x1
 1154 00fd 01       		.byte	0x1
 1155 00fe 49       		.uleb128 0x49
 1156 00ff 13       		.uleb128 0x13
 1157 0100 01       		.uleb128 0x1
 1158 0101 13       		.uleb128 0x13
 1159 0102 00       		.byte	0
 1160 0103 00       		.byte	0
 1161 0104 13       		.uleb128 0x13
 1162 0105 21       		.uleb128 0x21
 1163 0106 00       		.byte	0
 1164 0107 49       		.uleb128 0x49
 1165 0108 13       		.uleb128 0x13
 1166 0109 2F       		.uleb128 0x2f
 1167 010a 0B       		.uleb128 0xb
 1168 010b 00       		.byte	0
 1169 010c 00       		.byte	0
 1170 010d 14       		.uleb128 0x14
 1171 010e 2E       		.uleb128 0x2e
 1172 010f 00       		.byte	0
 1173 0110 3F       		.uleb128 0x3f
 1174 0111 19       		.uleb128 0x19
 1175 0112 3C       		.uleb128 0x3c
 1176 0113 19       		.uleb128 0x19
ARM GAS  C:\Users\smas270\AppData\Local\Temp\ccbR89UE.s 			page 25


 1177 0114 6E       		.uleb128 0x6e
 1178 0115 0E       		.uleb128 0xe
 1179 0116 03       		.uleb128 0x3
 1180 0117 0E       		.uleb128 0xe
 1181 0118 3A       		.uleb128 0x3a
 1182 0119 0B       		.uleb128 0xb
 1183 011a 3B       		.uleb128 0x3b
 1184 011b 0B       		.uleb128 0xb
 1185 011c 00       		.byte	0
 1186 011d 00       		.byte	0
 1187 011e 00       		.byte	0
 1188              		.section	.debug_loc,"",%progbits
 1189              	.Ldebug_loc0:
 1190              	.LLST0:
 1191 0000 1C000000 		.4byte	.LVL4
 1192 0004 20000000 		.4byte	.LVL5
 1193 0008 0200     		.2byte	0x2
 1194 000a 30       		.byte	0x30
 1195 000b 9F       		.byte	0x9f
 1196 000c 20000000 		.4byte	.LVL5
 1197 0010 2F000000 		.4byte	.LVL7-1
 1198 0014 0100     		.2byte	0x1
 1199 0016 53       		.byte	0x53
 1200 0017 00000000 		.4byte	0
 1201 001b 00000000 		.4byte	0
 1202              	.LLST1:
 1203 001f 6E000000 		.4byte	.LVL11
 1204 0023 80000000 		.4byte	.LVL13
 1205 0027 0100     		.2byte	0x1
 1206 0029 52       		.byte	0x52
 1207 002a 82000000 		.4byte	.LVL14
 1208 002e 96000000 		.4byte	.LVL15
 1209 0032 0100     		.2byte	0x1
 1210 0034 52       		.byte	0x52
 1211 0035 A0000000 		.4byte	.LVL17
 1212 0039 AC000000 		.4byte	.LVL18
 1213 003d 0100     		.2byte	0x1
 1214 003f 52       		.byte	0x52
 1215 0040 B6000000 		.4byte	.LVL20
 1216 0044 C2000000 		.4byte	.LVL21
 1217 0048 0100     		.2byte	0x1
 1218 004a 52       		.byte	0x52
 1219 004b CC000000 		.4byte	.LVL23
 1220 004f D7000000 		.4byte	.LVL24-1
 1221 0053 0100     		.2byte	0x1
 1222 0055 52       		.byte	0x52
 1223 0056 DA000000 		.4byte	.LVL25
 1224 005a DC000000 		.4byte	.LVL26
 1225 005e 0100     		.2byte	0x1
 1226 0060 52       		.byte	0x52
 1227 0061 00000000 		.4byte	0
 1228 0065 00000000 		.4byte	0
 1229              		.section	.debug_aranges,"",%progbits
 1230 0000 2C000000 		.4byte	0x2c
 1231 0004 0200     		.2byte	0x2
 1232 0006 00000000 		.4byte	.Ldebug_info0
 1233 000a 04       		.byte	0x4
ARM GAS  C:\Users\smas270\AppData\Local\Temp\ccbR89UE.s 			page 26


 1234 000b 00       		.byte	0
 1235 000c 0000     		.2byte	0
 1236 000e 0000     		.2byte	0
 1237 0010 00000000 		.4byte	.LFB63
 1238 0014 24000000 		.4byte	.LFE63-.LFB63
 1239 0018 00000000 		.4byte	.LFB64
 1240 001c 0C000000 		.4byte	.LFE64-.LFB64
 1241 0020 00000000 		.4byte	.LFB65
 1242 0024 F4010000 		.4byte	.LFE65-.LFB65
 1243 0028 00000000 		.4byte	0
 1244 002c 00000000 		.4byte	0
 1245              		.section	.debug_ranges,"",%progbits
 1246              	.Ldebug_ranges0:
 1247 0000 6E000000 		.4byte	.LBB3
 1248 0004 80000000 		.4byte	.LBE3
 1249 0008 82000000 		.4byte	.LBB4
 1250 000c 86000000 		.4byte	.LBE4
 1251 0010 00000000 		.4byte	0
 1252 0014 00000000 		.4byte	0
 1253 0018 00000000 		.4byte	.LFB63
 1254 001c 24000000 		.4byte	.LFE63
 1255 0020 00000000 		.4byte	.LFB64
 1256 0024 0C000000 		.4byte	.LFE64
 1257 0028 00000000 		.4byte	.LFB65
 1258 002c F4010000 		.4byte	.LFE65
 1259 0030 00000000 		.4byte	0
 1260 0034 00000000 		.4byte	0
 1261              		.section	.debug_line,"",%progbits
 1262              	.Ldebug_line0:
 1263 0000 5C020000 		.section	.debug_str,"MS",%progbits,1
 1263      0200AF01 
 1263      00000201 
 1263      FB0E0D00 
 1263      01010101 
 1264              	.LASF22:
 1265 0000 6368616E 		.ascii	"channel\000"
 1265      6E656C00 
 1266              	.LASF25:
 1267 0008 73746174 		.ascii	"state\000"
 1267      6500
 1268              	.LASF26:
 1269 000e 72657365 		.ascii	"reset\000"
 1269      7400
 1270              	.LASF9:
 1271 0014 5F5F696E 		.ascii	"__int32_t\000"
 1271      7433325F 
 1271      7400
 1272              	.LASF3:
 1273 001e 73686F72 		.ascii	"short unsigned int\000"
 1273      7420756E 
 1273      7369676E 
 1273      65642069 
 1273      6E7400
 1274              	.LASF46:
 1275 0031 5C5C6669 		.ascii	"\\\\files.auckland.ac.nz\\myhome\\Downloads\\ENGGEN"
 1275      6C65732E 
 1275      6175636B 
ARM GAS  C:\Users\smas270\AppData\Local\Temp\ccbR89UE.s 			page 27


 1275      6C616E64 
 1275      2E61632E 
 1276 005f 20323039 		.ascii	" 209 Github\\project-project-group-7\\301 Project\\"
 1276      20476974 
 1276      6875625C 
 1276      70726F6A 
 1276      6563742D 
 1277 008f 53656E73 		.ascii	"Sensor Test.cydsn\000"
 1277      6F722054 
 1277      6573742E 
 1277      63796473 
 1277      6E00
 1278              	.LASF40:
 1279 00a1 7475726E 		.ascii	"turn_left\000"
 1279      5F6C6566 
 1279      7400
 1280              	.LASF10:
 1281 00ab 696E7433 		.ascii	"int32_t\000"
 1281      325F7400 
 1282              	.LASF34:
 1283 00b3 4144435F 		.ascii	"ADC_SAR_Seq_1_Start\000"
 1283      5341525F 
 1283      5365715F 
 1283      315F5374 
 1283      61727400 
 1284              	.LASF14:
 1285 00c7 666C6F61 		.ascii	"float\000"
 1285      7400
 1286              	.LASF36:
 1287 00cd 54696D65 		.ascii	"Timer_1_Start\000"
 1287      725F315F 
 1287      53746172 
 1287      7400
 1288              	.LASF1:
 1289 00db 756E7369 		.ascii	"unsigned char\000"
 1289      676E6564 
 1289      20636861 
 1289      7200
 1290              	.LASF44:
 1291 00e9 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1291      43313120 
 1291      352E342E 
 1291      31203230 
 1291      31363036 
 1292 011c 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1292      20726576 
 1292      6973696F 
 1292      6E203233 
 1292      37373135 
 1293 014f 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1293      66756E63 
 1293      74696F6E 
 1293      2D736563 
 1293      74696F6E 
 1294              	.LASF5:
 1295 0177 6C6F6E67 		.ascii	"long unsigned int\000"
 1295      20756E73 
ARM GAS  C:\Users\smas270\AppData\Local\Temp\ccbR89UE.s 			page 28


 1295      69676E65 
 1295      6420696E 
 1295      7400
 1296              	.LASF42:
 1297 0189 7475726E 		.ascii	"turn_right\000"
 1297      5F726967 
 1297      687400
 1298              	.LASF43:
 1299 0194 73746F70 		.ascii	"stop\000"
 1299      00
 1300              	.LASF21:
 1301 0199 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1301      52784275 
 1301      66666572 
 1301      00
 1302              	.LASF15:
 1303 01a6 646F7562 		.ascii	"double\000"
 1303      6C6500
 1304              	.LASF23:
 1305 01ad 41444352 		.ascii	"ADCResult\000"
 1305      6573756C 
 1305      7400
 1306              	.LASF47:
 1307 01b7 6D61696E 		.ascii	"main\000"
 1307      00
 1308              	.LASF12:
 1309 01bc 75696E74 		.ascii	"uint16\000"
 1309      313600
 1310              	.LASF31:
 1311 01c3 6973725F 		.ascii	"isr_eoc_1_StartEx\000"
 1311      656F635F 
 1311      315F5374 
 1311      61727445 
 1311      7800
 1312              	.LASF13:
 1313 01d5 75696E74 		.ascii	"uint32\000"
 1313      333200
 1314              	.LASF8:
 1315 01dc 756E7369 		.ascii	"unsigned int\000"
 1315      676E6564 
 1315      20696E74 
 1315      00
 1316              	.LASF35:
 1317 01e9 4144435F 		.ascii	"ADC_SAR_Seq_1_StartConvert\000"
 1317      5341525F 
 1317      5365715F 
 1317      315F5374 
 1317      61727443 
 1318              	.LASF28:
 1319 0204 70617374 		.ascii	"pastValues\000"
 1319      56616C75 
 1319      657300
 1320              	.LASF7:
 1321 020f 6C6F6E67 		.ascii	"long long unsigned int\000"
 1321      206C6F6E 
 1321      6720756E 
 1321      7369676E 
ARM GAS  C:\Users\smas270\AppData\Local\Temp\ccbR89UE.s 			page 29


 1321      65642069 
 1322              	.LASF20:
 1323 0226 6973725F 		.ascii	"isr_timer_1\000"
 1323      74696D65 
 1323      725F3100 
 1324              	.LASF32:
 1325 0232 6973725F 		.ascii	"isr_timer_1_StartEx\000"
 1325      74696D65 
 1325      725F315F 
 1325      53746172 
 1325      74457800 
 1326              	.LASF30:
 1327 0246 73656E73 		.ascii	"sensor_state\000"
 1327      6F725F73 
 1327      74617465 
 1327      00
 1328              	.LASF17:
 1329 0253 6C6F6E67 		.ascii	"long double\000"
 1329      20646F75 
 1329      626C6500 
 1330              	.LASF18:
 1331 025f 73697A65 		.ascii	"sizetype\000"
 1331      74797065 
 1331      00
 1332              	.LASF6:
 1333 0268 6C6F6E67 		.ascii	"long long int\000"
 1333      206C6F6E 
 1333      6720696E 
 1333      7400
 1334              	.LASF45:
 1335 0276 6D61696E 		.ascii	"main.c\000"
 1335      2E6300
 1336              	.LASF16:
 1337 027d 63686172 		.ascii	"char\000"
 1337      00
 1338              	.LASF41:
 1339 0282 6D6F7665 		.ascii	"move_forward\000"
 1339      5F666F72 
 1339      77617264 
 1339      00
 1340              	.LASF39:
 1341 028f 4144435F 		.ascii	"ADC_SAR_Seq_1_CountsTo_mVolts\000"
 1341      5341525F 
 1341      5365715F 
 1341      315F436F 
 1341      756E7473 
 1342              	.LASF29:
 1343 02ad 636F756E 		.ascii	"count\000"
 1343      7400
 1344              	.LASF2:
 1345 02b3 73686F72 		.ascii	"short int\000"
 1345      7420696E 
 1345      7400
 1346              	.LASF27:
 1347 02bd 6D617856 		.ascii	"maxValues\000"
 1347      616C7565 
 1347      7300
ARM GAS  C:\Users\smas270\AppData\Local\Temp\ccbR89UE.s 			page 30


 1348              	.LASF11:
 1349 02c7 75696E74 		.ascii	"uint8\000"
 1349      3800
 1350              	.LASF19:
 1351 02cd 6973725F 		.ascii	"isr_eoc_1\000"
 1351      656F635F 
 1351      3100
 1352              	.LASF4:
 1353 02d7 6C6F6E67 		.ascii	"long int\000"
 1353      20696E74 
 1353      00
 1354              	.LASF37:
 1355 02e0 4144435F 		.ascii	"ADC_SAR_Seq_1_IsEndConversion\000"
 1355      5341525F 
 1355      5365715F 
 1355      315F4973 
 1355      456E6443 
 1356              	.LASF33:
 1357 02fe 4144435F 		.ascii	"ADC_SAR_Seq_1_IRQ_Enable\000"
 1357      5341525F 
 1357      5365715F 
 1357      315F4952 
 1357      515F456E 
 1358              	.LASF0:
 1359 0317 7369676E 		.ascii	"signed char\000"
 1359      65642063 
 1359      68617200 
 1360              	.LASF24:
 1361 0323 6D696C6C 		.ascii	"milliVoltReading\000"
 1361      69566F6C 
 1361      74526561 
 1361      64696E67 
 1361      00
 1362              	.LASF38:
 1363 0334 4144435F 		.ascii	"ADC_SAR_Seq_1_GetResult16\000"
 1363      5341525F 
 1363      5365715F 
 1363      315F4765 
 1363      74526573 
 1364              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
