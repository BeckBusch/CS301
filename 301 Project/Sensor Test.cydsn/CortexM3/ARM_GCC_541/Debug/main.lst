ARM GAS  C:\Users\smas270\AppData\Local\Temp\cc9xSgfA.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.isr_eoc_1,"ax",%progbits
  20              		.align	2
  21              		.global	isr_eoc_1
  22              		.thumb
  23              		.thumb_func
  24              		.type	isr_eoc_1, %function
  25              	isr_eoc_1:
  26              	.LFB63:
  27              		.file 1 "main.c"
   1:main.c        **** #include "project.h"
   2:main.c        **** #include "motors.h"
   3:main.c        **** 
   4:main.c        **** #define ON 1
   5:main.c        **** #define OFF 0
   6:main.c        **** 
   7:main.c        **** // FL, FR, CL, CR, BC = front left, front right, center left, center right, back center respectivel
   8:main.c        **** #define FL 0
   9:main.c        **** #define FR 1
  10:main.c        **** #define CL 2
  11:main.c        **** #define CR 3
  12:main.c        **** #define BC 4
  13:main.c        **** 
  14:main.c        **** // State values.
  15:main.c        **** #define FORWARD 0
  16:main.c        **** #define TURNING_LEFT 1
  17:main.c        **** #define TURNING_RIGHT 2
  18:main.c        **** #define CORRECTION 3
  19:main.c        **** 
  20:main.c        **** // Prototype declarations.
  21:main.c        **** CY_ISR_PROTO(isr_eoc_1);
  22:main.c        **** CY_ISR_PROTO(isr_timer_1);
  23:main.c        **** 
  24:main.c        **** volatile uint8 channel = 0;
  25:main.c        **** 
  26:main.c        **** uint32 i = 0;
  27:main.c        **** 
  28:main.c        **** uint16 ADCResult;
  29:main.c        **** uint16 milliVoltReading;
  30:main.c        **** uint8 state = FORWARD;
ARM GAS  C:\Users\smas270\AppData\Local\Temp\cc9xSgfA.s 			page 2


  31:main.c        **** volatile uint8 reset = 0;
  32:main.c        **** 
  33:main.c        **** uint16 maxValues[5] = {0};
  34:main.c        **** uint16 pastValues[5] = {0};
  35:main.c        **** volatile uint16 count = 0;
  36:main.c        **** uint8 sensor_state[5];
  37:main.c        **** 
  38:main.c        **** CY_ISR(isr_eoc_1) {
  28              		.loc 1 38 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  39:main.c        ****     // Change the ADC channel each time an eoc interrupt is generated.
  40:main.c        ****     if (channel == 4) {
  33              		.loc 1 40 0
  34 0000 074B     		ldr	r3, .L4
  35 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  36 0004 DBB2     		uxtb	r3, r3
  37 0006 042B     		cmp	r3, #4
  38 0008 03D1     		bne	.L2
  41:main.c        ****         channel = 0;
  39              		.loc 1 41 0
  40 000a 0022     		movs	r2, #0
  41 000c 044B     		ldr	r3, .L4
  42 000e 1A70     		strb	r2, [r3]
  43 0010 7047     		bx	lr
  44              	.L2:
  42:main.c        ****     } else {
  43:main.c        ****         channel++;
  45              		.loc 1 43 0
  46 0012 034A     		ldr	r2, .L4
  47 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  48 0016 0133     		adds	r3, r3, #1
  49 0018 DBB2     		uxtb	r3, r3
  50 001a 1370     		strb	r3, [r2]
  51 001c 7047     		bx	lr
  52              	.L5:
  53 001e 00BF     		.align	2
  54              	.L4:
  55 0020 00000000 		.word	.LANCHOR0
  56              		.cfi_endproc
  57              	.LFE63:
  58              		.size	isr_eoc_1, .-isr_eoc_1
  59              		.section	.text.isr_timer_1,"ax",%progbits
  60              		.align	2
  61              		.global	isr_timer_1
  62              		.thumb
  63              		.thumb_func
  64              		.type	isr_timer_1, %function
  65              	isr_timer_1:
  66              	.LFB64:
  44:main.c        ****     }   
  45:main.c        **** }
  46:main.c        **** 
  47:main.c        **** CY_ISR(isr_timer_1) {
  67              		.loc 1 47 0
ARM GAS  C:\Users\smas270\AppData\Local\Temp\cc9xSgfA.s 			page 3


  68              		.cfi_startproc
  69              		@ args = 0, pretend = 0, frame = 0
  70              		@ frame_needed = 0, uses_anonymous_args = 0
  71              		@ link register save eliminated.
  48:main.c        ****     reset = 1;
  72              		.loc 1 48 0
  73 0000 0122     		movs	r2, #1
  74 0002 014B     		ldr	r3, .L7
  75 0004 5A70     		strb	r2, [r3, #1]
  76 0006 7047     		bx	lr
  77              	.L8:
  78              		.align	2
  79              	.L7:
  80 0008 00000000 		.word	.LANCHOR0
  81              		.cfi_endproc
  82              	.LFE64:
  83              		.size	isr_timer_1, .-isr_timer_1
  84              		.section	.text.main,"ax",%progbits
  85              		.align	2
  86              		.global	main
  87              		.thumb
  88              		.thumb_func
  89              		.type	main, %function
  90              	main:
  91              	.LFB65:
  49:main.c        **** }
  50:main.c        **** 
  51:main.c        **** int main(void){
  92              		.loc 1 51 0
  93              		.cfi_startproc
  94              		@ args = 0, pretend = 0, frame = 0
  95              		@ frame_needed = 0, uses_anonymous_args = 0
  96 0000 10B5     		push	{r4, lr}
  97              		.cfi_def_cfa_offset 8
  98              		.cfi_offset 4, -8
  99              		.cfi_offset 14, -4
  52:main.c        ****     
  53:main.c        ****     // Enable global interrupts as well as start and enable the isr.
  54:main.c        ****     CyGlobalIntEnable;
 100              		.loc 1 54 0
 101              		.syntax unified
 102              	@ 54 "main.c" 1
 103 0002 62B6     		CPSIE   i
 104              	@ 0 "" 2
  55:main.c        ****     isr_eoc_1_StartEx(isr_eoc_1);
 105              		.loc 1 55 0
 106              		.thumb
 107              		.syntax unified
 108 0004 9C48     		ldr	r0, .L65
 109 0006 FFF7FEFF 		bl	isr_eoc_1_StartEx
 110              	.LVL0:
  56:main.c        ****     isr_timer_1_StartEx(isr_timer_1);
 111              		.loc 1 56 0
 112 000a 9C48     		ldr	r0, .L65+4
 113 000c FFF7FEFF 		bl	isr_timer_1_StartEx
 114              	.LVL1:
  57:main.c        ****     ADC_SAR_Seq_1_IRQ_Enable();
ARM GAS  C:\Users\smas270\AppData\Local\Temp\cc9xSgfA.s 			page 4


 115              		.loc 1 57 0
 116 0010 FFF7FEFF 		bl	ADC_SAR_Seq_1_IRQ_Enable
 117              	.LVL2:
  58:main.c        ****     //isr_eoc_1_Enable();
  59:main.c        ****     //isr_eoc_2_StartEx(isr_eoc_2);
  60:main.c        ****     //isr_eoc_2_Enable();
  61:main.c        ****     //isr_timer_StartEx(isr_timer);
  62:main.c        ****     //isr_timer_Enable();
  63:main.c        ****     
  64:main.c        ****     // Start the ADC and begin conversions (in free running mode so will continue to convert).
  65:main.c        ****     ADC_SAR_Seq_1_Start();
 118              		.loc 1 65 0
 119 0014 FFF7FEFF 		bl	ADC_SAR_Seq_1_Start
 120              	.LVL3:
  66:main.c        ****     ADC_SAR_Seq_1_StartConvert();
 121              		.loc 1 66 0
 122 0018 FFF7FEFF 		bl	ADC_SAR_Seq_1_StartConvert
 123              	.LVL4:
 124              	.LBB2:
  67:main.c        ****     
  68:main.c        ****     // Initialise sensor states.
  69:main.c        ****     for (int i = 0; i < 5; i++) {
 125              		.loc 1 69 0
 126 001c 0023     		movs	r3, #0
 127 001e 03E0     		b	.L10
 128              	.LVL5:
 129              	.L11:
  70:main.c        ****         sensor_state[i] = ON;
 130              		.loc 1 70 0 discriminator 3
 131 0020 0121     		movs	r1, #1
 132 0022 974A     		ldr	r2, .L65+8
 133 0024 D154     		strb	r1, [r2, r3]
  69:main.c        ****         sensor_state[i] = ON;
 134              		.loc 1 69 0 discriminator 3
 135 0026 0B44     		add	r3, r3, r1
 136              	.LVL6:
 137              	.L10:
  69:main.c        ****         sensor_state[i] = ON;
 138              		.loc 1 69 0 is_stmt 0 discriminator 1
 139 0028 042B     		cmp	r3, #4
 140 002a F9DD     		ble	.L11
 141              	.LBE2:
  71:main.c        ****     }
  72:main.c        ****     
  73:main.c        ****     //PWM_1_WritePeriod(250);
  74:main.c        ****     //PWM_1_Start();
  75:main.c        ****     //PWM_1_WriteCompare(83);
  76:main.c        ****                  
  77:main.c        ****     //PWM_2_WritePeriod(250);
  78:main.c        ****     //PWM_2_Start();
  79:main.c        ****     //PWM_2_WriteCompare(90);
  80:main.c        ****     Timer_1_Start();
 142              		.loc 1 80 0 is_stmt 1
 143 002c FFF7FEFF 		bl	Timer_1_Start
 144              	.LVL7:
 145              	.L58:
  81:main.c        ****     //turn_left();
ARM GAS  C:\Users\smas270\AppData\Local\Temp\cc9xSgfA.s 			page 5


  82:main.c        ****     //stop();
  83:main.c        ****     //turn_right();
  84:main.c        ****         
  85:main.c        ****     while(1) {
  86:main.c        ****         
  87:main.c        **** // If the conversion result is ready, put it into a variable and convert it into millivolts.
  88:main.c        ****         ADC_SAR_Seq_1_IsEndConversion(ADC_SAR_Seq_1_WAIT_FOR_RESULT);
 146              		.loc 1 88 0
 147 0030 0020     		movs	r0, #0
 148 0032 FFF7FEFF 		bl	ADC_SAR_Seq_1_IsEndConversion
 149              	.LVL8:
  89:main.c        ****         ADCResult = ADC_SAR_Seq_1_GetResult16(channel);
 150              		.loc 1 89 0
 151 0036 934C     		ldr	r4, .L65+12
 152 0038 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 153 003a FFF7FEFF 		bl	ADC_SAR_Seq_1_GetResult16
 154              	.LVL9:
 155 003e 924B     		ldr	r3, .L65+16
 156 0040 1880     		strh	r0, [r3]	@ movhi
  90:main.c        ****         milliVoltReading = ADC_SAR_Seq_1_CountsTo_mVolts(ADCResult);
 157              		.loc 1 90 0
 158 0042 FFF7FEFF 		bl	ADC_SAR_Seq_1_CountsTo_mVolts
 159              	.LVL10:
 160 0046 80B2     		uxth	r0, r0
 161 0048 904B     		ldr	r3, .L65+20
 162 004a 1880     		strh	r0, [r3]	@ movhi
  91:main.c        ****         
  92:main.c        ****         if (milliVoltReading > maxValues[channel]) {
 163              		.loc 1 92 0
 164 004c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 165 004e 04EB4304 		add	r4, r4, r3, lsl #1
 166 0052 A388     		ldrh	r3, [r4, #4]
 167 0054 9842     		cmp	r0, r3
 168 0056 04D9     		bls	.L12
  93:main.c        ****             maxValues[channel] = milliVoltReading;
 169              		.loc 1 93 0
 170 0058 8A4B     		ldr	r3, .L65+12
 171 005a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 172 005c 03EB4203 		add	r3, r3, r2, lsl #1
 173 0060 9880     		strh	r0, [r3, #4]	@ movhi
 174              	.L12:
  94:main.c        ****         }
  95:main.c        ****         
  96:main.c        ****         if (reset == 1) {
 175              		.loc 1 96 0
 176 0062 884B     		ldr	r3, .L65+12
 177 0064 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 178 0066 DBB2     		uxtb	r3, r3
 179 0068 012B     		cmp	r3, #1
 180 006a 0DD1     		bne	.L14
 181 006c 09E0     		b	.L59
 182              	.LVL11:
 183              	.L15:
 184              	.LBB3:
  97:main.c        ****             for (int i = 0; i < 5; i++) {
  98:main.c        ****                 pastValues[i] = maxValues[i];
 185              		.loc 1 98 0 discriminator 3
ARM GAS  C:\Users\smas270\AppData\Local\Temp\cc9xSgfA.s 			page 6


 186 006e 8549     		ldr	r1, .L65+12
 187 0070 01EB4302 		add	r2, r1, r3, lsl #1
 188 0074 9088     		ldrh	r0, [r2, #4]
 189 0076 1082     		strh	r0, [r2, #16]	@ movhi
  99:main.c        ****                 maxValues[i] = 0;
 190              		.loc 1 99 0 discriminator 3
 191 0078 0020     		movs	r0, #0
 192 007a 9080     		strh	r0, [r2, #4]	@ movhi
 100:main.c        ****                 reset = 0;
 193              		.loc 1 100 0 discriminator 3
 194 007c 4870     		strb	r0, [r1, #1]
  97:main.c        ****             for (int i = 0; i < 5; i++) {
 195              		.loc 1 97 0 discriminator 3
 196 007e 0133     		adds	r3, r3, #1
 197              	.LVL12:
 198 0080 00E0     		b	.L13
 199              	.LVL13:
 200              	.L59:
 201              	.LBE3:
 202 0082 0023     		movs	r3, #0
 203              	.L13:
 204              	.LVL14:
 205              	.LBB4:
  97:main.c        ****             for (int i = 0; i < 5; i++) {
 206              		.loc 1 97 0 is_stmt 0 discriminator 1
 207 0084 042B     		cmp	r3, #4
 208 0086 F2DD     		ble	.L15
 209              	.LVL15:
 210              	.L14:
 211              	.LBE4:
 101:main.c        ****             }
 102:main.c        ****         }     
 103:main.c        ****         
 104:main.c        ****         // If the milliVolt reading is above the required threshold, perform the requested operatio
 105:main.c        ****         if (pastValues[channel] >= 800) {
 212              		.loc 1 105 0 is_stmt 1
 213 0088 7E4B     		ldr	r3, .L65+12
 214 008a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 215 008c 03EB4203 		add	r3, r3, r2, lsl #1
 216 0090 1B8A     		ldrh	r3, [r3, #16]
 217 0092 B3F5487F 		cmp	r3, #800
 218 0096 2CD3     		bcc	.L16
 106:main.c        ****             // Change the position in the sensor_state array depending on the channel being read.
 107:main.c        ****             if (channel == 0) {
 219              		.loc 1 107 0
 220 0098 7A4B     		ldr	r3, .L65+12
 221 009a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 222 009c 13F0FF0F 		tst	r3, #255
 223 00a0 03D1     		bne	.L17
 108:main.c        ****                 sensor_state[FL] = ON;
 224              		.loc 1 108 0
 225 00a2 0122     		movs	r2, #1
 226 00a4 764B     		ldr	r3, .L65+8
 227 00a6 1A70     		strb	r2, [r3]
 228 00a8 4FE0     		b	.L18
 229              	.L17:
 109:main.c        ****             } else if (channel == 1) {
ARM GAS  C:\Users\smas270\AppData\Local\Temp\cc9xSgfA.s 			page 7


 230              		.loc 1 109 0
 231 00aa 764B     		ldr	r3, .L65+12
 232 00ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 233 00ae DBB2     		uxtb	r3, r3
 234 00b0 012B     		cmp	r3, #1
 235 00b2 03D1     		bne	.L19
 110:main.c        ****                 sensor_state[FR] = ON;
 236              		.loc 1 110 0
 237 00b4 0122     		movs	r2, #1
 238 00b6 724B     		ldr	r3, .L65+8
 239 00b8 5A70     		strb	r2, [r3, #1]
 240 00ba 46E0     		b	.L18
 241              	.L19:
 111:main.c        ****             } else if (channel == 2) {
 242              		.loc 1 111 0
 243 00bc 714B     		ldr	r3, .L65+12
 244 00be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 245 00c0 DBB2     		uxtb	r3, r3
 246 00c2 022B     		cmp	r3, #2
 247 00c4 03D1     		bne	.L20
 112:main.c        ****                 sensor_state[CL] = ON;
 248              		.loc 1 112 0
 249 00c6 0122     		movs	r2, #1
 250 00c8 6D4B     		ldr	r3, .L65+8
 251 00ca 9A70     		strb	r2, [r3, #2]
 252 00cc 3DE0     		b	.L18
 253              	.L20:
 113:main.c        ****             } else if (channel == 3) {
 254              		.loc 1 113 0
 255 00ce 6D4B     		ldr	r3, .L65+12
 256 00d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 257 00d2 DBB2     		uxtb	r3, r3
 258 00d4 032B     		cmp	r3, #3
 259 00d6 03D1     		bne	.L21
 114:main.c        ****                 sensor_state[CR] = ON;
 260              		.loc 1 114 0
 261 00d8 0122     		movs	r2, #1
 262 00da 694B     		ldr	r3, .L65+8
 263 00dc DA70     		strb	r2, [r3, #3]
 264 00de 34E0     		b	.L18
 265              	.L21:
 115:main.c        ****             } else if (channel == 4) {
 266              		.loc 1 115 0
 267 00e0 684B     		ldr	r3, .L65+12
 268 00e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 269 00e4 DBB2     		uxtb	r3, r3
 270 00e6 042B     		cmp	r3, #4
 271 00e8 2FD1     		bne	.L18
 116:main.c        ****                 sensor_state[BC] = ON;
 272              		.loc 1 116 0
 273 00ea 0122     		movs	r2, #1
 274 00ec 644B     		ldr	r3, .L65+8
 275 00ee 1A71     		strb	r2, [r3, #4]
 276 00f0 2BE0     		b	.L18
 277              	.L16:
 117:main.c        ****             }
 118:main.c        ****         } else {
ARM GAS  C:\Users\smas270\AppData\Local\Temp\cc9xSgfA.s 			page 8


 119:main.c        ****             if (channel == 0) {
 278              		.loc 1 119 0
 279 00f2 644B     		ldr	r3, .L65+12
 280 00f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 281 00f6 13F0FF0F 		tst	r3, #255
 282 00fa 03D1     		bne	.L22
 120:main.c        ****                 sensor_state[FL] = OFF;
 283              		.loc 1 120 0
 284 00fc 0022     		movs	r2, #0
 285 00fe 604B     		ldr	r3, .L65+8
 286 0100 1A70     		strb	r2, [r3]
 287 0102 22E0     		b	.L18
 288              	.L22:
 121:main.c        ****             } else if (channel == 1) {
 289              		.loc 1 121 0
 290 0104 5F4B     		ldr	r3, .L65+12
 291 0106 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 292 0108 DBB2     		uxtb	r3, r3
 293 010a 012B     		cmp	r3, #1
 294 010c 03D1     		bne	.L23
 122:main.c        ****                 sensor_state[FR] = OFF;
 295              		.loc 1 122 0
 296 010e 0022     		movs	r2, #0
 297 0110 5B4B     		ldr	r3, .L65+8
 298 0112 5A70     		strb	r2, [r3, #1]
 299 0114 19E0     		b	.L18
 300              	.L23:
 123:main.c        ****             } else if (channel == 2) {
 301              		.loc 1 123 0
 302 0116 5B4B     		ldr	r3, .L65+12
 303 0118 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 304 011a DBB2     		uxtb	r3, r3
 305 011c 022B     		cmp	r3, #2
 306 011e 03D1     		bne	.L24
 124:main.c        ****                 sensor_state[CL] = OFF;
 307              		.loc 1 124 0
 308 0120 0022     		movs	r2, #0
 309 0122 574B     		ldr	r3, .L65+8
 310 0124 9A70     		strb	r2, [r3, #2]
 311 0126 10E0     		b	.L18
 312              	.L24:
 125:main.c        ****             } else if (channel == 3) {
 313              		.loc 1 125 0
 314 0128 564B     		ldr	r3, .L65+12
 315 012a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 316 012c DBB2     		uxtb	r3, r3
 317 012e 032B     		cmp	r3, #3
 318 0130 03D1     		bne	.L25
 126:main.c        ****                 sensor_state[CR] = OFF;
 319              		.loc 1 126 0
 320 0132 0022     		movs	r2, #0
 321 0134 524B     		ldr	r3, .L65+8
 322 0136 DA70     		strb	r2, [r3, #3]
 323 0138 07E0     		b	.L18
 324              	.L25:
 127:main.c        ****             } else if (channel == 4) {
 325              		.loc 1 127 0
ARM GAS  C:\Users\smas270\AppData\Local\Temp\cc9xSgfA.s 			page 9


 326 013a 524B     		ldr	r3, .L65+12
 327 013c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 328 013e DBB2     		uxtb	r3, r3
 329 0140 042B     		cmp	r3, #4
 330 0142 02D1     		bne	.L18
 128:main.c        ****                 sensor_state[BC] = OFF;
 331              		.loc 1 128 0
 332 0144 0022     		movs	r2, #0
 333 0146 4E4B     		ldr	r3, .L65+8
 334 0148 1A71     		strb	r2, [r3, #4]
 335              	.L18:
 129:main.c        ****             }
 130:main.c        ****         }
 131:main.c        ****         
 132:main.c        ****                 /* STRAIGHT: 
 133:main.c        ****          * MOVE forward
 134:main.c        ****          *
 135:main.c        ****          * CORRECTION:
 136:main.c        ****          * WAIT UNTIL BC off
 137:main.c        ****          * MOVE forward
 138:main.c        ****          * UNTIL FL OR FR off ->
 139:main.c        ****          * IF FL off TURN left UNTIL BC off
 140:main.c        ****          * IF FR off TURN right UNTIL BC off
 141:main.c        ****          *
 142:main.c        ****          * LEFT:
 143:main.c        ****          * WAIT UNTIL FL off
 144:main.c        ****          * TURN left UNTIL CL off
 145:main.c        ****          * MOVE forward UNTIL BC off
 146:main.c        ****          * TURN left UNTIL FL on -> off
 147:main.c        ****          * MOVE forward
 148:main.c        ****          *
 149:main.c        ****          * RIGHT:
 150:main.c        ****          * WAIT UNTIL FR off
 151:main.c        ****          * TURN right UNTIL CR off
 152:main.c        ****          * MOVE forward UNTIL BC off
 153:main.c        ****          * TURN right UNTIL FR on -> off
 154:main.c        ****          * MOVE forward
 155:main.c        ****          */
 156:main.c        ****         
 157:main.c        ****         // Implementation of a state machine to control the robot.
 158:main.c        ****         if (state == FORWARD) {
 336              		.loc 1 158 0
 337 014a 4E4B     		ldr	r3, .L65+12
 338 014c 9B7E     		ldrb	r3, [r3, #26]	@ zero_extendqisi2
 339 014e C3B9     		cbnz	r3, .L26
 159:main.c        ****             move_forward();
 340              		.loc 1 159 0
 341 0150 FFF7FEFF 		bl	move_forward
 342              	.LVL16:
 160:main.c        ****             if (sensor_state[FL] == OFF) {
 343              		.loc 1 160 0
 344 0154 4A4B     		ldr	r3, .L65+8
 345 0156 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 346 0158 1BB9     		cbnz	r3, .L27
 161:main.c        ****                 state = TURNING_LEFT;
 347              		.loc 1 161 0
 348 015a 0122     		movs	r2, #1
ARM GAS  C:\Users\smas270\AppData\Local\Temp\cc9xSgfA.s 			page 10


 349 015c 494B     		ldr	r3, .L65+12
 350 015e 9A76     		strb	r2, [r3, #26]
 351 0160 0CE0     		b	.L28
 352              	.L27:
 162:main.c        ****             } else if (sensor_state[FR] == OFF) {
 353              		.loc 1 162 0
 354 0162 474B     		ldr	r3, .L65+8
 355 0164 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 356 0166 1BB9     		cbnz	r3, .L29
 163:main.c        ****                 state = TURNING_RIGHT;
 357              		.loc 1 163 0
 358 0168 0222     		movs	r2, #2
 359 016a 464B     		ldr	r3, .L65+12
 360 016c 9A76     		strb	r2, [r3, #26]
 361 016e 05E0     		b	.L28
 362              	.L29:
 164:main.c        ****             } else if (sensor_state[BC] == OFF) {
 363              		.loc 1 164 0
 364 0170 434B     		ldr	r3, .L65+8
 365 0172 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 366 0174 13B9     		cbnz	r3, .L28
 165:main.c        ****                 state = CORRECTION;
 367              		.loc 1 165 0
 368 0176 0322     		movs	r2, #3
 369 0178 424B     		ldr	r3, .L65+12
 370 017a 9A76     		strb	r2, [r3, #26]
 371              	.L28:
 166:main.c        ****             }
 167:main.c        ****             stop();
 372              		.loc 1 167 0
 373 017c FFF7FEFF 		bl	stop
 374              	.LVL17:
 375 0180 74E0     		b	.L30
 376              	.L26:
 168:main.c        ****         } else if (state == TURNING_LEFT) {
 377              		.loc 1 168 0
 378 0182 012B     		cmp	r3, #1
 379 0184 21D1     		bne	.L60
 380 0186 01E0     		b	.L31
 381              	.L33:
 169:main.c        ****             while(sensor_state[CL] == ON) {
 170:main.c        ****                 turn_left();
 382              		.loc 1 170 0
 383 0188 FFF7FEFF 		bl	turn_left
 384              	.LVL18:
 385              	.L31:
 169:main.c        ****             while(sensor_state[CL] == ON) {
 386              		.loc 1 169 0
 387 018c 3C4B     		ldr	r3, .L65+8
 388 018e 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 389 0190 012B     		cmp	r3, #1
 390 0192 F9D0     		beq	.L33
 391 0194 01E0     		b	.L34
 392              	.L35:
 171:main.c        ****             }
 172:main.c        ****             while(sensor_state[BC] == ON) {
 173:main.c        ****                 move_forward();
ARM GAS  C:\Users\smas270\AppData\Local\Temp\cc9xSgfA.s 			page 11


 393              		.loc 1 173 0
 394 0196 FFF7FEFF 		bl	move_forward
 395              	.LVL19:
 396              	.L34:
 172:main.c        ****                 move_forward();
 397              		.loc 1 172 0
 398 019a 394B     		ldr	r3, .L65+8
 399 019c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 400 019e 012B     		cmp	r3, #1
 401 01a0 F9D0     		beq	.L35
 402 01a2 01E0     		b	.L36
 403              	.L37:
 174:main.c        ****             }
 175:main.c        ****             while(sensor_state[FL] == OFF) {
 176:main.c        ****                 turn_left();
 404              		.loc 1 176 0
 405 01a4 FFF7FEFF 		bl	turn_left
 406              	.LVL20:
 407              	.L36:
 175:main.c        ****                 turn_left();
 408              		.loc 1 175 0
 409 01a8 354B     		ldr	r3, .L65+8
 410 01aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 411 01ac 002B     		cmp	r3, #0
 412 01ae F9D0     		beq	.L37
 413 01b0 01E0     		b	.L38
 414              	.L39:
 177:main.c        ****             }
 178:main.c        ****             while(sensor_state[FL] == ON) {
 179:main.c        ****                 turn_left();
 415              		.loc 1 179 0
 416 01b2 FFF7FEFF 		bl	turn_left
 417              	.LVL21:
 418              	.L38:
 178:main.c        ****                 turn_left();
 419              		.loc 1 178 0
 420 01b6 324B     		ldr	r3, .L65+8
 421 01b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 422 01ba 012B     		cmp	r3, #1
 423 01bc F9D0     		beq	.L39
 180:main.c        ****             }
 181:main.c        ****             stop();
 424              		.loc 1 181 0
 425 01be FFF7FEFF 		bl	stop
 426              	.LVL22:
 182:main.c        ****             state = FORWARD;
 427              		.loc 1 182 0
 428 01c2 0022     		movs	r2, #0
 429 01c4 2F4B     		ldr	r3, .L65+12
 430 01c6 9A76     		strb	r2, [r3, #26]
 431 01c8 50E0     		b	.L30
 432              	.L60:
 183:main.c        ****         } else if (state == TURNING_RIGHT) {
 433              		.loc 1 183 0
 434 01ca 022B     		cmp	r3, #2
 435 01cc 21D1     		bne	.L61
 436 01ce 01E0     		b	.L40
ARM GAS  C:\Users\smas270\AppData\Local\Temp\cc9xSgfA.s 			page 12


 437              	.L42:
 184:main.c        ****             while(sensor_state[CR] == ON) {
 185:main.c        ****                 turn_right();
 438              		.loc 1 185 0
 439 01d0 FFF7FEFF 		bl	turn_right
 440              	.LVL23:
 441              	.L40:
 184:main.c        ****             while(sensor_state[CR] == ON) {
 442              		.loc 1 184 0
 443 01d4 2A4B     		ldr	r3, .L65+8
 444 01d6 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 445 01d8 012B     		cmp	r3, #1
 446 01da F9D0     		beq	.L42
 447 01dc 01E0     		b	.L43
 448              	.L44:
 186:main.c        ****             }
 187:main.c        ****             while(sensor_state[BC] == ON) {
 188:main.c        ****                 move_forward();
 449              		.loc 1 188 0
 450 01de FFF7FEFF 		bl	move_forward
 451              	.LVL24:
 452              	.L43:
 187:main.c        ****                 move_forward();
 453              		.loc 1 187 0
 454 01e2 274B     		ldr	r3, .L65+8
 455 01e4 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 456 01e6 012B     		cmp	r3, #1
 457 01e8 F9D0     		beq	.L44
 458 01ea 01E0     		b	.L45
 459              	.L46:
 189:main.c        ****             }
 190:main.c        ****             while(sensor_state[FR] == OFF) {
 191:main.c        ****                 turn_right();
 460              		.loc 1 191 0
 461 01ec FFF7FEFF 		bl	turn_right
 462              	.LVL25:
 463              	.L45:
 190:main.c        ****                 turn_right();
 464              		.loc 1 190 0
 465 01f0 234B     		ldr	r3, .L65+8
 466 01f2 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 467 01f4 002B     		cmp	r3, #0
 468 01f6 F9D0     		beq	.L46
 469 01f8 01E0     		b	.L47
 470              	.L48:
 192:main.c        ****             }
 193:main.c        ****             while(sensor_state[FR] == ON) {
 194:main.c        ****                 turn_right();
 471              		.loc 1 194 0
 472 01fa FFF7FEFF 		bl	turn_right
 473              	.LVL26:
 474              	.L47:
 193:main.c        ****                 turn_right();
 475              		.loc 1 193 0
 476 01fe 204B     		ldr	r3, .L65+8
 477 0200 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 478 0202 012B     		cmp	r3, #1
ARM GAS  C:\Users\smas270\AppData\Local\Temp\cc9xSgfA.s 			page 13


 479 0204 F9D0     		beq	.L48
 195:main.c        ****             }
 196:main.c        ****             stop();
 480              		.loc 1 196 0
 481 0206 FFF7FEFF 		bl	stop
 482              	.LVL27:
 197:main.c        ****             state = FORWARD;
 483              		.loc 1 197 0
 484 020a 0022     		movs	r2, #0
 485 020c 1D4B     		ldr	r3, .L65+12
 486 020e 9A76     		strb	r2, [r3, #26]
 487 0210 2CE0     		b	.L30
 488              	.L61:
 198:main.c        ****         } else if (state == CORRECTION) {
 489              		.loc 1 198 0
 490 0212 032B     		cmp	r3, #3
 491 0214 28D1     		bne	.L62
 492 0216 01E0     		b	.L49
 493              	.L52:
 199:main.c        ****             while(sensor_state[FL] == ON && sensor_state[FR] == ON) {
 200:main.c        ****                 move_forward();
 494              		.loc 1 200 0
 495 0218 FFF7FEFF 		bl	move_forward
 496              	.LVL28:
 497              	.L49:
 199:main.c        ****             while(sensor_state[FL] == ON && sensor_state[FR] == ON) {
 498              		.loc 1 199 0
 499 021c 184B     		ldr	r3, .L65+8
 500 021e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 501 0220 012B     		cmp	r3, #1
 502 0222 03D1     		bne	.L51
 199:main.c        ****             while(sensor_state[FL] == ON && sensor_state[FR] == ON) {
 503              		.loc 1 199 0 is_stmt 0 discriminator 1
 504 0224 164A     		ldr	r2, .L65+8
 505 0226 5278     		ldrb	r2, [r2, #1]	@ zero_extendqisi2
 506 0228 012A     		cmp	r2, #1
 507 022a F5D0     		beq	.L52
 508              	.L51:
 201:main.c        ****             }
 202:main.c        ****             if (sensor_state[FL] == OFF) {
 509              		.loc 1 202 0 is_stmt 1
 510 022c 13B1     		cbz	r3, .L53
 511 022e 0BE0     		b	.L63
 512              	.L55:
 203:main.c        ****                 while(sensor_state[BC] == ON) {
 204:main.c        ****                     turn_left();
 513              		.loc 1 204 0
 514 0230 FFF7FEFF 		bl	turn_left
 515              	.LVL29:
 516              	.L53:
 203:main.c        ****                 while(sensor_state[BC] == ON) {
 517              		.loc 1 203 0
 518 0234 124B     		ldr	r3, .L65+8
 519 0236 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 520 0238 012B     		cmp	r3, #1
 521 023a F9D0     		beq	.L55
 205:main.c        ****                 }
ARM GAS  C:\Users\smas270\AppData\Local\Temp\cc9xSgfA.s 			page 14


 206:main.c        ****                 stop();
 522              		.loc 1 206 0
 523 023c FFF7FEFF 		bl	stop
 524              	.LVL30:
 207:main.c        ****                 state = FORWARD;
 525              		.loc 1 207 0
 526 0240 0022     		movs	r2, #0
 527 0242 104B     		ldr	r3, .L65+12
 528 0244 9A76     		strb	r2, [r3, #26]
 529 0246 11E0     		b	.L30
 530              	.L63:
 208:main.c        ****             } else if (sensor_state[FR] == OFF) {
 531              		.loc 1 208 0
 532 0248 0D4B     		ldr	r3, .L65+8
 533 024a 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 534 024c 13B1     		cbz	r3, .L56
 535 024e 0DE0     		b	.L30
 536              	.L57:
 209:main.c        ****                 while(sensor_state[BC] == ON) {
 210:main.c        ****                     turn_right();
 537              		.loc 1 210 0
 538 0250 FFF7FEFF 		bl	turn_right
 539              	.LVL31:
 540              	.L56:
 209:main.c        ****                 while(sensor_state[BC] == ON) {
 541              		.loc 1 209 0
 542 0254 0A4B     		ldr	r3, .L65+8
 543 0256 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 544 0258 012B     		cmp	r3, #1
 545 025a F9D0     		beq	.L57
 211:main.c        ****                 }
 212:main.c        ****                 stop();
 546              		.loc 1 212 0
 547 025c FFF7FEFF 		bl	stop
 548              	.LVL32:
 213:main.c        ****                 state = FORWARD;
 549              		.loc 1 213 0
 550 0260 0022     		movs	r2, #0
 551 0262 084B     		ldr	r3, .L65+12
 552 0264 9A76     		strb	r2, [r3, #26]
 553 0266 01E0     		b	.L30
 554              	.L62:
 214:main.c        ****             }
 215:main.c        ****             } else {
 216:main.c        ****                 move_forward();
 555              		.loc 1 216 0
 556 0268 FFF7FEFF 		bl	move_forward
 557              	.LVL33:
 558              	.L30:
 217:main.c        ****             }
 218:main.c        ****             stop();
 559              		.loc 1 218 0
 560 026c FFF7FEFF 		bl	stop
 561              	.LVL34:
 219:main.c        ****             state = FORWARD;
 562              		.loc 1 219 0
 563 0270 0022     		movs	r2, #0
ARM GAS  C:\Users\smas270\AppData\Local\Temp\cc9xSgfA.s 			page 15


 564 0272 044B     		ldr	r3, .L65+12
 565 0274 9A76     		strb	r2, [r3, #26]
 220:main.c        ****                         
 221:main.c        ****         }
 566              		.loc 1 221 0
 567 0276 DBE6     		b	.L58
 568              	.L66:
 569              		.align	2
 570              	.L65:
 571 0278 00000000 		.word	isr_eoc_1
 572 027c 00000000 		.word	isr_timer_1
 573 0280 00000000 		.word	sensor_state
 574 0284 00000000 		.word	.LANCHOR0
 575 0288 00000000 		.word	ADCResult
 576 028c 00000000 		.word	milliVoltReading
 577              		.cfi_endproc
 578              	.LFE65:
 579              		.size	main, .-main
 580              		.comm	sensor_state,5,4
 581              		.global	count
 582              		.global	pastValues
 583              		.global	maxValues
 584              		.global	reset
 585              		.global	state
 586              		.comm	milliVoltReading,2,2
 587              		.comm	ADCResult,2,2
 588              		.global	i
 589              		.global	channel
 590              		.bss
 591              		.align	2
 592              		.set	.LANCHOR0,. + 0
 593              		.type	channel, %object
 594              		.size	channel, 1
 595              	channel:
 596 0000 00       		.space	1
 597              		.type	reset, %object
 598              		.size	reset, 1
 599              	reset:
 600 0001 00       		.space	1
 601 0002 0000     		.space	2
 602              		.type	maxValues, %object
 603              		.size	maxValues, 10
 604              	maxValues:
 605 0004 00000000 		.space	10
 605      00000000 
 605      0000
 606 000e 0000     		.space	2
 607              		.type	pastValues, %object
 608              		.size	pastValues, 10
 609              	pastValues:
 610 0010 00000000 		.space	10
 610      00000000 
 610      0000
 611              		.type	state, %object
 612              		.size	state, 1
 613              	state:
 614 001a 00       		.space	1
ARM GAS  C:\Users\smas270\AppData\Local\Temp\cc9xSgfA.s 			page 16


 615 001b 00       		.space	1
 616              		.type	count, %object
 617              		.size	count, 2
 618              	count:
 619 001c 0000     		.space	2
 620 001e 0000     		.space	2
 621              		.type	i, %object
 622              		.size	i, 4
 623              	i:
 624 0020 00000000 		.space	4
 625              		.text
 626              	.Letext0:
 627              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 628              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 629              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 630              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 631              		.file 6 "Generated_Source\\PSoC5/isr_eoc_1.h"
 632              		.file 7 "Generated_Source\\PSoC5/isr_timer_1.h"
 633              		.file 8 "Generated_Source\\PSoC5/ADC_SAR_Seq_1_IRQ.h"
 634              		.file 9 "Generated_Source\\PSoC5/ADC_SAR_Seq_1.h"
 635              		.file 10 "Generated_Source\\PSoC5/Timer_1.h"
 636              		.file 11 "motors.h"
 637              		.section	.debug_info,"",%progbits
 638              	.Ldebug_info0:
 639 0000 C7030000 		.4byte	0x3c7
 640 0004 0400     		.2byte	0x4
 641 0006 00000000 		.4byte	.Ldebug_abbrev0
 642 000a 04       		.byte	0x4
 643 000b 01       		.uleb128 0x1
 644 000c E9000000 		.4byte	.LASF44
 645 0010 0C       		.byte	0xc
 646 0011 76020000 		.4byte	.LASF45
 647 0015 31000000 		.4byte	.LASF46
 648 0019 18000000 		.4byte	.Ldebug_ranges0+0x18
 649 001d 00000000 		.4byte	0
 650 0021 00000000 		.4byte	.Ldebug_line0
 651 0025 02       		.uleb128 0x2
 652 0026 01       		.byte	0x1
 653 0027 06       		.byte	0x6
 654 0028 17030000 		.4byte	.LASF0
 655 002c 02       		.uleb128 0x2
 656 002d 01       		.byte	0x1
 657 002e 08       		.byte	0x8
 658 002f DB000000 		.4byte	.LASF1
 659 0033 02       		.uleb128 0x2
 660 0034 02       		.byte	0x2
 661 0035 05       		.byte	0x5
 662 0036 B3020000 		.4byte	.LASF2
 663 003a 02       		.uleb128 0x2
 664 003b 02       		.byte	0x2
 665 003c 07       		.byte	0x7
 666 003d 1E000000 		.4byte	.LASF3
 667 0041 03       		.uleb128 0x3
 668 0042 14000000 		.4byte	.LASF9
 669 0046 02       		.byte	0x2
 670 0047 3F       		.byte	0x3f
 671 0048 4C000000 		.4byte	0x4c
ARM GAS  C:\Users\smas270\AppData\Local\Temp\cc9xSgfA.s 			page 17


 672 004c 02       		.uleb128 0x2
 673 004d 04       		.byte	0x4
 674 004e 05       		.byte	0x5
 675 004f D7020000 		.4byte	.LASF4
 676 0053 02       		.uleb128 0x2
 677 0054 04       		.byte	0x4
 678 0055 07       		.byte	0x7
 679 0056 77010000 		.4byte	.LASF5
 680 005a 02       		.uleb128 0x2
 681 005b 08       		.byte	0x8
 682 005c 05       		.byte	0x5
 683 005d 68020000 		.4byte	.LASF6
 684 0061 02       		.uleb128 0x2
 685 0062 08       		.byte	0x8
 686 0063 07       		.byte	0x7
 687 0064 0F020000 		.4byte	.LASF7
 688 0068 04       		.uleb128 0x4
 689 0069 04       		.byte	0x4
 690 006a 05       		.byte	0x5
 691 006b 696E7400 		.ascii	"int\000"
 692 006f 02       		.uleb128 0x2
 693 0070 04       		.byte	0x4
 694 0071 07       		.byte	0x7
 695 0072 DC010000 		.4byte	.LASF8
 696 0076 03       		.uleb128 0x3
 697 0077 AB000000 		.4byte	.LASF10
 698 007b 03       		.byte	0x3
 699 007c 2C       		.byte	0x2c
 700 007d 41000000 		.4byte	0x41
 701 0081 05       		.uleb128 0x5
 702 0082 C7020000 		.4byte	.LASF11
 703 0086 04       		.byte	0x4
 704 0087 E401     		.2byte	0x1e4
 705 0089 2C000000 		.4byte	0x2c
 706 008d 05       		.uleb128 0x5
 707 008e BC010000 		.4byte	.LASF12
 708 0092 04       		.byte	0x4
 709 0093 E501     		.2byte	0x1e5
 710 0095 3A000000 		.4byte	0x3a
 711 0099 05       		.uleb128 0x5
 712 009a D5010000 		.4byte	.LASF13
 713 009e 04       		.byte	0x4
 714 009f E601     		.2byte	0x1e6
 715 00a1 53000000 		.4byte	0x53
 716 00a5 02       		.uleb128 0x2
 717 00a6 04       		.byte	0x4
 718 00a7 04       		.byte	0x4
 719 00a8 C7000000 		.4byte	.LASF14
 720 00ac 02       		.uleb128 0x2
 721 00ad 08       		.byte	0x8
 722 00ae 04       		.byte	0x4
 723 00af A6010000 		.4byte	.LASF15
 724 00b3 02       		.uleb128 0x2
 725 00b4 01       		.byte	0x1
 726 00b5 08       		.byte	0x8
 727 00b6 7D020000 		.4byte	.LASF16
 728 00ba 06       		.uleb128 0x6
ARM GAS  C:\Users\smas270\AppData\Local\Temp\cc9xSgfA.s 			page 18


 729 00bb 81000000 		.4byte	0x81
 730 00bf 06       		.uleb128 0x6
 731 00c0 8D000000 		.4byte	0x8d
 732 00c4 02       		.uleb128 0x2
 733 00c5 08       		.byte	0x8
 734 00c6 04       		.byte	0x4
 735 00c7 53020000 		.4byte	.LASF17
 736 00cb 02       		.uleb128 0x2
 737 00cc 04       		.byte	0x4
 738 00cd 07       		.byte	0x7
 739 00ce 5F020000 		.4byte	.LASF18
 740 00d2 07       		.uleb128 0x7
 741 00d3 CD020000 		.4byte	.LASF19
 742 00d7 01       		.byte	0x1
 743 00d8 26       		.byte	0x26
 744 00d9 00000000 		.4byte	.LFB63
 745 00dd 24000000 		.4byte	.LFE63-.LFB63
 746 00e1 01       		.uleb128 0x1
 747 00e2 9C       		.byte	0x9c
 748 00e3 07       		.uleb128 0x7
 749 00e4 26020000 		.4byte	.LASF20
 750 00e8 01       		.byte	0x1
 751 00e9 2F       		.byte	0x2f
 752 00ea 00000000 		.4byte	.LFB64
 753 00ee 0C000000 		.4byte	.LFE64-.LFB64
 754 00f2 01       		.uleb128 0x1
 755 00f3 9C       		.byte	0x9c
 756 00f4 08       		.uleb128 0x8
 757 00f5 B7010000 		.4byte	.LASF47
 758 00f9 01       		.byte	0x1
 759 00fa 33       		.byte	0x33
 760 00fb 68000000 		.4byte	0x68
 761 00ff 00000000 		.4byte	.LFB65
 762 0103 90020000 		.4byte	.LFE65-.LFB65
 763 0107 01       		.uleb128 0x1
 764 0108 9C       		.byte	0x9c
 765 0109 62020000 		.4byte	0x262
 766 010d 09       		.uleb128 0x9
 767 010e 1C000000 		.4byte	.LBB2
 768 0112 10000000 		.4byte	.LBE2-.LBB2
 769 0116 28010000 		.4byte	0x128
 770 011a 0A       		.uleb128 0xa
 771 011b 6900     		.ascii	"i\000"
 772 011d 01       		.byte	0x1
 773 011e 45       		.byte	0x45
 774 011f 68000000 		.4byte	0x68
 775 0123 00000000 		.4byte	.LLST0
 776 0127 00       		.byte	0
 777 0128 0B       		.uleb128 0xb
 778 0129 00000000 		.4byte	.Ldebug_ranges0+0
 779 012d 3F010000 		.4byte	0x13f
 780 0131 0A       		.uleb128 0xa
 781 0132 6900     		.ascii	"i\000"
 782 0134 01       		.byte	0x1
 783 0135 61       		.byte	0x61
 784 0136 68000000 		.4byte	0x68
 785 013a 1F000000 		.4byte	.LLST1
ARM GAS  C:\Users\smas270\AppData\Local\Temp\cc9xSgfA.s 			page 19


 786 013e 00       		.byte	0
 787 013f 0C       		.uleb128 0xc
 788 0140 0A000000 		.4byte	.LVL0
 789 0144 3B030000 		.4byte	0x33b
 790 0148 56010000 		.4byte	0x156
 791 014c 0D       		.uleb128 0xd
 792 014d 01       		.uleb128 0x1
 793 014e 50       		.byte	0x50
 794 014f 05       		.uleb128 0x5
 795 0150 03       		.byte	0x3
 796 0151 00000000 		.4byte	isr_eoc_1
 797 0155 00       		.byte	0
 798 0156 0C       		.uleb128 0xc
 799 0157 10000000 		.4byte	.LVL1
 800 015b 46030000 		.4byte	0x346
 801 015f 6D010000 		.4byte	0x16d
 802 0163 0D       		.uleb128 0xd
 803 0164 01       		.uleb128 0x1
 804 0165 50       		.byte	0x50
 805 0166 05       		.uleb128 0x5
 806 0167 03       		.byte	0x3
 807 0168 00000000 		.4byte	isr_timer_1
 808 016c 00       		.byte	0
 809 016d 0E       		.uleb128 0xe
 810 016e 14000000 		.4byte	.LVL2
 811 0172 51030000 		.4byte	0x351
 812 0176 0E       		.uleb128 0xe
 813 0177 18000000 		.4byte	.LVL3
 814 017b 5C030000 		.4byte	0x35c
 815 017f 0E       		.uleb128 0xe
 816 0180 1C000000 		.4byte	.LVL4
 817 0184 67030000 		.4byte	0x367
 818 0188 0E       		.uleb128 0xe
 819 0189 30000000 		.4byte	.LVL7
 820 018d 72030000 		.4byte	0x372
 821 0191 0C       		.uleb128 0xc
 822 0192 36000000 		.4byte	.LVL8
 823 0196 7D030000 		.4byte	0x37d
 824 019a A4010000 		.4byte	0x1a4
 825 019e 0D       		.uleb128 0xd
 826 019f 01       		.uleb128 0x1
 827 01a0 50       		.byte	0x50
 828 01a1 01       		.uleb128 0x1
 829 01a2 30       		.byte	0x30
 830 01a3 00       		.byte	0
 831 01a4 0E       		.uleb128 0xe
 832 01a5 3E000000 		.4byte	.LVL9
 833 01a9 88030000 		.4byte	0x388
 834 01ad 0E       		.uleb128 0xe
 835 01ae 46000000 		.4byte	.LVL10
 836 01b2 93030000 		.4byte	0x393
 837 01b6 0E       		.uleb128 0xe
 838 01b7 54010000 		.4byte	.LVL16
 839 01bb 9E030000 		.4byte	0x39e
 840 01bf 0E       		.uleb128 0xe
 841 01c0 80010000 		.4byte	.LVL17
 842 01c4 A9030000 		.4byte	0x3a9
ARM GAS  C:\Users\smas270\AppData\Local\Temp\cc9xSgfA.s 			page 20


 843 01c8 0E       		.uleb128 0xe
 844 01c9 8C010000 		.4byte	.LVL18
 845 01cd B4030000 		.4byte	0x3b4
 846 01d1 0E       		.uleb128 0xe
 847 01d2 9A010000 		.4byte	.LVL19
 848 01d6 9E030000 		.4byte	0x39e
 849 01da 0E       		.uleb128 0xe
 850 01db A8010000 		.4byte	.LVL20
 851 01df B4030000 		.4byte	0x3b4
 852 01e3 0E       		.uleb128 0xe
 853 01e4 B6010000 		.4byte	.LVL21
 854 01e8 B4030000 		.4byte	0x3b4
 855 01ec 0E       		.uleb128 0xe
 856 01ed C2010000 		.4byte	.LVL22
 857 01f1 A9030000 		.4byte	0x3a9
 858 01f5 0E       		.uleb128 0xe
 859 01f6 D4010000 		.4byte	.LVL23
 860 01fa BF030000 		.4byte	0x3bf
 861 01fe 0E       		.uleb128 0xe
 862 01ff E2010000 		.4byte	.LVL24
 863 0203 9E030000 		.4byte	0x39e
 864 0207 0E       		.uleb128 0xe
 865 0208 F0010000 		.4byte	.LVL25
 866 020c BF030000 		.4byte	0x3bf
 867 0210 0E       		.uleb128 0xe
 868 0211 FE010000 		.4byte	.LVL26
 869 0215 BF030000 		.4byte	0x3bf
 870 0219 0E       		.uleb128 0xe
 871 021a 0A020000 		.4byte	.LVL27
 872 021e A9030000 		.4byte	0x3a9
 873 0222 0E       		.uleb128 0xe
 874 0223 1C020000 		.4byte	.LVL28
 875 0227 9E030000 		.4byte	0x39e
 876 022b 0E       		.uleb128 0xe
 877 022c 34020000 		.4byte	.LVL29
 878 0230 B4030000 		.4byte	0x3b4
 879 0234 0E       		.uleb128 0xe
 880 0235 40020000 		.4byte	.LVL30
 881 0239 A9030000 		.4byte	0x3a9
 882 023d 0E       		.uleb128 0xe
 883 023e 54020000 		.4byte	.LVL31
 884 0242 BF030000 		.4byte	0x3bf
 885 0246 0E       		.uleb128 0xe
 886 0247 60020000 		.4byte	.LVL32
 887 024b A9030000 		.4byte	0x3a9
 888 024f 0E       		.uleb128 0xe
 889 0250 6C020000 		.4byte	.LVL33
 890 0254 9E030000 		.4byte	0x39e
 891 0258 0E       		.uleb128 0xe
 892 0259 70020000 		.4byte	.LVL34
 893 025d A9030000 		.4byte	0x3a9
 894 0261 00       		.byte	0
 895 0262 0F       		.uleb128 0xf
 896 0263 99010000 		.4byte	.LASF21
 897 0267 05       		.byte	0x5
 898 0268 1207     		.2byte	0x712
 899 026a 6E020000 		.4byte	0x26e
ARM GAS  C:\Users\smas270\AppData\Local\Temp\cc9xSgfA.s 			page 21


 900 026e 06       		.uleb128 0x6
 901 026f 76000000 		.4byte	0x76
 902 0273 10       		.uleb128 0x10
 903 0274 00000000 		.4byte	.LASF22
 904 0278 01       		.byte	0x1
 905 0279 18       		.byte	0x18
 906 027a BA000000 		.4byte	0xba
 907 027e 05       		.uleb128 0x5
 908 027f 03       		.byte	0x3
 909 0280 00000000 		.4byte	channel
 910 0284 11       		.uleb128 0x11
 911 0285 6900     		.ascii	"i\000"
 912 0287 01       		.byte	0x1
 913 0288 1A       		.byte	0x1a
 914 0289 99000000 		.4byte	0x99
 915 028d 05       		.uleb128 0x5
 916 028e 03       		.byte	0x3
 917 028f 00000000 		.4byte	i
 918 0293 10       		.uleb128 0x10
 919 0294 AD010000 		.4byte	.LASF23
 920 0298 01       		.byte	0x1
 921 0299 1C       		.byte	0x1c
 922 029a 8D000000 		.4byte	0x8d
 923 029e 05       		.uleb128 0x5
 924 029f 03       		.byte	0x3
 925 02a0 00000000 		.4byte	ADCResult
 926 02a4 10       		.uleb128 0x10
 927 02a5 23030000 		.4byte	.LASF24
 928 02a9 01       		.byte	0x1
 929 02aa 1D       		.byte	0x1d
 930 02ab 8D000000 		.4byte	0x8d
 931 02af 05       		.uleb128 0x5
 932 02b0 03       		.byte	0x3
 933 02b1 00000000 		.4byte	milliVoltReading
 934 02b5 10       		.uleb128 0x10
 935 02b6 08000000 		.4byte	.LASF25
 936 02ba 01       		.byte	0x1
 937 02bb 1E       		.byte	0x1e
 938 02bc 81000000 		.4byte	0x81
 939 02c0 05       		.uleb128 0x5
 940 02c1 03       		.byte	0x3
 941 02c2 00000000 		.4byte	state
 942 02c6 10       		.uleb128 0x10
 943 02c7 0E000000 		.4byte	.LASF26
 944 02cb 01       		.byte	0x1
 945 02cc 1F       		.byte	0x1f
 946 02cd BA000000 		.4byte	0xba
 947 02d1 05       		.uleb128 0x5
 948 02d2 03       		.byte	0x3
 949 02d3 00000000 		.4byte	reset
 950 02d7 12       		.uleb128 0x12
 951 02d8 8D000000 		.4byte	0x8d
 952 02dc E7020000 		.4byte	0x2e7
 953 02e0 13       		.uleb128 0x13
 954 02e1 CB000000 		.4byte	0xcb
 955 02e5 04       		.byte	0x4
 956 02e6 00       		.byte	0
ARM GAS  C:\Users\smas270\AppData\Local\Temp\cc9xSgfA.s 			page 22


 957 02e7 10       		.uleb128 0x10
 958 02e8 BD020000 		.4byte	.LASF27
 959 02ec 01       		.byte	0x1
 960 02ed 21       		.byte	0x21
 961 02ee D7020000 		.4byte	0x2d7
 962 02f2 05       		.uleb128 0x5
 963 02f3 03       		.byte	0x3
 964 02f4 00000000 		.4byte	maxValues
 965 02f8 10       		.uleb128 0x10
 966 02f9 04020000 		.4byte	.LASF28
 967 02fd 01       		.byte	0x1
 968 02fe 22       		.byte	0x22
 969 02ff D7020000 		.4byte	0x2d7
 970 0303 05       		.uleb128 0x5
 971 0304 03       		.byte	0x3
 972 0305 00000000 		.4byte	pastValues
 973 0309 10       		.uleb128 0x10
 974 030a AD020000 		.4byte	.LASF29
 975 030e 01       		.byte	0x1
 976 030f 23       		.byte	0x23
 977 0310 BF000000 		.4byte	0xbf
 978 0314 05       		.uleb128 0x5
 979 0315 03       		.byte	0x3
 980 0316 00000000 		.4byte	count
 981 031a 12       		.uleb128 0x12
 982 031b 81000000 		.4byte	0x81
 983 031f 2A030000 		.4byte	0x32a
 984 0323 13       		.uleb128 0x13
 985 0324 CB000000 		.4byte	0xcb
 986 0328 04       		.byte	0x4
 987 0329 00       		.byte	0
 988 032a 10       		.uleb128 0x10
 989 032b 46020000 		.4byte	.LASF30
 990 032f 01       		.byte	0x1
 991 0330 24       		.byte	0x24
 992 0331 1A030000 		.4byte	0x31a
 993 0335 05       		.uleb128 0x5
 994 0336 03       		.byte	0x3
 995 0337 00000000 		.4byte	sensor_state
 996 033b 14       		.uleb128 0x14
 997 033c C3010000 		.4byte	.LASF31
 998 0340 C3010000 		.4byte	.LASF31
 999 0344 06       		.byte	0x6
 1000 0345 18       		.byte	0x18
 1001 0346 14       		.uleb128 0x14
 1002 0347 32020000 		.4byte	.LASF32
 1003 034b 32020000 		.4byte	.LASF32
 1004 034f 07       		.byte	0x7
 1005 0350 18       		.byte	0x18
 1006 0351 14       		.uleb128 0x14
 1007 0352 FE020000 		.4byte	.LASF33
 1008 0356 FE020000 		.4byte	.LASF33
 1009 035a 08       		.byte	0x8
 1010 035b 23       		.byte	0x23
 1011 035c 14       		.uleb128 0x14
 1012 035d B3000000 		.4byte	.LASF34
 1013 0361 B3000000 		.4byte	.LASF34
ARM GAS  C:\Users\smas270\AppData\Local\Temp\cc9xSgfA.s 			page 23


 1014 0365 09       		.byte	0x9
 1015 0366 31       		.byte	0x31
 1016 0367 14       		.uleb128 0x14
 1017 0368 E9010000 		.4byte	.LASF35
 1018 036c E9010000 		.4byte	.LASF35
 1019 0370 09       		.byte	0x9
 1020 0371 A1       		.byte	0xa1
 1021 0372 14       		.uleb128 0x14
 1022 0373 CD000000 		.4byte	.LASF36
 1023 0377 CD000000 		.4byte	.LASF36
 1024 037b 0A       		.byte	0xa
 1025 037c 5A       		.byte	0x5a
 1026 037d 14       		.uleb128 0x14
 1027 037e E0020000 		.4byte	.LASF37
 1028 0382 E0020000 		.4byte	.LASF37
 1029 0386 09       		.byte	0x9
 1030 0387 34       		.byte	0x34
 1031 0388 14       		.uleb128 0x14
 1032 0389 34030000 		.4byte	.LASF38
 1033 038d 34030000 		.4byte	.LASF38
 1034 0391 09       		.byte	0x9
 1035 0392 35       		.byte	0x35
 1036 0393 14       		.uleb128 0x14
 1037 0394 8F020000 		.4byte	.LASF39
 1038 0398 8F020000 		.4byte	.LASF39
 1039 039c 09       		.byte	0x9
 1040 039d 3A       		.byte	0x3a
 1041 039e 14       		.uleb128 0x14
 1042 039f 82020000 		.4byte	.LASF40
 1043 03a3 82020000 		.4byte	.LASF40
 1044 03a7 0B       		.byte	0xb
 1045 03a8 10       		.byte	0x10
 1046 03a9 14       		.uleb128 0x14
 1047 03aa 94010000 		.4byte	.LASF41
 1048 03ae 94010000 		.4byte	.LASF41
 1049 03b2 0B       		.byte	0xb
 1050 03b3 13       		.byte	0x13
 1051 03b4 14       		.uleb128 0x14
 1052 03b5 A1000000 		.4byte	.LASF42
 1053 03b9 A1000000 		.4byte	.LASF42
 1054 03bd 0B       		.byte	0xb
 1055 03be 11       		.byte	0x11
 1056 03bf 14       		.uleb128 0x14
 1057 03c0 89010000 		.4byte	.LASF43
 1058 03c4 89010000 		.4byte	.LASF43
 1059 03c8 0B       		.byte	0xb
 1060 03c9 12       		.byte	0x12
 1061 03ca 00       		.byte	0
 1062              		.section	.debug_abbrev,"",%progbits
 1063              	.Ldebug_abbrev0:
 1064 0000 01       		.uleb128 0x1
 1065 0001 11       		.uleb128 0x11
 1066 0002 01       		.byte	0x1
 1067 0003 25       		.uleb128 0x25
 1068 0004 0E       		.uleb128 0xe
 1069 0005 13       		.uleb128 0x13
 1070 0006 0B       		.uleb128 0xb
ARM GAS  C:\Users\smas270\AppData\Local\Temp\cc9xSgfA.s 			page 24


 1071 0007 03       		.uleb128 0x3
 1072 0008 0E       		.uleb128 0xe
 1073 0009 1B       		.uleb128 0x1b
 1074 000a 0E       		.uleb128 0xe
 1075 000b 55       		.uleb128 0x55
 1076 000c 17       		.uleb128 0x17
 1077 000d 11       		.uleb128 0x11
 1078 000e 01       		.uleb128 0x1
 1079 000f 10       		.uleb128 0x10
 1080 0010 17       		.uleb128 0x17
 1081 0011 00       		.byte	0
 1082 0012 00       		.byte	0
 1083 0013 02       		.uleb128 0x2
 1084 0014 24       		.uleb128 0x24
 1085 0015 00       		.byte	0
 1086 0016 0B       		.uleb128 0xb
 1087 0017 0B       		.uleb128 0xb
 1088 0018 3E       		.uleb128 0x3e
 1089 0019 0B       		.uleb128 0xb
 1090 001a 03       		.uleb128 0x3
 1091 001b 0E       		.uleb128 0xe
 1092 001c 00       		.byte	0
 1093 001d 00       		.byte	0
 1094 001e 03       		.uleb128 0x3
 1095 001f 16       		.uleb128 0x16
 1096 0020 00       		.byte	0
 1097 0021 03       		.uleb128 0x3
 1098 0022 0E       		.uleb128 0xe
 1099 0023 3A       		.uleb128 0x3a
 1100 0024 0B       		.uleb128 0xb
 1101 0025 3B       		.uleb128 0x3b
 1102 0026 0B       		.uleb128 0xb
 1103 0027 49       		.uleb128 0x49
 1104 0028 13       		.uleb128 0x13
 1105 0029 00       		.byte	0
 1106 002a 00       		.byte	0
 1107 002b 04       		.uleb128 0x4
 1108 002c 24       		.uleb128 0x24
 1109 002d 00       		.byte	0
 1110 002e 0B       		.uleb128 0xb
 1111 002f 0B       		.uleb128 0xb
 1112 0030 3E       		.uleb128 0x3e
 1113 0031 0B       		.uleb128 0xb
 1114 0032 03       		.uleb128 0x3
 1115 0033 08       		.uleb128 0x8
 1116 0034 00       		.byte	0
 1117 0035 00       		.byte	0
 1118 0036 05       		.uleb128 0x5
 1119 0037 16       		.uleb128 0x16
 1120 0038 00       		.byte	0
 1121 0039 03       		.uleb128 0x3
 1122 003a 0E       		.uleb128 0xe
 1123 003b 3A       		.uleb128 0x3a
 1124 003c 0B       		.uleb128 0xb
 1125 003d 3B       		.uleb128 0x3b
 1126 003e 05       		.uleb128 0x5
 1127 003f 49       		.uleb128 0x49
ARM GAS  C:\Users\smas270\AppData\Local\Temp\cc9xSgfA.s 			page 25


 1128 0040 13       		.uleb128 0x13
 1129 0041 00       		.byte	0
 1130 0042 00       		.byte	0
 1131 0043 06       		.uleb128 0x6
 1132 0044 35       		.uleb128 0x35
 1133 0045 00       		.byte	0
 1134 0046 49       		.uleb128 0x49
 1135 0047 13       		.uleb128 0x13
 1136 0048 00       		.byte	0
 1137 0049 00       		.byte	0
 1138 004a 07       		.uleb128 0x7
 1139 004b 2E       		.uleb128 0x2e
 1140 004c 00       		.byte	0
 1141 004d 3F       		.uleb128 0x3f
 1142 004e 19       		.uleb128 0x19
 1143 004f 03       		.uleb128 0x3
 1144 0050 0E       		.uleb128 0xe
 1145 0051 3A       		.uleb128 0x3a
 1146 0052 0B       		.uleb128 0xb
 1147 0053 3B       		.uleb128 0x3b
 1148 0054 0B       		.uleb128 0xb
 1149 0055 27       		.uleb128 0x27
 1150 0056 19       		.uleb128 0x19
 1151 0057 11       		.uleb128 0x11
 1152 0058 01       		.uleb128 0x1
 1153 0059 12       		.uleb128 0x12
 1154 005a 06       		.uleb128 0x6
 1155 005b 40       		.uleb128 0x40
 1156 005c 18       		.uleb128 0x18
 1157 005d 9742     		.uleb128 0x2117
 1158 005f 19       		.uleb128 0x19
 1159 0060 00       		.byte	0
 1160 0061 00       		.byte	0
 1161 0062 08       		.uleb128 0x8
 1162 0063 2E       		.uleb128 0x2e
 1163 0064 01       		.byte	0x1
 1164 0065 3F       		.uleb128 0x3f
 1165 0066 19       		.uleb128 0x19
 1166 0067 03       		.uleb128 0x3
 1167 0068 0E       		.uleb128 0xe
 1168 0069 3A       		.uleb128 0x3a
 1169 006a 0B       		.uleb128 0xb
 1170 006b 3B       		.uleb128 0x3b
 1171 006c 0B       		.uleb128 0xb
 1172 006d 27       		.uleb128 0x27
 1173 006e 19       		.uleb128 0x19
 1174 006f 49       		.uleb128 0x49
 1175 0070 13       		.uleb128 0x13
 1176 0071 8701     		.uleb128 0x87
 1177 0073 19       		.uleb128 0x19
 1178 0074 11       		.uleb128 0x11
 1179 0075 01       		.uleb128 0x1
 1180 0076 12       		.uleb128 0x12
 1181 0077 06       		.uleb128 0x6
 1182 0078 40       		.uleb128 0x40
 1183 0079 18       		.uleb128 0x18
 1184 007a 9742     		.uleb128 0x2117
ARM GAS  C:\Users\smas270\AppData\Local\Temp\cc9xSgfA.s 			page 26


 1185 007c 19       		.uleb128 0x19
 1186 007d 01       		.uleb128 0x1
 1187 007e 13       		.uleb128 0x13
 1188 007f 00       		.byte	0
 1189 0080 00       		.byte	0
 1190 0081 09       		.uleb128 0x9
 1191 0082 0B       		.uleb128 0xb
 1192 0083 01       		.byte	0x1
 1193 0084 11       		.uleb128 0x11
 1194 0085 01       		.uleb128 0x1
 1195 0086 12       		.uleb128 0x12
 1196 0087 06       		.uleb128 0x6
 1197 0088 01       		.uleb128 0x1
 1198 0089 13       		.uleb128 0x13
 1199 008a 00       		.byte	0
 1200 008b 00       		.byte	0
 1201 008c 0A       		.uleb128 0xa
 1202 008d 34       		.uleb128 0x34
 1203 008e 00       		.byte	0
 1204 008f 03       		.uleb128 0x3
 1205 0090 08       		.uleb128 0x8
 1206 0091 3A       		.uleb128 0x3a
 1207 0092 0B       		.uleb128 0xb
 1208 0093 3B       		.uleb128 0x3b
 1209 0094 0B       		.uleb128 0xb
 1210 0095 49       		.uleb128 0x49
 1211 0096 13       		.uleb128 0x13
 1212 0097 02       		.uleb128 0x2
 1213 0098 17       		.uleb128 0x17
 1214 0099 00       		.byte	0
 1215 009a 00       		.byte	0
 1216 009b 0B       		.uleb128 0xb
 1217 009c 0B       		.uleb128 0xb
 1218 009d 01       		.byte	0x1
 1219 009e 55       		.uleb128 0x55
 1220 009f 17       		.uleb128 0x17
 1221 00a0 01       		.uleb128 0x1
 1222 00a1 13       		.uleb128 0x13
 1223 00a2 00       		.byte	0
 1224 00a3 00       		.byte	0
 1225 00a4 0C       		.uleb128 0xc
 1226 00a5 898201   		.uleb128 0x4109
 1227 00a8 01       		.byte	0x1
 1228 00a9 11       		.uleb128 0x11
 1229 00aa 01       		.uleb128 0x1
 1230 00ab 31       		.uleb128 0x31
 1231 00ac 13       		.uleb128 0x13
 1232 00ad 01       		.uleb128 0x1
 1233 00ae 13       		.uleb128 0x13
 1234 00af 00       		.byte	0
 1235 00b0 00       		.byte	0
 1236 00b1 0D       		.uleb128 0xd
 1237 00b2 8A8201   		.uleb128 0x410a
 1238 00b5 00       		.byte	0
 1239 00b6 02       		.uleb128 0x2
 1240 00b7 18       		.uleb128 0x18
 1241 00b8 9142     		.uleb128 0x2111
ARM GAS  C:\Users\smas270\AppData\Local\Temp\cc9xSgfA.s 			page 27


 1242 00ba 18       		.uleb128 0x18
 1243 00bb 00       		.byte	0
 1244 00bc 00       		.byte	0
 1245 00bd 0E       		.uleb128 0xe
 1246 00be 898201   		.uleb128 0x4109
 1247 00c1 00       		.byte	0
 1248 00c2 11       		.uleb128 0x11
 1249 00c3 01       		.uleb128 0x1
 1250 00c4 31       		.uleb128 0x31
 1251 00c5 13       		.uleb128 0x13
 1252 00c6 00       		.byte	0
 1253 00c7 00       		.byte	0
 1254 00c8 0F       		.uleb128 0xf
 1255 00c9 34       		.uleb128 0x34
 1256 00ca 00       		.byte	0
 1257 00cb 03       		.uleb128 0x3
 1258 00cc 0E       		.uleb128 0xe
 1259 00cd 3A       		.uleb128 0x3a
 1260 00ce 0B       		.uleb128 0xb
 1261 00cf 3B       		.uleb128 0x3b
 1262 00d0 05       		.uleb128 0x5
 1263 00d1 49       		.uleb128 0x49
 1264 00d2 13       		.uleb128 0x13
 1265 00d3 3F       		.uleb128 0x3f
 1266 00d4 19       		.uleb128 0x19
 1267 00d5 3C       		.uleb128 0x3c
 1268 00d6 19       		.uleb128 0x19
 1269 00d7 00       		.byte	0
 1270 00d8 00       		.byte	0
 1271 00d9 10       		.uleb128 0x10
 1272 00da 34       		.uleb128 0x34
 1273 00db 00       		.byte	0
 1274 00dc 03       		.uleb128 0x3
 1275 00dd 0E       		.uleb128 0xe
 1276 00de 3A       		.uleb128 0x3a
 1277 00df 0B       		.uleb128 0xb
 1278 00e0 3B       		.uleb128 0x3b
 1279 00e1 0B       		.uleb128 0xb
 1280 00e2 49       		.uleb128 0x49
 1281 00e3 13       		.uleb128 0x13
 1282 00e4 3F       		.uleb128 0x3f
 1283 00e5 19       		.uleb128 0x19
 1284 00e6 02       		.uleb128 0x2
 1285 00e7 18       		.uleb128 0x18
 1286 00e8 00       		.byte	0
 1287 00e9 00       		.byte	0
 1288 00ea 11       		.uleb128 0x11
 1289 00eb 34       		.uleb128 0x34
 1290 00ec 00       		.byte	0
 1291 00ed 03       		.uleb128 0x3
 1292 00ee 08       		.uleb128 0x8
 1293 00ef 3A       		.uleb128 0x3a
 1294 00f0 0B       		.uleb128 0xb
 1295 00f1 3B       		.uleb128 0x3b
 1296 00f2 0B       		.uleb128 0xb
 1297 00f3 49       		.uleb128 0x49
 1298 00f4 13       		.uleb128 0x13
ARM GAS  C:\Users\smas270\AppData\Local\Temp\cc9xSgfA.s 			page 28


 1299 00f5 3F       		.uleb128 0x3f
 1300 00f6 19       		.uleb128 0x19
 1301 00f7 02       		.uleb128 0x2
 1302 00f8 18       		.uleb128 0x18
 1303 00f9 00       		.byte	0
 1304 00fa 00       		.byte	0
 1305 00fb 12       		.uleb128 0x12
 1306 00fc 01       		.uleb128 0x1
 1307 00fd 01       		.byte	0x1
 1308 00fe 49       		.uleb128 0x49
 1309 00ff 13       		.uleb128 0x13
 1310 0100 01       		.uleb128 0x1
 1311 0101 13       		.uleb128 0x13
 1312 0102 00       		.byte	0
 1313 0103 00       		.byte	0
 1314 0104 13       		.uleb128 0x13
 1315 0105 21       		.uleb128 0x21
 1316 0106 00       		.byte	0
 1317 0107 49       		.uleb128 0x49
 1318 0108 13       		.uleb128 0x13
 1319 0109 2F       		.uleb128 0x2f
 1320 010a 0B       		.uleb128 0xb
 1321 010b 00       		.byte	0
 1322 010c 00       		.byte	0
 1323 010d 14       		.uleb128 0x14
 1324 010e 2E       		.uleb128 0x2e
 1325 010f 00       		.byte	0
 1326 0110 3F       		.uleb128 0x3f
 1327 0111 19       		.uleb128 0x19
 1328 0112 3C       		.uleb128 0x3c
 1329 0113 19       		.uleb128 0x19
 1330 0114 6E       		.uleb128 0x6e
 1331 0115 0E       		.uleb128 0xe
 1332 0116 03       		.uleb128 0x3
 1333 0117 0E       		.uleb128 0xe
 1334 0118 3A       		.uleb128 0x3a
 1335 0119 0B       		.uleb128 0xb
 1336 011a 3B       		.uleb128 0x3b
 1337 011b 0B       		.uleb128 0xb
 1338 011c 00       		.byte	0
 1339 011d 00       		.byte	0
 1340 011e 00       		.byte	0
 1341              		.section	.debug_loc,"",%progbits
 1342              	.Ldebug_loc0:
 1343              	.LLST0:
 1344 0000 1C000000 		.4byte	.LVL4
 1345 0004 20000000 		.4byte	.LVL5
 1346 0008 0200     		.2byte	0x2
 1347 000a 30       		.byte	0x30
 1348 000b 9F       		.byte	0x9f
 1349 000c 20000000 		.4byte	.LVL5
 1350 0010 2F000000 		.4byte	.LVL7-1
 1351 0014 0100     		.2byte	0x1
 1352 0016 53       		.byte	0x53
 1353 0017 00000000 		.4byte	0
 1354 001b 00000000 		.4byte	0
 1355              	.LLST1:
ARM GAS  C:\Users\smas270\AppData\Local\Temp\cc9xSgfA.s 			page 29


 1356 001f 6E000000 		.4byte	.LVL11
 1357 0023 82000000 		.4byte	.LVL13
 1358 0027 0100     		.2byte	0x1
 1359 0029 53       		.byte	0x53
 1360 002a 84000000 		.4byte	.LVL14
 1361 002e 88000000 		.4byte	.LVL15
 1362 0032 0100     		.2byte	0x1
 1363 0034 53       		.byte	0x53
 1364 0035 00000000 		.4byte	0
 1365 0039 00000000 		.4byte	0
 1366              		.section	.debug_aranges,"",%progbits
 1367 0000 2C000000 		.4byte	0x2c
 1368 0004 0200     		.2byte	0x2
 1369 0006 00000000 		.4byte	.Ldebug_info0
 1370 000a 04       		.byte	0x4
 1371 000b 00       		.byte	0
 1372 000c 0000     		.2byte	0
 1373 000e 0000     		.2byte	0
 1374 0010 00000000 		.4byte	.LFB63
 1375 0014 24000000 		.4byte	.LFE63-.LFB63
 1376 0018 00000000 		.4byte	.LFB64
 1377 001c 0C000000 		.4byte	.LFE64-.LFB64
 1378 0020 00000000 		.4byte	.LFB65
 1379 0024 90020000 		.4byte	.LFE65-.LFB65
 1380 0028 00000000 		.4byte	0
 1381 002c 00000000 		.4byte	0
 1382              		.section	.debug_ranges,"",%progbits
 1383              	.Ldebug_ranges0:
 1384 0000 6E000000 		.4byte	.LBB3
 1385 0004 82000000 		.4byte	.LBE3
 1386 0008 84000000 		.4byte	.LBB4
 1387 000c 88000000 		.4byte	.LBE4
 1388 0010 00000000 		.4byte	0
 1389 0014 00000000 		.4byte	0
 1390 0018 00000000 		.4byte	.LFB63
 1391 001c 24000000 		.4byte	.LFE63
 1392 0020 00000000 		.4byte	.LFB64
 1393 0024 0C000000 		.4byte	.LFE64
 1394 0028 00000000 		.4byte	.LFB65
 1395 002c 90020000 		.4byte	.LFE65
 1396 0030 00000000 		.4byte	0
 1397 0034 00000000 		.4byte	0
 1398              		.section	.debug_line,"",%progbits
 1399              	.Ldebug_line0:
 1400 0000 70020000 		.section	.debug_str,"MS",%progbits,1
 1400      0200AF01 
 1400      00000201 
 1400      FB0E0D00 
 1400      01010101 
 1401              	.LASF22:
 1402 0000 6368616E 		.ascii	"channel\000"
 1402      6E656C00 
 1403              	.LASF25:
 1404 0008 73746174 		.ascii	"state\000"
 1404      6500
 1405              	.LASF26:
 1406 000e 72657365 		.ascii	"reset\000"
ARM GAS  C:\Users\smas270\AppData\Local\Temp\cc9xSgfA.s 			page 30


 1406      7400
 1407              	.LASF9:
 1408 0014 5F5F696E 		.ascii	"__int32_t\000"
 1408      7433325F 
 1408      7400
 1409              	.LASF3:
 1410 001e 73686F72 		.ascii	"short unsigned int\000"
 1410      7420756E 
 1410      7369676E 
 1410      65642069 
 1410      6E7400
 1411              	.LASF46:
 1412 0031 5C5C6669 		.ascii	"\\\\files.auckland.ac.nz\\myhome\\Downloads\\ENGGEN"
 1412      6C65732E 
 1412      6175636B 
 1412      6C616E64 
 1412      2E61632E 
 1413 005f 20323039 		.ascii	" 209 Github\\project-project-group-7\\301 Project\\"
 1413      20476974 
 1413      6875625C 
 1413      70726F6A 
 1413      6563742D 
 1414 008f 53656E73 		.ascii	"Sensor Test.cydsn\000"
 1414      6F722054 
 1414      6573742E 
 1414      63796473 
 1414      6E00
 1415              	.LASF42:
 1416 00a1 7475726E 		.ascii	"turn_left\000"
 1416      5F6C6566 
 1416      7400
 1417              	.LASF10:
 1418 00ab 696E7433 		.ascii	"int32_t\000"
 1418      325F7400 
 1419              	.LASF34:
 1420 00b3 4144435F 		.ascii	"ADC_SAR_Seq_1_Start\000"
 1420      5341525F 
 1420      5365715F 
 1420      315F5374 
 1420      61727400 
 1421              	.LASF14:
 1422 00c7 666C6F61 		.ascii	"float\000"
 1422      7400
 1423              	.LASF36:
 1424 00cd 54696D65 		.ascii	"Timer_1_Start\000"
 1424      725F315F 
 1424      53746172 
 1424      7400
 1425              	.LASF1:
 1426 00db 756E7369 		.ascii	"unsigned char\000"
 1426      676E6564 
 1426      20636861 
 1426      7200
 1427              	.LASF44:
 1428 00e9 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1428      43313120 
 1428      352E342E 
ARM GAS  C:\Users\smas270\AppData\Local\Temp\cc9xSgfA.s 			page 31


 1428      31203230 
 1428      31363036 
 1429 011c 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1429      20726576 
 1429      6973696F 
 1429      6E203233 
 1429      37373135 
 1430 014f 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1430      66756E63 
 1430      74696F6E 
 1430      2D736563 
 1430      74696F6E 
 1431              	.LASF5:
 1432 0177 6C6F6E67 		.ascii	"long unsigned int\000"
 1432      20756E73 
 1432      69676E65 
 1432      6420696E 
 1432      7400
 1433              	.LASF43:
 1434 0189 7475726E 		.ascii	"turn_right\000"
 1434      5F726967 
 1434      687400
 1435              	.LASF41:
 1436 0194 73746F70 		.ascii	"stop\000"
 1436      00
 1437              	.LASF21:
 1438 0199 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1438      52784275 
 1438      66666572 
 1438      00
 1439              	.LASF15:
 1440 01a6 646F7562 		.ascii	"double\000"
 1440      6C6500
 1441              	.LASF23:
 1442 01ad 41444352 		.ascii	"ADCResult\000"
 1442      6573756C 
 1442      7400
 1443              	.LASF47:
 1444 01b7 6D61696E 		.ascii	"main\000"
 1444      00
 1445              	.LASF12:
 1446 01bc 75696E74 		.ascii	"uint16\000"
 1446      313600
 1447              	.LASF31:
 1448 01c3 6973725F 		.ascii	"isr_eoc_1_StartEx\000"
 1448      656F635F 
 1448      315F5374 
 1448      61727445 
 1448      7800
 1449              	.LASF13:
 1450 01d5 75696E74 		.ascii	"uint32\000"
 1450      333200
 1451              	.LASF8:
 1452 01dc 756E7369 		.ascii	"unsigned int\000"
 1452      676E6564 
 1452      20696E74 
 1452      00
ARM GAS  C:\Users\smas270\AppData\Local\Temp\cc9xSgfA.s 			page 32


 1453              	.LASF35:
 1454 01e9 4144435F 		.ascii	"ADC_SAR_Seq_1_StartConvert\000"
 1454      5341525F 
 1454      5365715F 
 1454      315F5374 
 1454      61727443 
 1455              	.LASF28:
 1456 0204 70617374 		.ascii	"pastValues\000"
 1456      56616C75 
 1456      657300
 1457              	.LASF7:
 1458 020f 6C6F6E67 		.ascii	"long long unsigned int\000"
 1458      206C6F6E 
 1458      6720756E 
 1458      7369676E 
 1458      65642069 
 1459              	.LASF20:
 1460 0226 6973725F 		.ascii	"isr_timer_1\000"
 1460      74696D65 
 1460      725F3100 
 1461              	.LASF32:
 1462 0232 6973725F 		.ascii	"isr_timer_1_StartEx\000"
 1462      74696D65 
 1462      725F315F 
 1462      53746172 
 1462      74457800 
 1463              	.LASF30:
 1464 0246 73656E73 		.ascii	"sensor_state\000"
 1464      6F725F73 
 1464      74617465 
 1464      00
 1465              	.LASF17:
 1466 0253 6C6F6E67 		.ascii	"long double\000"
 1466      20646F75 
 1466      626C6500 
 1467              	.LASF18:
 1468 025f 73697A65 		.ascii	"sizetype\000"
 1468      74797065 
 1468      00
 1469              	.LASF6:
 1470 0268 6C6F6E67 		.ascii	"long long int\000"
 1470      206C6F6E 
 1470      6720696E 
 1470      7400
 1471              	.LASF45:
 1472 0276 6D61696E 		.ascii	"main.c\000"
 1472      2E6300
 1473              	.LASF16:
 1474 027d 63686172 		.ascii	"char\000"
 1474      00
 1475              	.LASF40:
 1476 0282 6D6F7665 		.ascii	"move_forward\000"
 1476      5F666F72 
 1476      77617264 
 1476      00
 1477              	.LASF39:
 1478 028f 4144435F 		.ascii	"ADC_SAR_Seq_1_CountsTo_mVolts\000"
ARM GAS  C:\Users\smas270\AppData\Local\Temp\cc9xSgfA.s 			page 33


 1478      5341525F 
 1478      5365715F 
 1478      315F436F 
 1478      756E7473 
 1479              	.LASF29:
 1480 02ad 636F756E 		.ascii	"count\000"
 1480      7400
 1481              	.LASF2:
 1482 02b3 73686F72 		.ascii	"short int\000"
 1482      7420696E 
 1482      7400
 1483              	.LASF27:
 1484 02bd 6D617856 		.ascii	"maxValues\000"
 1484      616C7565 
 1484      7300
 1485              	.LASF11:
 1486 02c7 75696E74 		.ascii	"uint8\000"
 1486      3800
 1487              	.LASF19:
 1488 02cd 6973725F 		.ascii	"isr_eoc_1\000"
 1488      656F635F 
 1488      3100
 1489              	.LASF4:
 1490 02d7 6C6F6E67 		.ascii	"long int\000"
 1490      20696E74 
 1490      00
 1491              	.LASF37:
 1492 02e0 4144435F 		.ascii	"ADC_SAR_Seq_1_IsEndConversion\000"
 1492      5341525F 
 1492      5365715F 
 1492      315F4973 
 1492      456E6443 
 1493              	.LASF33:
 1494 02fe 4144435F 		.ascii	"ADC_SAR_Seq_1_IRQ_Enable\000"
 1494      5341525F 
 1494      5365715F 
 1494      315F4952 
 1494      515F456E 
 1495              	.LASF0:
 1496 0317 7369676E 		.ascii	"signed char\000"
 1496      65642063 
 1496      68617200 
 1497              	.LASF24:
 1498 0323 6D696C6C 		.ascii	"milliVoltReading\000"
 1498      69566F6C 
 1498      74526561 
 1498      64696E67 
 1498      00
 1499              	.LASF38:
 1500 0334 4144435F 		.ascii	"ADC_SAR_Seq_1_GetResult16\000"
 1500      5341525F 
 1500      5365715F 
 1500      315F4765 
 1500      74526573 
 1501              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
